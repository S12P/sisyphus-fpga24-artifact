option solver gurobi;
option gurobi_options 'lim:time=14400 tech:logfile=gurobi.log qp:nonconvex=2 mip:gap=0.0000000001';

#Size array r: [410]
#Size array s: [390]
#Size array q: [410]
#Size array A: [410, 390]
#Size array p: [390]
#loop_0 iterates Array s in dim 0
#loop_1 iterates Array q in dim 0
#loop_2 iterates Array s in dim 0
#loop_3 iterates Array r in dim 0
#loop_2 iterates Array A in dim 1
#loop_3 iterates Array A in dim 0
#loop_2 iterates Array s in dim 0
#loop_4 iterates Array q in dim 0
#loop_4 iterates Array A in dim 0
#loop_5 iterates Array A in dim 1
#loop_5 iterates Array p in dim 0
#loop_4 iterates Array q in dim 0
#schedule 0 0 0
#iterators i
#loop_0 := False
#schedule 1 1 0
#iterators i
#loop_1 := False
#schedule 2 2 0 3 0
#iterators j i
#loop_2 := False
#loop_3 := True
#schedule 3 4 0 5 0
#iterators i j
#loop_4 := False
#loop_5 := True
param DSP_avail = 1804;
param ON_CHIP_MEM_SIZE = 453600;
param CONSTRAINT_ARRAY_PARTITIONING_VALUE = 1024;
param BRAM = 4320;
param size_data_type = 32;
param optimist_reuse_dsp=1;
param TC0 = 390;
param TC1 = 410;
param TC2 = 390;
param TC3 = 410;
param TC4 = 410;
param TC5 = 390;
param TREE_REDUCTION=1;
param IL_par_S0 = 1;
param IL_seq_S0 = 0;
param IL_par_S1 = 1;
param IL_seq_S1 = 0;
param IL_par_S2 = 6;
param IL_seq_S2 = 7;
param IL_par_S3 = 6;
param IL_seq_S3 = 7;
param DSP_S0 = 0;
param DSP_S1 = 0;
param DSP_S2 = 5;
param DSP_S3 = 5;
param footprint_s_S0 = 390;
param footprint_q_S1 = 410;
param footprint_s_S2 = 390;
param footprint_r_S2 = 410;
param footprint_A_S2 = 159900;
param footprint_q_S3 = 410;
param footprint_A_S3 = 159900;
param footprint_p_S3 = 390;
param footprint_tot_r = 410;
param burst_size_tot_r = 2;
param footprint_tot_s = 390;
param burst_size_tot_s = 2;
param footprint_tot_q = 410;
param burst_size_tot_q = 2;
param footprint_tot_A = 159900;
param burst_size_tot_A = 2;
param footprint_tot_p = 390;
param burst_size_tot_p = 2;

var TC0_0 integer >= 1 <=TC0;
var TC0_1 integer >= 1 <=TC0;
var TC0_2 integer >= 1 <=TC0;
var TC1_0 integer >= 1 <=TC1;
var TC1_1 integer >= 1 <=TC1;
var TC1_2 integer >= 1 <=TC1;
var TC2_0 integer >= 1 <=TC2;
var TC2_1 integer >= 1 <=TC2;
var TC2_2 integer >= 1 <=TC2;
var TC3_0 integer >= 1 <=TC3;
var TC3_1 integer >= 1 <=TC3;
var TC3_2 integer >= 1 <=TC3;
var TC4_0 integer >= 1 <=TC4;
var TC4_1 integer >= 1 <=TC4;
var TC4_2 integer >= 1 <=TC4;
var TC5_0 integer >= 1 <=TC5;
var TC5_1 integer >= 1 <=TC5;
var TC5_2 integer >= 1 <=TC5;
var perm0_S0 binary; # (0,)
var perm0_S1 binary; # (1,)
var perm0_S2 binary; # (2, 3)
var perm1_S2 binary; # (3, 2)
var perm0_S3 binary; # (4, 5)
var perm1_S3 binary; # (5, 4)
var loop0_UF integer >= 1 <=TC0;
var loop1_UF integer >= 1 <=TC1;
var loop2_UF integer >= 1 <=TC2;
var loop4_UF integer >= 1 <=TC4;
var Lat_comp_S0 >= 0;
var Lat_comp_S0_no_tree >= 0;
var Lat_comp_S1 >= 0;
var Lat_comp_S1_no_tree >= 0;
var Lat_comp_S2 >= 0;
var Lat_comp_S2_no_tree >= 0;
var Lat_comp_S3 >= 0;
var Lat_comp_S3_no_tree >= 0;
var II_S0 integer >= 1;
var II_S1 integer >= 1;
var II_S2 integer >= 1;
var II_S3 integer >= 1;
var is_loop0_pip binary;
var is_loop1_pip binary;
var is_loop2_pip binary;
var is_loop3_pip binary;
var is_loop4_pip binary;
var is_loop5_pip binary;
var AP_r_0 integer >= 1;
var constant0 integer >= 1;
var cte_0 integer >= 1;
var cte_1 integer >= 1;
var AP_s_0 integer >= 1;
var constant1 integer >= 1;
var cte_2 integer >= 1;
var cte_3 integer >= 1;
var cte_4 integer >= 1;
var AP_q_0 integer >= 1;
var constant2 integer >= 1;
var cte_5 integer >= 1;
var cte_6 integer >= 1;
var cte_7 integer >= 1;
var AP_A_0 integer >= 1;
var cte_8 integer >= 1;
var cte_9 integer >= 1;
var cte_10 integer >= 1;
var AP_A_1 integer >= 1;
var constant3 integer >= 1;
var cte_11 integer >= 1;
var cte_12 integer >= 1;
var cte_13 integer >= 1;
var AP_p_0 integer >= 1;
var constant4 integer >= 1;
var cte_14 integer >= 1;
var cte_15 integer >= 1;
var Lat_comm >= 0;
var transfer_r_total binary;
var transfer_s_total binary;
var transfer_q_total binary;
var transfer_A_total binary;
var transfer_p_total binary;
var transfer_r_S2_under_loop3 binary;
var burst_r_S2_under_loop3 integer >= 1 <=burst_size_tot_r;
var transfer_s_S0_under_loop0 binary;
var burst_s_S0_under_loop0 integer >= 1 <=burst_size_tot_s;
var transfer_s_S2_under_loop2 binary;
var burst_s_S2_under_loop2 integer >= 1 <=burst_size_tot_s;
var transfer_q_S1_under_loop1 binary;
var burst_q_S1_under_loop1 integer >= 1 <=burst_size_tot_q;
var transfer_q_S3_under_loop4 binary;
var burst_q_S3_under_loop4 integer >= 1 <=burst_size_tot_q;
var transfer_A_S2_under_loop3 binary;
var burst_A_S2_under_loop3 integer >= 1 <=burst_size_tot_A;
var transfer_A_S2_under_loop2 binary;
var burst_A_S2_under_loop2 integer >= 1 <=burst_size_tot_A;
var transfer_A_S3_under_loop4 binary;
var burst_A_S3_under_loop4 integer >= 1 <=burst_size_tot_A;
var transfer_A_S3_under_loop5 binary;
var burst_A_S3_under_loop5 integer >= 1 <=burst_size_tot_A;
var transfer_p_S3_under_loop5 binary;
var burst_p_S3_under_loop5 integer >= 1 <=burst_size_tot_p;
var burst_size_r integer >= 1 <=2;
var cte_burst_size_r integer >= 1;
var is_burst_size_r_16 binary;
var is_burst_size_r_8 binary;
var is_burst_size_r_4 binary;
var is_burst_size_r_2 binary;
var is_burst_size_r_1 binary;
var burst_size_s integer >= 1 <=2;
var cte_burst_size_s integer >= 1;
var is_burst_size_s_16 binary;
var is_burst_size_s_8 binary;
var is_burst_size_s_4 binary;
var is_burst_size_s_2 binary;
var is_burst_size_s_1 binary;
var burst_size_q integer >= 1 <=2;
var cte_burst_size_q integer >= 1;
var is_burst_size_q_16 binary;
var is_burst_size_q_8 binary;
var is_burst_size_q_4 binary;
var is_burst_size_q_2 binary;
var is_burst_size_q_1 binary;
var burst_size_A integer >= 1 <=2;
var cte_burst_size_A integer >= 1;
var is_burst_size_A_16 binary;
var is_burst_size_A_8 binary;
var is_burst_size_A_4 binary;
var is_burst_size_A_2 binary;
var is_burst_size_A_1 binary;
var burst_size_p integer >= 1 <=2;
var cte_burst_size_p integer >= 1;
var is_burst_size_p_16 binary;
var is_burst_size_p_8 binary;
var is_burst_size_p_4 binary;
var is_burst_size_p_2 binary;
var is_burst_size_p_1 binary;
var Lat_comm_read_S0;
var Lat_comm_write_S0;
var Lat_comm_read_S1;
var Lat_comm_write_S1;
var Lat_comm_read_S2;
var Lat_comm_write_S2;
var Lat_comm_read_S3;
var Lat_comm_write_S3;
var ceil0 integer >= 0;
var ceil1 integer >= 0;
var ceil2 integer >= 0;
var ceil3 integer >= 0;
var ceil4 integer >= 0;
var ceil5 integer >= 0;
var ceil6 integer >= 0;
var ceil7 integer >= 0;
var ceil8 integer >= 0;
var ceil9 integer >= 0;

minimize cost: Lat_comp_S0 + Lat_comp_S1 + Lat_comp_S2 + Lat_comp_S3 + Lat_comm;

subject to con0: TC0 = TC0_0 * TC0_1 * TC0_2;
subject to con1: TC1 = TC1_0 * TC1_1 * TC1_2;
subject to con2: TC2 = TC2_0 * TC2_1 * TC2_2;
subject to con3: TC3 = TC3_0 * TC3_1 * TC3_2;
subject to con4: TC4 = TC4_0 * TC4_1 * TC4_2;
subject to con5: TC5 = TC5_0 * TC5_1 * TC5_2;
subject to con6: perm0_S0 = 1;
subject to con7: perm0_S1 = 1;
subject to con8: perm0_S2 + perm1_S2 = 1;
subject to con9: perm0_S3 + perm1_S3 = 1;
subject to con10: loop0_UF = 1;
subject to con11: loop1_UF = 1;
subject to con12: loop2_UF = 1;
subject to con13: loop4_UF = 1;
subject to con14: DSP_S2 * TC2_2 * TC3_2 * loop2_UF <= DSP_avail * II_S2;
subject to con15: TC2_2 * TC3_2 * loop2_UF <= 256;
subject to con16: DSP_S3 * TC4_2 * TC5_2 * loop4_UF <= DSP_avail * II_S3;
subject to con17: TC4_2 * TC5_2 * loop4_UF <= 256;
subject to con18: (1-optimist_reuse_dsp) * (DSP_S2 * TC2_2 * TC3_2 * loop2_UF) / II_S2 + (DSP_S3 * TC4_2 * TC5_2 * loop4_UF) / II_S3 <= DSP_avail;
subject to con19: loop0_UF <= TC0_0;
subject to con20: Lat_comp_S0 = TREE_REDUCTION * (TC0_0 / loop0_UF * (IL_par_S0 + II_S0 * (TC0_1 - 1))) + (1-TREE_REDUCTION) * (TC0_0 / loop0_UF * (IL_par_S0 + II_S0 * (TC0_1 - 1))) ;
subject to con21: loop1_UF <= TC1_0;
subject to con22: Lat_comp_S1 = TREE_REDUCTION * (TC1_0 / loop1_UF * (IL_par_S1 + II_S1 * (TC1_1 - 1))) + (1-TREE_REDUCTION) * (TC1_0 / loop1_UF * (IL_par_S1 + II_S1 * (TC1_1 - 1))) ;
subject to con23: loop2_UF <= TC2_0;
subject to con24: Lat_comp_S2 = TREE_REDUCTION * (TC2_0 / loop2_UF * TC3_0 * (IL_par_S2 + IL_seq_S2 * log(TC3_2)/log(2) + II_S2 * (TC2_1 * TC3_1 - 1))) + (1-TREE_REDUCTION) * (TC2_0 / loop2_UF * TC3_0 * (IL_par_S2 + IL_seq_S2 * TC3_2 + II_S2 * (TC2_1 * TC3_1 - 1))) ;
subject to con25: loop4_UF <= TC4_0;
subject to con26: Lat_comp_S3 = TREE_REDUCTION * (TC4_0 / loop4_UF * TC5_0 * (IL_par_S3 + IL_seq_S3 * log(TC5_2)/log(2) + II_S3 * (TC4_1 * TC5_1 - 1))) + (1-TREE_REDUCTION) * (TC4_0 / loop4_UF * TC5_0 * (IL_par_S3 + IL_seq_S3 * TC5_2 + II_S3 * (TC4_1 * TC5_1 - 1))) ;
subject to con27: II_S0 = 1;
subject to con28: is_loop0_pip * TC0_1 >= is_loop0_pip * 2;
subject to con29: is_loop0_pip = 1;
subject to con30: II_S1 = 1;
subject to con31: is_loop1_pip * TC1_1 >= is_loop1_pip * 2;
subject to con32: is_loop1_pip = 1;
subject to con33: is_loop2_pip * TC3_1 = is_loop2_pip * 1;
subject to con34: is_loop2_pip * TC2_1 >= is_loop2_pip * 2;
subject to con35: is_loop3_pip * TC2_1 = is_loop3_pip * 1;
subject to con36: is_loop3_pip * TC3_1 >= is_loop3_pip * 2;
subject to con37: is_loop2_pip + is_loop3_pip = 1;
subject to con38: II_S2 = 1 * is_loop2_pip + 6 * is_loop3_pip * TREE_REDUCTION + 7 * TC3_2 * is_loop3_pip * (1 - TREE_REDUCTION);
subject to con39: is_loop4_pip * TC5_1 = is_loop4_pip * 1;
subject to con40: is_loop4_pip * TC4_1 >= is_loop4_pip * 2;
subject to con41: is_loop5_pip * TC4_1 = is_loop5_pip * 1;
subject to con42: is_loop5_pip * TC5_1 >= is_loop5_pip * 2;
subject to con43: is_loop4_pip + is_loop5_pip = 1;
subject to con44: II_S3 = 1 * is_loop4_pip + 6 * is_loop5_pip * TREE_REDUCTION + 7 * TC5_2 * is_loop5_pip * (1 - TREE_REDUCTION);
subject to con45: AP_r_0 = burst_size_r * constant0;
#subject to con46: TC3_2 <= AP_r_0;
subject to con47: AP_r_0 = TC3_2 * cte_0;
subject to con48: TC3_2 <= AP_r_0;
subject to con49: AP_r_0 <= 410;
#subject to con50: 410 = AP_r_0 * cte_1;
subject to con51: AP_r_0 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
subject to con52: AP_s_0 = burst_size_s * constant1;
#subject to con53: loop0_UF * TC0_2 + loop2_UF * TC2_2 <= AP_s_0;
subject to con54: AP_s_0 = loop0_UF * TC0_2  * cte_2;
subject to con55: loop0_UF * TC0_2  <= AP_s_0;
subject to con56: AP_s_0 =  loop2_UF * TC2_2 * cte_3;
subject to con57:  loop2_UF * TC2_2 <= AP_s_0;
subject to con58: AP_s_0 <= 390;
#subject to con59: 390 = AP_s_0 * cte_4;
subject to con60: AP_s_0 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
subject to con61: AP_q_0 = burst_size_q * constant2;
#subject to con62: loop1_UF * TC1_2 + loop4_UF * TC4_2 <= AP_q_0;
subject to con63: AP_q_0 = loop1_UF * TC1_2  * cte_5;
subject to con64: loop1_UF * TC1_2  <= AP_q_0;
subject to con65: AP_q_0 =  loop4_UF * TC4_2 * cte_6;
subject to con66:  loop4_UF * TC4_2 <= AP_q_0;
subject to con67: AP_q_0 <= 410;
#subject to con68: 410 = AP_q_0 * cte_7;
subject to con69: AP_q_0 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con70: TC3_2 + loop4_UF * TC4_2 <= AP_A_0;
subject to con71: AP_A_0 = TC3_2  * cte_8;
subject to con72: TC3_2  <= AP_A_0;
subject to con73: AP_A_0 =  loop4_UF * TC4_2 * cte_9;
subject to con74:  loop4_UF * TC4_2 <= AP_A_0;
subject to con75: AP_A_0 <= 410;
#subject to con76: 410 = AP_A_0 * cte_10;
subject to con77: AP_A_1 = burst_size_A * constant3;
#subject to con78: loop2_UF * TC2_2 + TC5_2 <= AP_A_1;
subject to con79: AP_A_1 = loop2_UF * TC2_2  * cte_11;
subject to con80: loop2_UF * TC2_2  <= AP_A_1;
subject to con81: AP_A_1 =  TC5_2 * cte_12;
subject to con82:  TC5_2 <= AP_A_1;
subject to con83: AP_A_1 <= 390;
#subject to con84: 390 = AP_A_1 * cte_13;
subject to con85: AP_A_0 * AP_A_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
subject to con86: AP_p_0 = burst_size_p * constant4;
#subject to con87: TC5_2 <= AP_p_0;
subject to con88: AP_p_0 = TC5_2 * cte_14;
subject to con89: TC5_2 <= AP_p_0;
subject to con90: AP_p_0 <= 390;
#subject to con91: 390 = AP_p_0 * cte_15;
subject to con92: AP_p_0 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
subject to con93: transfer_r_S2_under_loop3 * TC3_0 >= transfer_r_S2_under_loop3 * 2;
subject to con94: burst_r_S2_under_loop3 = 1;
subject to con95: transfer_r_S2_under_loop3 * TC3_0 >= transfer_r_S2_under_loop3 * 2;
subject to con96: transfer_r_S2_under_loop3 + transfer_r_total = 1;
subject to con97: transfer_s_S0_under_loop0 * TC0_0 >= transfer_s_S0_under_loop0 * 2;
subject to con98: burst_s_S0_under_loop0 = 1;
subject to con99: transfer_s_S0_under_loop0 + transfer_s_total = 1;
subject to con100: transfer_s_S2_under_loop2 * TC2_0 >= transfer_s_S2_under_loop2 * 2;
subject to con101: burst_s_S2_under_loop2 = 1;
subject to con102: transfer_s_S2_under_loop2 * TC2_0 >= transfer_s_S2_under_loop2 * 2;
subject to con103: transfer_s_S2_under_loop2 + transfer_s_total = 1;
subject to con104: transfer_q_S1_under_loop1 * TC1_0 >= transfer_q_S1_under_loop1 * 2;
subject to con105: burst_q_S1_under_loop1 = 1;
subject to con106: transfer_q_S1_under_loop1 + transfer_q_total = 1;
subject to con107: transfer_q_S3_under_loop4 * TC4_0 >= transfer_q_S3_under_loop4 * 2;
subject to con108: burst_q_S3_under_loop4 = 1;
subject to con109: transfer_q_S3_under_loop4 * TC4_0 >= transfer_q_S3_under_loop4 * 2;
subject to con110: transfer_q_S3_under_loop4 + transfer_q_total = 1;
subject to con111: transfer_A_S2_under_loop3 * TC3_0 >= transfer_A_S2_under_loop3 * 2;
subject to con112: burst_A_S2_under_loop3 = 1;
subject to con113: transfer_A_S2_under_loop3 * TC3_0 >= transfer_A_S2_under_loop3 * 2;
subject to con114: transfer_A_S2_under_loop2 * TC2_0 >= transfer_A_S2_under_loop2 * 2;
subject to con115: burst_A_S2_under_loop2 = 1;
subject to con116: transfer_A_S2_under_loop2 * TC2_0 >= transfer_A_S2_under_loop2 * 2;
subject to con117: transfer_A_S2_under_loop3 + transfer_A_S2_under_loop2 + transfer_A_total = 1;
subject to con118: transfer_A_S3_under_loop4 * TC4_0 >= transfer_A_S3_under_loop4 * 2;
subject to con119: burst_A_S3_under_loop4 = 1;
subject to con120: transfer_A_S3_under_loop4 * TC4_0 >= transfer_A_S3_under_loop4 * 2;
subject to con121: transfer_A_S3_under_loop5 * TC5_0 >= transfer_A_S3_under_loop5 * 2;
subject to con122: burst_A_S3_under_loop5 = 1;
subject to con123: transfer_A_S3_under_loop5 * TC5_0 >= transfer_A_S3_under_loop5 * 2;
subject to con124: transfer_A_S3_under_loop4 + transfer_A_S3_under_loop5 + transfer_A_total = 1;
subject to con125: transfer_p_S3_under_loop5 * TC5_0 >= transfer_p_S3_under_loop5 * 2;
subject to con126: burst_p_S3_under_loop5 = 1;
subject to con127: transfer_p_S3_under_loop5 * TC5_0 >= transfer_p_S3_under_loop5 * 2;
subject to con128: transfer_p_S3_under_loop5 + transfer_p_total = 1;
subject to con129: transfer_s_total * footprint_tot_s + perm0_S0 * transfer_s_S0_under_loop0 * footprint_s_S0 / TC0_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con130: transfer_s_total * footprint_tot_s + transfer_q_total * footprint_tot_q + perm0_S1 * transfer_q_S1_under_loop1 * footprint_q_S1 / TC1_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con131: transfer_s_total * footprint_tot_s + transfer_q_total * footprint_tot_q + transfer_r_total * footprint_tot_r + transfer_A_total * footprint_tot_A + perm0_S2 * transfer_s_S2_under_loop2 * footprint_s_S2 / TC2_0 * 1 + perm1_S2 * transfer_s_S2_under_loop2 * footprint_s_S2 / TC2_0 * 1 + perm0_S2 * transfer_r_S2_under_loop3 * footprint_r_S2 / TC3_0 * 1 + perm1_S2 * transfer_r_S2_under_loop3 * footprint_r_S2 / TC3_0 * 1 + perm0_S2 * transfer_A_S2_under_loop3 * footprint_A_S2 / TC2_0 * TC3_0 * 1 + perm1_S2 * transfer_A_S2_under_loop3 * footprint_A_S2 / TC3_0 * 1 + perm0_S2 * transfer_A_S2_under_loop2 * footprint_A_S2 / TC2_0 * 1 + perm1_S2 * transfer_A_S2_under_loop2 * footprint_A_S2 / TC3_0 * TC2_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con132: transfer_q_total * footprint_tot_q + transfer_A_total * footprint_tot_A + transfer_p_total * footprint_tot_p + perm0_S3 * transfer_p_S3_under_loop5 * footprint_p_S3 / TC5_0 * 1 + perm1_S3 * transfer_p_S3_under_loop5 * footprint_p_S3 / TC5_0 * 1 + perm0_S3 * transfer_q_S3_under_loop4 * footprint_q_S3 / TC4_0 * 1 + perm1_S3 * transfer_q_S3_under_loop4 * footprint_q_S3 / TC4_0 * 1 + perm0_S3 * transfer_A_S3_under_loop4 * footprint_A_S3 / TC4_0 * 1 + perm1_S3 * transfer_A_S3_under_loop4 * footprint_A_S3 / TC5_0 * TC4_0 * 1 + perm0_S3 * transfer_A_S3_under_loop5 * footprint_A_S3 / TC4_0 * TC5_0 * 1 + perm1_S3 * transfer_A_S3_under_loop5 * footprint_A_S3 / TC5_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con133: is_burst_size_r_16 + is_burst_size_r_8 + is_burst_size_r_4 + is_burst_size_r_2 + is_burst_size_r_1 = 1;
subject to con134: burst_size_r = is_burst_size_r_16 * 16 + is_burst_size_r_8 * 8 + is_burst_size_r_4 * 4 + is_burst_size_r_2 * 2 + is_burst_size_r_1 * 1;
subject to con135: AP_r_0 >= is_burst_size_r_16 * 16 + is_burst_size_r_8 * 8 + is_burst_size_r_4 * 4 + is_burst_size_r_2 * 2 + is_burst_size_r_1 * 1;
subject to con136: is_burst_size_r_16 = 0;
subject to con137: is_burst_size_r_8 = 0;
subject to con138: is_burst_size_r_4 = 0;
subject to con139: AP_r_0 = (is_burst_size_r_16 * 16 + is_burst_size_r_8 * 8 + is_burst_size_r_4 * 4 + is_burst_size_r_2 * 2 + is_burst_size_r_1 * 1) * cte_burst_size_r;
subject to con140: is_burst_size_s_16 + is_burst_size_s_8 + is_burst_size_s_4 + is_burst_size_s_2 + is_burst_size_s_1 = 1;
subject to con141: burst_size_s = is_burst_size_s_16 * 16 + is_burst_size_s_8 * 8 + is_burst_size_s_4 * 4 + is_burst_size_s_2 * 2 + is_burst_size_s_1 * 1;
subject to con142: AP_s_0 >= is_burst_size_s_16 * 16 + is_burst_size_s_8 * 8 + is_burst_size_s_4 * 4 + is_burst_size_s_2 * 2 + is_burst_size_s_1 * 1;
subject to con143: is_burst_size_s_16 = 0;
subject to con144: is_burst_size_s_8 = 0;
subject to con145: is_burst_size_s_4 = 0;
subject to con146: AP_s_0 = (is_burst_size_s_16 * 16 + is_burst_size_s_8 * 8 + is_burst_size_s_4 * 4 + is_burst_size_s_2 * 2 + is_burst_size_s_1 * 1) * cte_burst_size_s;
subject to con147: is_burst_size_q_16 + is_burst_size_q_8 + is_burst_size_q_4 + is_burst_size_q_2 + is_burst_size_q_1 = 1;
subject to con148: burst_size_q = is_burst_size_q_16 * 16 + is_burst_size_q_8 * 8 + is_burst_size_q_4 * 4 + is_burst_size_q_2 * 2 + is_burst_size_q_1 * 1;
subject to con149: AP_q_0 >= is_burst_size_q_16 * 16 + is_burst_size_q_8 * 8 + is_burst_size_q_4 * 4 + is_burst_size_q_2 * 2 + is_burst_size_q_1 * 1;
subject to con150: is_burst_size_q_16 = 0;
subject to con151: is_burst_size_q_8 = 0;
subject to con152: is_burst_size_q_4 = 0;
subject to con153: AP_q_0 = (is_burst_size_q_16 * 16 + is_burst_size_q_8 * 8 + is_burst_size_q_4 * 4 + is_burst_size_q_2 * 2 + is_burst_size_q_1 * 1) * cte_burst_size_q;
subject to con154: is_burst_size_A_16 + is_burst_size_A_8 + is_burst_size_A_4 + is_burst_size_A_2 + is_burst_size_A_1 = 1;
subject to con155: burst_size_A = is_burst_size_A_16 * 16 + is_burst_size_A_8 * 8 + is_burst_size_A_4 * 4 + is_burst_size_A_2 * 2 + is_burst_size_A_1 * 1;
subject to con156: AP_A_1 >= is_burst_size_A_16 * 16 + is_burst_size_A_8 * 8 + is_burst_size_A_4 * 4 + is_burst_size_A_2 * 2 + is_burst_size_A_1 * 1;
subject to con157: is_burst_size_A_16 = 0;
subject to con158: is_burst_size_A_8 = 0;
subject to con159: is_burst_size_A_4 = 0;
subject to con160: AP_A_1 = (is_burst_size_A_16 * 16 + is_burst_size_A_8 * 8 + is_burst_size_A_4 * 4 + is_burst_size_A_2 * 2 + is_burst_size_A_1 * 1) * cte_burst_size_A;
subject to con161: is_burst_size_p_16 + is_burst_size_p_8 + is_burst_size_p_4 + is_burst_size_p_2 + is_burst_size_p_1 = 1;
subject to con162: burst_size_p = is_burst_size_p_16 * 16 + is_burst_size_p_8 * 8 + is_burst_size_p_4 * 4 + is_burst_size_p_2 * 2 + is_burst_size_p_1 * 1;
subject to con163: AP_p_0 >= is_burst_size_p_16 * 16 + is_burst_size_p_8 * 8 + is_burst_size_p_4 * 4 + is_burst_size_p_2 * 2 + is_burst_size_p_1 * 1;
subject to con164: is_burst_size_p_16 = 0;
subject to con165: is_burst_size_p_8 = 0;
subject to con166: is_burst_size_p_4 = 0;
subject to con167: AP_p_0 = (is_burst_size_p_16 * 16 + is_burst_size_p_8 * 8 + is_burst_size_p_4 * 4 + is_burst_size_p_2 * 2 + is_burst_size_p_1 * 1) * cte_burst_size_p;
#subject to con168: Lat_comm_read_S0 = transfer_s_total * footprint_tot_s/burst_size_s + perm0_S0 * transfer_s_S0_under_loop0 * 1 * TC0_0 * footprint_s_S0 / TC0_0 / burst_s_S0_under_loop0;
subject to con169: Lat_comm_read_S0 = max(transfer_s_total * footprint_tot_s/burst_size_s) + perm0_S0 * transfer_s_S0_under_loop0 * 1 * TC0_0 * footprint_s_S0 / TC0_0 / burst_s_S0_under_loop0;
#subject to con170: Lat_comm_write_S0 = perm0_S0 * transfer_s_S0_under_loop0 * 1 * footprint_s_S0  / burst_s_S0_under_loop0;
subject to con171: Lat_comm_write_S0 = perm0_S0 * transfer_s_S0_under_loop0 * 1 * footprint_s_S0  / burst_s_S0_under_loop0;
#subject to con172: Lat_comm_read_S1 = transfer_q_total * footprint_tot_q/burst_size_q + perm0_S1 * transfer_q_S1_under_loop1 * 1 * TC1_0 * footprint_q_S1 / TC1_0 / burst_q_S1_under_loop1;
subject to con173: Lat_comm_read_S1 = max(transfer_q_total * footprint_tot_q/burst_size_q) + perm0_S1 * transfer_q_S1_under_loop1 * 1 * TC1_0 * footprint_q_S1 / TC1_0 / burst_q_S1_under_loop1;
#subject to con174: Lat_comm_write_S1 = perm0_S1 * transfer_q_S1_under_loop1 * 1 * footprint_q_S1  / burst_q_S1_under_loop1;
subject to con175: Lat_comm_write_S1 = perm0_S1 * transfer_q_S1_under_loop1 * 1 * footprint_q_S1  / burst_q_S1_under_loop1;
#subject to con176: Lat_comm_read_S2 = (1 - transfer_r_total ) * transfer_A_total  *  footprint_tot_A/burst_size_A + transfer_r_total  * (1 - transfer_A_total ) *  footprint_tot_r/burst_size_r + transfer_r_total  * transfer_A_total  * (footprint_tot_r/burst_size_r + footprint_tot_A/burst_size_A + abs(footprint_tot_r/burst_size_r - footprint_tot_A/burst_size_A))/2 + (1 - perm0_S2 ) * perm0_S2  *  transfer_A_S2_under_loop2  *  1  *  TC2_0  *  footprint_A_S2 / TC2_0 / burst_A_S2_under_loop2 + perm0_S2  * (1 - perm0_S2 ) *  transfer_s_S2_under_loop2  *  1  *  TC2_0  *  footprint_s_S2 / TC2_0 / burst_s_S2_under_loop2 + perm0_S2  * perm0_S2  * (transfer_s_S2_under_loop2*1*TC2_0*footprint_s_S2/TC2_0/burst_s_S2_under_loop2 + transfer_A_S2_under_loop2*1*TC2_0*footprint_A_S2/TC2_0/burst_A_S2_under_loop2 + abs(transfer_s_S2_under_loop2*1*TC2_0*footprint_s_S2/TC2_0/burst_s_S2_under_loop2 - transfer_A_S2_under_loop2*1*TC2_0*footprint_A_S2/TC2_0/burst_A_S2_under_loop2))/2 + (1 - perm0_S2 ) * perm0_S2  *  transfer_A_S2_under_loop3  *  1  *  TC2_0  *  TC3_0  *  footprint_A_S2 / TC2_0  *  TC3_0 / burst_A_S2_under_loop3 + perm0_S2  * (1 - perm0_S2 ) *  transfer_r_S2_under_loop3  *  TC2_0  *  TC3_0  *  footprint_r_S2 / TC3_0 / burst_r_S2_under_loop3 + perm0_S2  * perm0_S2  * (transfer_r_S2_under_loop3*TC2_0*TC3_0*footprint_r_S2/TC3_0/burst_r_S2_under_loop3 + transfer_A_S2_under_loop3*1*TC2_0*TC3_0*footprint_A_S2/TC2_0*TC3_0/burst_A_S2_under_loop3 + abs(transfer_r_S2_under_loop3*TC2_0*TC3_0*footprint_r_S2/TC3_0/burst_r_S2_under_loop3 - transfer_A_S2_under_loop3*1*TC2_0*TC3_0*footprint_A_S2/TC2_0*TC3_0/burst_A_S2_under_loop3))/2 + (1 - perm1_S2 ) * perm1_S2  *  transfer_A_S2_under_loop3  *  1  *  TC3_0  *  footprint_A_S2 / TC3_0 / burst_A_S2_under_loop3 + perm1_S2  * (1 - perm1_S2 ) *  transfer_r_S2_under_loop3  *  1  *  TC3_0  *  footprint_r_S2 / TC3_0 / burst_r_S2_under_loop3 + perm1_S2  * perm1_S2  * (transfer_r_S2_under_loop3*1*TC3_0*footprint_r_S2/TC3_0/burst_r_S2_under_loop3 + transfer_A_S2_under_loop3*1*TC3_0*footprint_A_S2/TC3_0/burst_A_S2_under_loop3 + abs(transfer_r_S2_under_loop3*1*TC3_0*footprint_r_S2/TC3_0/burst_r_S2_under_loop3 - transfer_A_S2_under_loop3*1*TC3_0*footprint_A_S2/TC3_0/burst_A_S2_under_loop3))/2 + (1 - perm1_S2 ) * perm1_S2  *  transfer_A_S2_under_loop2  *  1  *  TC3_0  *  TC2_0  *  footprint_A_S2 / TC3_0  *  TC2_0 / burst_A_S2_under_loop2 + perm1_S2  * (1 - perm1_S2 ) *  transfer_s_S2_under_loop2  *  TC3_0  *  TC2_0  *  footprint_s_S2 / TC2_0 / burst_s_S2_under_loop2 + perm1_S2  * perm1_S2  * (transfer_s_S2_under_loop2*TC3_0*TC2_0*footprint_s_S2/TC2_0/burst_s_S2_under_loop2 + transfer_A_S2_under_loop2*1*TC3_0*TC2_0*footprint_A_S2/TC3_0*TC2_0/burst_A_S2_under_loop2 + abs(transfer_s_S2_under_loop2*TC3_0*TC2_0*footprint_s_S2/TC2_0/burst_s_S2_under_loop2 - transfer_A_S2_under_loop2*1*TC3_0*TC2_0*footprint_A_S2/TC3_0*TC2_0/burst_A_S2_under_loop2))/2;
subject to con177: Lat_comm_read_S2 = max(transfer_r_total * footprint_tot_r/burst_size_r, transfer_A_total * footprint_tot_A/burst_size_A) + perm0_S2 * transfer_s_S2_under_loop2 * 1 * TC2_0 * footprint_s_S2 / TC2_0 / burst_s_S2_under_loop2 + perm0_S2 * transfer_A_S2_under_loop2 * 1 * TC2_0 * footprint_A_S2 / TC2_0 / burst_A_S2_under_loop2 + perm0_S2 * transfer_r_S2_under_loop3 * TC2_0 * TC3_0 * footprint_r_S2 / TC3_0 / burst_r_S2_under_loop3 + perm0_S2 * transfer_A_S2_under_loop3 * 1 * TC2_0 * TC3_0 * footprint_A_S2 / TC2_0 * TC3_0 / burst_A_S2_under_loop3 + perm1_S2 * transfer_r_S2_under_loop3 * 1 * TC3_0 * footprint_r_S2 / TC3_0 / burst_r_S2_under_loop3 + perm1_S2 * transfer_A_S2_under_loop3 * 1 * TC3_0 * footprint_A_S2 / TC3_0 / burst_A_S2_under_loop3 + perm1_S2 * transfer_s_S2_under_loop2 * TC3_0 * TC2_0 * footprint_s_S2 / TC2_0 / burst_s_S2_under_loop2 + perm1_S2 * transfer_A_S2_under_loop2 * 1 * TC3_0 * TC2_0 * footprint_A_S2 / TC3_0 * TC2_0 / burst_A_S2_under_loop2;
#subject to con178: Lat_comm_write_S2 = transfer_s_total * footprint_tot_s/burst_size_s + perm0_S2 * transfer_s_S2_under_loop2 * 1 * footprint_s_S2  / burst_s_S2_under_loop2 + perm1_S2 * transfer_s_S2_under_loop2 * TC3_0 * footprint_s_S2  / burst_s_S2_under_loop2;
subject to con179: Lat_comm_write_S2 = transfer_s_total * footprint_tot_s/burst_size_s + perm0_S2 * transfer_s_S2_under_loop2 * 1 * footprint_s_S2  / burst_s_S2_under_loop2 + perm1_S2 * transfer_s_S2_under_loop2 * TC3_0 * footprint_s_S2  / burst_s_S2_under_loop2;
#subject to con180: Lat_comm_read_S3 = transfer_p_total * footprint_tot_p/burst_size_p + (1 - perm0_S3 ) * perm0_S3  *  transfer_A_S3_under_loop4  *  1  *  TC4_0  *  footprint_A_S3 / TC4_0 / burst_A_S3_under_loop4 + perm0_S3  * (1 - perm0_S3 ) *  transfer_q_S3_under_loop4  *  1  *  TC4_0  *  footprint_q_S3 / TC4_0 / burst_q_S3_under_loop4 + perm0_S3  * perm0_S3  * (transfer_q_S3_under_loop4*1*TC4_0*footprint_q_S3/TC4_0/burst_q_S3_under_loop4 + transfer_A_S3_under_loop4*1*TC4_0*footprint_A_S3/TC4_0/burst_A_S3_under_loop4 + abs(transfer_q_S3_under_loop4*1*TC4_0*footprint_q_S3/TC4_0/burst_q_S3_under_loop4 - transfer_A_S3_under_loop4*1*TC4_0*footprint_A_S3/TC4_0/burst_A_S3_under_loop4))/2 + (1 - perm0_S3 ) * perm0_S3  *  transfer_p_S3_under_loop5  *  TC4_0  *  TC5_0  *  footprint_p_S3 / TC5_0 / burst_p_S3_under_loop5 + perm0_S3  * (1 - perm0_S3 ) *  transfer_A_S3_under_loop5  *  1  *  TC4_0  *  TC5_0  *  footprint_A_S3 / TC4_0  *  TC5_0 / burst_A_S3_under_loop5 + perm0_S3  * perm0_S3  * (transfer_A_S3_under_loop5*1*TC4_0*TC5_0*footprint_A_S3/TC4_0*TC5_0/burst_A_S3_under_loop5 + transfer_p_S3_under_loop5*TC4_0*TC5_0*footprint_p_S3/TC5_0/burst_p_S3_under_loop5 + abs(transfer_A_S3_under_loop5*1*TC4_0*TC5_0*footprint_A_S3/TC4_0*TC5_0/burst_A_S3_under_loop5 - transfer_p_S3_under_loop5*TC4_0*TC5_0*footprint_p_S3/TC5_0/burst_p_S3_under_loop5))/2 + (1 - perm1_S3 ) * perm1_S3  *  transfer_p_S3_under_loop5  *  1  *  TC5_0  *  footprint_p_S3 / TC5_0 / burst_p_S3_under_loop5 + perm1_S3  * (1 - perm1_S3 ) *  transfer_A_S3_under_loop5  *  1  *  TC5_0  *  footprint_A_S3 / TC5_0 / burst_A_S3_under_loop5 + perm1_S3  * perm1_S3  * (transfer_A_S3_under_loop5*1*TC5_0*footprint_A_S3/TC5_0/burst_A_S3_under_loop5 + transfer_p_S3_under_loop5*1*TC5_0*footprint_p_S3/TC5_0/burst_p_S3_under_loop5 + abs(transfer_A_S3_under_loop5*1*TC5_0*footprint_A_S3/TC5_0/burst_A_S3_under_loop5 - transfer_p_S3_under_loop5*1*TC5_0*footprint_p_S3/TC5_0/burst_p_S3_under_loop5))/2 + (1 - perm1_S3 ) * perm1_S3  *  transfer_A_S3_under_loop4  *  1  *  TC5_0  *  TC4_0  *  footprint_A_S3 / TC5_0  *  TC4_0 / burst_A_S3_under_loop4 + perm1_S3  * (1 - perm1_S3 ) *  transfer_q_S3_under_loop4  *  TC5_0  *  TC4_0  *  footprint_q_S3 / TC4_0 / burst_q_S3_under_loop4 + perm1_S3  * perm1_S3  * (transfer_q_S3_under_loop4*TC5_0*TC4_0*footprint_q_S3/TC4_0/burst_q_S3_under_loop4 + transfer_A_S3_under_loop4*1*TC5_0*TC4_0*footprint_A_S3/TC5_0*TC4_0/burst_A_S3_under_loop4 + abs(transfer_q_S3_under_loop4*TC5_0*TC4_0*footprint_q_S3/TC4_0/burst_q_S3_under_loop4 - transfer_A_S3_under_loop4*1*TC5_0*TC4_0*footprint_A_S3/TC5_0*TC4_0/burst_A_S3_under_loop4))/2;
subject to con181: Lat_comm_read_S3 = max(transfer_p_total * footprint_tot_p/burst_size_p) + perm0_S3 * transfer_q_S3_under_loop4 * 1 * TC4_0 * footprint_q_S3 / TC4_0 / burst_q_S3_under_loop4 + perm0_S3 * transfer_A_S3_under_loop4 * 1 * TC4_0 * footprint_A_S3 / TC4_0 / burst_A_S3_under_loop4 + perm0_S3 * transfer_A_S3_under_loop5 * 1 * TC4_0 * TC5_0 * footprint_A_S3 / TC4_0 * TC5_0 / burst_A_S3_under_loop5 + perm0_S3 * transfer_p_S3_under_loop5 * TC4_0 * TC5_0 * footprint_p_S3 / TC5_0 / burst_p_S3_under_loop5 + perm1_S3 * transfer_A_S3_under_loop5 * 1 * TC5_0 * footprint_A_S3 / TC5_0 / burst_A_S3_under_loop5 + perm1_S3 * transfer_p_S3_under_loop5 * 1 * TC5_0 * footprint_p_S3 / TC5_0 / burst_p_S3_under_loop5 + perm1_S3 * transfer_q_S3_under_loop4 * TC5_0 * TC4_0 * footprint_q_S3 / TC4_0 / burst_q_S3_under_loop4 + perm1_S3 * transfer_A_S3_under_loop4 * 1 * TC5_0 * TC4_0 * footprint_A_S3 / TC5_0 * TC4_0 / burst_A_S3_under_loop4;
#subject to con182: Lat_comm_write_S3 = transfer_q_total * footprint_tot_q/burst_size_q + perm0_S3 * transfer_q_S3_under_loop4 * 1 * footprint_q_S3  / burst_q_S3_under_loop4 + perm1_S3 * transfer_q_S3_under_loop4 * TC5_0 * footprint_q_S3  / burst_q_S3_under_loop4;
subject to con183: Lat_comm_write_S3 = transfer_q_total * footprint_tot_q/burst_size_q + perm0_S3 * transfer_q_S3_under_loop4 * 1 * footprint_q_S3  / burst_q_S3_under_loop4 + perm1_S3 * transfer_q_S3_under_loop4 * TC5_0 * footprint_q_S3  / burst_q_S3_under_loop4;
subject to con184: Lat_comm = Lat_comm_read_S0 + Lat_comm_write_S0 + Lat_comm_read_S1 + Lat_comm_write_S1 + Lat_comm_read_S2 + Lat_comm_write_S2 + Lat_comm_read_S3 + Lat_comm_write_S3;
#subject to con185: transfer_s_total * footprint_tot_s / (AP_s_0 * AP_s_1 * 16000 / size_data_type) + transfer_s_S0_under_loop0 * footprint_s_S0 / (TC0_0 * 1) / (AP_s_0 * AP_s_1 * 16000 / size_data_type) <= ceil0;
#subject to con186: ceil0 * AP_s_0 * AP_s_1 <= BRAM;
#subject to con187: transfer_s_total * footprint_tot_s / (AP_s_0 * AP_s_1 * 16000 / size_data_type) <= ceil1;
#subject to con188: transfer_q_total * footprint_tot_q / (AP_q_0 * AP_q_1 * 16000 / size_data_type) + transfer_q_S1_under_loop1 * footprint_q_S1 / (TC1_0 * 1) / (AP_q_0 * AP_q_1 * 16000 / size_data_type) <= ceil2;
#subject to con189: ceil1 * AP_s_0 * AP_s_1 + ceil2 * AP_q_0 * AP_q_1 <= BRAM;
#subject to con190: transfer_r_total * footprint_tot_r / (AP_r_0 * AP_r_1 * 16000 / size_data_type) + transfer_r_S2_under_loop3 * footprint_r_S2 / (TC3_0 * 1) / (AP_r_0 * AP_r_1 * 16000 / size_data_type) <= ceil3;
#subject to con191: transfer_s_total * footprint_tot_s / (AP_s_0 * AP_s_1 * 16000 / size_data_type) + transfer_s_S2_under_loop2 * footprint_s_S2 / (TC2_0 * 1) / (AP_s_0 * AP_s_1 * 16000 / size_data_type) <= ceil4;
#subject to con192: transfer_q_total * footprint_tot_q / (AP_q_0 * AP_q_1 * 16000 / size_data_type) <= ceil5;
#subject to con193: transfer_A_total * footprint_tot_A / (AP_A_0 * AP_A_1 * 16000 / size_data_type) + transfer_A_S2_under_loop2 * footprint_A_S2 / (TC2_0 * 1) / (AP_A_0 * AP_A_1 * 16000 / size_data_type) + transfer_A_S2_under_loop3 * footprint_A_S2 / (TC2_0 * TC3_0 * 1) / (AP_A_0 * AP_A_1 * 16000 / size_data_type) <= ceil6;
#subject to con194: ceil3 * AP_r_0 * AP_r_1 + ceil4 * AP_s_0 * AP_s_1 + ceil5 * AP_q_0 * AP_q_1 + ceil6 * AP_A_0 * AP_A_1 <= BRAM;
#subject to con195: transfer_q_total * footprint_tot_q / (AP_q_0 * AP_q_1 * 16000 / size_data_type) + transfer_q_S3_under_loop4 * footprint_q_S3 / (TC4_0 * 1) / (AP_q_0 * AP_q_1 * 16000 / size_data_type) <= ceil7;
#subject to con196: transfer_A_total * footprint_tot_A / (AP_A_0 * AP_A_1 * 16000 / size_data_type) + transfer_A_S3_under_loop4 * footprint_A_S3 / (TC4_0 * 1) / (AP_A_0 * AP_A_1 * 16000 / size_data_type) + transfer_A_S3_under_loop5 * footprint_A_S3 / (TC4_0 * TC5_0 * 1) / (AP_A_0 * AP_A_1 * 16000 / size_data_type) <= ceil8;
#subject to con197: transfer_p_total * footprint_tot_p / (AP_p_0 * AP_p_1 * 16000 / size_data_type) + transfer_p_S3_under_loop5 * footprint_p_S3 / (TC5_0 * 1) / (AP_p_0 * AP_p_1 * 16000 / size_data_type) <= ceil9;
#subject to con198: ceil7 * AP_q_0 * AP_q_1 + ceil8 * AP_A_0 * AP_A_1 + ceil9 * AP_p_0 * AP_p_1 <= BRAM;
#subject to con199: ceil0 * AP_s_0 * AP_s_1 + ceil1 * AP_s_0 * AP_s_1 + ceil2 * AP_q_0 * AP_q_1 + ceil3 * AP_r_0 * AP_r_1 + ceil4 * AP_s_0 * AP_s_1 + ceil5 * AP_q_0 * AP_q_1 + ceil6 * AP_A_0 * AP_A_1 + ceil7 * AP_q_0 * AP_q_1 + ceil8 * AP_A_0 * AP_A_1 + ceil9 * AP_p_0 * AP_p_1 <= BRAM;
solve;
display TC0_0;
display TC0_1;
display TC0_2;
display TC1_0;
display TC1_1;
display TC1_2;
display TC2_0;
display TC2_1;
display TC2_2;
display TC3_0;
display TC3_1;
display TC3_2;
display TC4_0;
display TC4_1;
display TC4_2;
display TC5_0;
display TC5_1;
display TC5_2;
display perm0_S0;
display perm0_S1;
display perm0_S2;
display perm1_S2;
display perm0_S3;
display perm1_S3;
display loop0_UF;
display loop1_UF;
display loop2_UF;
display loop4_UF;
display Lat_comp_S0;
display Lat_comp_S0_no_tree;
display Lat_comp_S1;
display Lat_comp_S1_no_tree;
display Lat_comp_S2;
display Lat_comp_S2_no_tree;
display Lat_comp_S3;
display Lat_comp_S3_no_tree;
display II_S0;
display II_S1;
display II_S2;
display II_S3;
display is_loop0_pip;
display is_loop1_pip;
display is_loop2_pip;
display is_loop3_pip;
display is_loop4_pip;
display is_loop5_pip;
display AP_r_0;
display constant0;
display cte_0;
display cte_1;
display AP_s_0;
display constant1;
display cte_2;
display cte_3;
display cte_4;
display AP_q_0;
display constant2;
display cte_5;
display cte_6;
display cte_7;
display AP_A_0;
display cte_8;
display cte_9;
display cte_10;
display AP_A_1;
display constant3;
display cte_11;
display cte_12;
display cte_13;
display AP_p_0;
display constant4;
display cte_14;
display cte_15;
display Lat_comm;
display transfer_r_total;
display transfer_s_total;
display transfer_q_total;
display transfer_A_total;
display transfer_p_total;
display transfer_r_S2_under_loop3;
display burst_r_S2_under_loop3;
display transfer_s_S0_under_loop0;
display burst_s_S0_under_loop0;
display transfer_s_S2_under_loop2;
display burst_s_S2_under_loop2;
display transfer_q_S1_under_loop1;
display burst_q_S1_under_loop1;
display transfer_q_S3_under_loop4;
display burst_q_S3_under_loop4;
display transfer_A_S2_under_loop3;
display burst_A_S2_under_loop3;
display transfer_A_S2_under_loop2;
display burst_A_S2_under_loop2;
display transfer_A_S3_under_loop4;
display burst_A_S3_under_loop4;
display transfer_A_S3_under_loop5;
display burst_A_S3_under_loop5;
display transfer_p_S3_under_loop5;
display burst_p_S3_under_loop5;
display burst_size_r;
display cte_burst_size_r;
display is_burst_size_r_16;
display is_burst_size_r_8;
display is_burst_size_r_4;
display is_burst_size_r_2;
display is_burst_size_r_1;
display burst_size_s;
display cte_burst_size_s;
display is_burst_size_s_16;
display is_burst_size_s_8;
display is_burst_size_s_4;
display is_burst_size_s_2;
display is_burst_size_s_1;
display burst_size_q;
display cte_burst_size_q;
display is_burst_size_q_16;
display is_burst_size_q_8;
display is_burst_size_q_4;
display is_burst_size_q_2;
display is_burst_size_q_1;
display burst_size_A;
display cte_burst_size_A;
display is_burst_size_A_16;
display is_burst_size_A_8;
display is_burst_size_A_4;
display is_burst_size_A_2;
display is_burst_size_A_1;
display burst_size_p;
display cte_burst_size_p;
display is_burst_size_p_16;
display is_burst_size_p_8;
display is_burst_size_p_4;
display is_burst_size_p_2;
display is_burst_size_p_1;
display Lat_comm_read_S0;;
display Lat_comm_write_S0;;
display Lat_comm_read_S1;;
display Lat_comm_write_S1;;
display Lat_comm_read_S2;;
display Lat_comm_write_S2;;
display Lat_comm_read_S3;;
display Lat_comm_write_S3;;
display ceil0;
display ceil1;
display ceil2;
display ceil3;
display ceil4;
display ceil5;
display ceil6;
display ceil7;
display ceil8;
display ceil9;
display _total_solve_time;
