option solver gurobi;
option gurobi_options 'lim:time=14400 tech:logfile=gurobi.log qp:nonconvex=2 mip:gap=0.0000000001';

#Size array F: [190, 210]
#Size array E: [180, 190]
#Size array A: [180, 200]
#Size array B: [200, 190]
#Size array D: [220, 210]
#Size array C: [190, 220]
#Size array G: [180, 210]
#loop_0 iterates Array E in dim 0
#loop_1 iterates Array E in dim 1
#loop_2 iterates Array E in dim 0
#loop_3 iterates Array E in dim 1
#loop_2 iterates Array A in dim 0
#loop_4 iterates Array A in dim 1
#loop_3 iterates Array B in dim 1
#loop_4 iterates Array B in dim 0
#loop_2 iterates Array E in dim 0
#loop_3 iterates Array E in dim 1
#loop_5 iterates Array F in dim 0
#loop_6 iterates Array F in dim 1
#loop_7 iterates Array F in dim 0
#loop_8 iterates Array F in dim 1
#loop_7 iterates Array C in dim 0
#loop_9 iterates Array C in dim 1
#loop_8 iterates Array D in dim 1
#loop_9 iterates Array D in dim 0
#loop_7 iterates Array F in dim 0
#loop_8 iterates Array F in dim 1
#loop_10 iterates Array G in dim 0
#loop_11 iterates Array G in dim 1
#loop_12 iterates Array G in dim 0
#loop_13 iterates Array G in dim 1
#loop_12 iterates Array E in dim 0
#loop_14 iterates Array E in dim 1
#loop_13 iterates Array F in dim 1
#loop_14 iterates Array F in dim 0
#loop_12 iterates Array G in dim 0
#loop_13 iterates Array G in dim 1
#schedule 0 0 0 1 0
#iterators i j
#loop_0 := False
#loop_1 := False
#schedule 1 2 0 3 0 4 0
#iterators i j k
#loop_2 := False
#loop_3 := False
#loop_4 := True
#schedule 2 5 0 6 0
#iterators i j
#loop_5 := False
#loop_6 := False
#schedule 3 7 0 8 0 9 0
#iterators i j k
#loop_7 := False
#loop_8 := False
#loop_9 := True
#schedule 4 10 0 11 0
#iterators i j
#loop_10 := False
#loop_11 := False
#schedule 5 12 0 13 0 14 0
#iterators i j k
#loop_12 := False
#loop_13 := False
#loop_14 := True
param DSP_avail = 1300;
param ON_CHIP_MEM_SIZE = 360000;
param CONSTRAINT_ARRAY_PARTITIONING_VALUE = 128;
param BRAM = 4320;
param size_data_type = 32;
param optimist_reuse_dsp=0;
param TC0 = 180;
param TC1 = 190;
param TC2 = 180;
param TC3 = 190;
param TC4 = 200;
param TC5 = 190;
param TC6 = 210;
param TC7 = 190;
param TC8 = 210;
param TC9 = 220;
param TC10 = 180;
param TC11 = 210;
param TC12 = 180;
param TC13 = 210;
param TC14 = 190;
param TREE_REDUCTION=1;
param IL_par_S0 = 1;
param IL_seq_S0 = 0;
param IL_par_S1 = 6;
param IL_seq_S1 = 7;
param IL_par_S2 = 1;
param IL_seq_S2 = 0;
param IL_par_S3 = 6;
param IL_seq_S3 = 7;
param IL_par_S4 = 1;
param IL_seq_S4 = 0;
param IL_par_S5 = 6;
param IL_seq_S5 = 7;
param DSP_S0 = 0;
param DSP_S1 = 5;
param DSP_S2 = 0;
param DSP_S3 = 5;
param DSP_S4 = 0;
param DSP_S5 = 5;
param footprint_E_S0 = 34200;
param footprint_E_S1 = 34200;
param footprint_A_S1 = 36000;
param footprint_B_S1 = 38000;
param footprint_F_S2 = 39900;
param footprint_F_S3 = 39900;
param footprint_C_S3 = 41800;
param footprint_D_S3 = 46200;
param footprint_G_S4 = 37800;
param footprint_G_S5 = 37800;
param footprint_E_S5 = 34200;
param footprint_F_S5 = 39900;
param footprint_tot_F = 39900;
param burst_size_tot_F = 2;
param footprint_tot_E = 34200;
param burst_size_tot_E = 2;
param footprint_tot_A = 36000;
param burst_size_tot_A = 8;
param footprint_tot_B = 38000;
param burst_size_tot_B = 2;
param footprint_tot_D = 46200;
param burst_size_tot_D = 2;
param footprint_tot_C = 41800;
param burst_size_tot_C = 4;
param footprint_tot_G = 37800;
param burst_size_tot_G = 2;

var TC0_0 integer >= 1 <=TC0;
var TC0_1 integer >= 1 <=TC0;
var TC0_2 integer >= 1 <=TC0;
var TC1_0 integer >= 1 <=TC1;
var TC1_1 integer >= 1 <=TC1;
var TC1_2 integer >= 1 <=TC1;
var TC2_0 integer >= 1 <=TC2;
var TC2_1 integer >= 1 <=TC2;
var TC2_2 integer >= 1 <=TC2;
var TC3_0 integer >= 1 <=TC3;
var TC3_1 integer >= 1 <=TC3;
var TC3_2 integer >= 1 <=TC3;
var TC4_0 integer >= 1 <=TC4;
var TC4_1 integer >= 1 <=TC4;
var TC4_2 integer >= 1 <=TC4;
var TC5_0 integer >= 1 <=TC5;
var TC5_1 integer >= 1 <=TC5;
var TC5_2 integer >= 1 <=TC5;
var TC6_0 integer >= 1 <=TC6;
var TC6_1 integer >= 1 <=TC6;
var TC6_2 integer >= 1 <=TC6;
var TC7_0 integer >= 1 <=TC7;
var TC7_1 integer >= 1 <=TC7;
var TC7_2 integer >= 1 <=TC7;
var TC8_0 integer >= 1 <=TC8;
var TC8_1 integer >= 1 <=TC8;
var TC8_2 integer >= 1 <=TC8;
var TC9_0 integer >= 1 <=TC9;
var TC9_1 integer >= 1 <=TC9;
var TC9_2 integer >= 1 <=TC9;
var TC10_0 integer >= 1 <=TC10;
var TC10_1 integer >= 1 <=TC10;
var TC10_2 integer >= 1 <=TC10;
var TC11_0 integer >= 1 <=TC11;
var TC11_1 integer >= 1 <=TC11;
var TC11_2 integer >= 1 <=TC11;
var TC12_0 integer >= 1 <=TC12;
var TC12_1 integer >= 1 <=TC12;
var TC12_2 integer >= 1 <=TC12;
var TC13_0 integer >= 1 <=TC13;
var TC13_1 integer >= 1 <=TC13;
var TC13_2 integer >= 1 <=TC13;
var TC14_0 integer >= 1 <=TC14;
var TC14_1 integer >= 1 <=TC14;
var TC14_2 integer >= 1 <=TC14;
var loop0_UF integer >= 1 <=TC0;
var loop1_UF integer >= 1 <=TC1;
var loop2_UF integer >= 1 <=TC2;
var loop3_UF integer >= 1 <=TC3;
var loop5_UF integer >= 1 <=TC5;
var loop6_UF integer >= 1 <=TC6;
var loop7_UF integer >= 1 <=TC7;
var loop8_UF integer >= 1 <=TC8;
var loop10_UF integer >= 1 <=TC10;
var loop11_UF integer >= 1 <=TC11;
var loop12_UF integer >= 1 <=TC12;
var loop13_UF integer >= 1 <=TC13;
var Lat_comp_S0 >= 0;
var Lat_comp_S0_no_tree >= 0;
var Lat_comp_S1 >= 0;
var Lat_comp_S1_no_tree >= 0;
var Lat_comp_S2 >= 0;
var Lat_comp_S2_no_tree >= 0;
var Lat_comp_S3 >= 0;
var Lat_comp_S3_no_tree >= 0;
var Lat_comp_S4 >= 0;
var Lat_comp_S4_no_tree >= 0;
var Lat_comp_S5 >= 0;
var Lat_comp_S5_no_tree >= 0;
var II_S0 integer >= 1;
var II_S1 integer >= 1;
var II_S2 integer >= 1;
var II_S3 integer >= 1;
var II_S4 integer >= 1;
var II_S5 integer >= 1;
var is_loop0_pip binary;
var is_loop1_pip binary;
var is_loop2_pip binary;
var is_loop3_pip binary;
var is_loop4_pip binary;
var is_loop5_pip binary;
var is_loop6_pip binary;
var is_loop7_pip binary;
var is_loop8_pip binary;
var is_loop9_pip binary;
var is_loop10_pip binary;
var is_loop11_pip binary;
var is_loop12_pip binary;
var is_loop13_pip binary;
var is_loop14_pip binary;
var AP_F_0 integer >= 1;
var cte_0 integer >= 1;
var cte_1 integer >= 1;
var cte_2 integer >= 1;
var cte_3 integer >= 1;
var AP_F_1 integer >= 1;
var constant0 integer >= 1;
var cte_4 integer >= 1;
var cte_5 integer >= 1;
var cte_6 integer >= 1;
var cte_7 integer >= 1;
var AP_E_0 integer >= 1;
var cte_8 integer >= 1;
var cte_9 integer >= 1;
var cte_10 integer >= 1;
var cte_11 integer >= 1;
var AP_E_1 integer >= 1;
var constant1 integer >= 1;
var cte_12 integer >= 1;
var cte_13 integer >= 1;
var cte_14 integer >= 1;
var cte_15 integer >= 1;
var AP_A_0 integer >= 1;
var cte_16 integer >= 1;
var cte_17 integer >= 1;
var AP_A_1 integer >= 1;
var constant2 integer >= 1;
var cte_18 integer >= 1;
var cte_19 integer >= 1;
var AP_B_0 integer >= 1;
var cte_20 integer >= 1;
var cte_21 integer >= 1;
var AP_B_1 integer >= 1;
var constant3 integer >= 1;
var cte_22 integer >= 1;
var cte_23 integer >= 1;
var AP_D_0 integer >= 1;
var cte_24 integer >= 1;
var cte_25 integer >= 1;
var AP_D_1 integer >= 1;
var constant4 integer >= 1;
var cte_26 integer >= 1;
var cte_27 integer >= 1;
var AP_C_0 integer >= 1;
var cte_28 integer >= 1;
var cte_29 integer >= 1;
var AP_C_1 integer >= 1;
var constant5 integer >= 1;
var cte_30 integer >= 1;
var cte_31 integer >= 1;
var AP_G_0 integer >= 1;
var cte_32 integer >= 1;
var cte_33 integer >= 1;
var cte_34 integer >= 1;
var AP_G_1 integer >= 1;
var constant6 integer >= 1;
var cte_35 integer >= 1;
var cte_36 integer >= 1;
var cte_37 integer >= 1;
var Lat_comm >= 0;
var transfer_F_total binary;
var transfer_E_total binary;
var transfer_A_total binary;
var transfer_B_total binary;
var transfer_D_total binary;
var transfer_C_total binary;
var transfer_G_total binary;
var transfer_F_S2_under_loop5 binary;
var burst_F_S2_under_loop5 integer >= 1 <=burst_size_tot_F;
var transfer_F_S2_under_loop6 binary;
var burst_F_S2_under_loop6 integer >= 1 <=burst_size_tot_F;
var transfer_F_S3_under_loop7 binary;
var burst_F_S3_under_loop7 integer >= 1 <=burst_size_tot_F;
var transfer_F_S3_under_loop8 binary;
var burst_F_S3_under_loop8 integer >= 1 <=burst_size_tot_F;
var transfer_F_S5_under_loop14 binary;
var burst_F_S5_under_loop14 integer >= 1 <=burst_size_tot_F;
var transfer_F_S5_under_loop13 binary;
var burst_F_S5_under_loop13 integer >= 1 <=burst_size_tot_F;
var transfer_E_S0_under_loop0 binary;
var burst_E_S0_under_loop0 integer >= 1 <=burst_size_tot_E;
var transfer_E_S0_under_loop1 binary;
var burst_E_S0_under_loop1 integer >= 1 <=burst_size_tot_E;
var transfer_E_S1_under_loop2 binary;
var burst_E_S1_under_loop2 integer >= 1 <=burst_size_tot_E;
var transfer_E_S1_under_loop3 binary;
var burst_E_S1_under_loop3 integer >= 1 <=burst_size_tot_E;
var transfer_E_S5_under_loop14 binary;
var burst_E_S5_under_loop14 integer >= 1 <=burst_size_tot_E;
var transfer_E_S5_under_loop12 binary;
var burst_E_S5_under_loop12 integer >= 1 <=burst_size_tot_E;
var transfer_A_S1_under_loop4 binary;
var burst_A_S1_under_loop4 integer >= 1 <=burst_size_tot_A;
var transfer_A_S1_under_loop2 binary;
var burst_A_S1_under_loop2 integer >= 1 <=burst_size_tot_A;
var transfer_B_S1_under_loop4 binary;
var burst_B_S1_under_loop4 integer >= 1 <=burst_size_tot_B;
var transfer_B_S1_under_loop3 binary;
var burst_B_S1_under_loop3 integer >= 1 <=burst_size_tot_B;
var transfer_D_S3_under_loop9 binary;
var burst_D_S3_under_loop9 integer >= 1 <=burst_size_tot_D;
var transfer_D_S3_under_loop8 binary;
var burst_D_S3_under_loop8 integer >= 1 <=burst_size_tot_D;
var transfer_C_S3_under_loop9 binary;
var burst_C_S3_under_loop9 integer >= 1 <=burst_size_tot_C;
var transfer_C_S3_under_loop7 binary;
var burst_C_S3_under_loop7 integer >= 1 <=burst_size_tot_C;
var transfer_G_S4_under_loop10 binary;
var burst_G_S4_under_loop10 integer >= 1 <=burst_size_tot_G;
var transfer_G_S4_under_loop11 binary;
var burst_G_S4_under_loop11 integer >= 1 <=burst_size_tot_G;
var transfer_G_S5_under_loop12 binary;
var burst_G_S5_under_loop12 integer >= 1 <=burst_size_tot_G;
var transfer_G_S5_under_loop13 binary;
var burst_G_S5_under_loop13 integer >= 1 <=burst_size_tot_G;
var burst_size_F integer >= 1 <=2;
var cte_burst_size_F integer >= 1;
var is_burst_size_F_16 binary;
var is_burst_size_F_8 binary;
var is_burst_size_F_4 binary;
var is_burst_size_F_2 binary;
var is_burst_size_F_1 binary;
var burst_size_E integer >= 1 <=2;
var cte_burst_size_E integer >= 1;
var is_burst_size_E_16 binary;
var is_burst_size_E_8 binary;
var is_burst_size_E_4 binary;
var is_burst_size_E_2 binary;
var is_burst_size_E_1 binary;
var burst_size_A integer >= 1 <=8;
var cte_burst_size_A integer >= 1;
var is_burst_size_A_16 binary;
var is_burst_size_A_8 binary;
var is_burst_size_A_4 binary;
var is_burst_size_A_2 binary;
var is_burst_size_A_1 binary;
var burst_size_B integer >= 1 <=2;
var cte_burst_size_B integer >= 1;
var is_burst_size_B_16 binary;
var is_burst_size_B_8 binary;
var is_burst_size_B_4 binary;
var is_burst_size_B_2 binary;
var is_burst_size_B_1 binary;
var burst_size_D integer >= 1 <=2;
var cte_burst_size_D integer >= 1;
var is_burst_size_D_16 binary;
var is_burst_size_D_8 binary;
var is_burst_size_D_4 binary;
var is_burst_size_D_2 binary;
var is_burst_size_D_1 binary;
var burst_size_C integer >= 1 <=4;
var cte_burst_size_C integer >= 1;
var is_burst_size_C_16 binary;
var is_burst_size_C_8 binary;
var is_burst_size_C_4 binary;
var is_burst_size_C_2 binary;
var is_burst_size_C_1 binary;
var burst_size_G integer >= 1 <=2;
var cte_burst_size_G integer >= 1;
var is_burst_size_G_16 binary;
var is_burst_size_G_8 binary;
var is_burst_size_G_4 binary;
var is_burst_size_G_2 binary;
var is_burst_size_G_1 binary;
var Lat_comm_read_S0;
var Lat_comm_write_S0;
var Lat_comm_read_S1;
var Lat_comm_write_S1;
var Lat_comm_read_S2;
var Lat_comm_write_S2;
var Lat_comm_read_S3;
var Lat_comm_write_S3;
var Lat_comm_read_S4;
var Lat_comm_write_S4;
var Lat_comm_read_S5;
var Lat_comm_write_S5;
var ceil0 integer >= 0;
var ceil1 integer >= 0;
var ceil2 integer >= 0;
var ceil3 integer >= 0;
var ceil4 integer >= 0;
var ceil5 integer >= 0;
var ceil6 integer >= 0;
var ceil7 integer >= 0;
var ceil8 integer >= 0;
var ceil9 integer >= 0;
var ceil10 integer >= 0;
var ceil11 integer >= 0;
var ceil12 integer >= 0;
var ceil13 integer >= 0;
var ceil14 integer >= 0;
var ceil15 integer >= 0;

minimize cost: Lat_comp_S0 + Lat_comp_S1 + Lat_comp_S2 + Lat_comp_S3 + Lat_comp_S4 + Lat_comp_S5 + Lat_comm;

subject to con0: TC0 = TC0_0 * TC0_1 * TC0_2;
subject to con1: TC1 = TC1_0 * TC1_1 * TC1_2;
subject to con2: TC2 = TC2_0 * TC2_1 * TC2_2;
subject to con3: TC3 = TC3_0 * TC3_1 * TC3_2;
subject to con4: TC4 = TC4_0 * TC4_1 * TC4_2;
subject to con5: TC5 = TC5_0 * TC5_1 * TC5_2;
subject to con6: TC6 = TC6_0 * TC6_1 * TC6_2;
subject to con7: TC7 = TC7_0 * TC7_1 * TC7_2;
subject to con8: TC8 = TC8_0 * TC8_1 * TC8_2;
subject to con9: TC9 = TC9_0 * TC9_1 * TC9_2;
subject to con10: TC10 = TC10_0 * TC10_1 * TC10_2;
subject to con11: TC11 = TC11_0 * TC11_1 * TC11_2;
subject to con12: TC12 = TC12_0 * TC12_1 * TC12_2;
subject to con13: TC13 = TC13_0 * TC13_1 * TC13_2;
subject to con14: TC14 = TC14_0 * TC14_1 * TC14_2;
subject to con15: loop0_UF = 1;
subject to con16: loop1_UF = 1;
subject to con17: loop2_UF = 1;
subject to con18: loop3_UF = 1;
subject to con19: loop5_UF = 1;
subject to con20: loop6_UF = 1;
subject to con21: loop7_UF = 1;
subject to con22: loop8_UF = 1;
subject to con23: loop10_UF = 1;
subject to con24: loop11_UF = 1;
subject to con25: loop12_UF = 1;
subject to con26: loop13_UF = 1;
subject to con27: DSP_S1 * TC2_2 * TC3_2 * TC4_2 * loop2_UF * loop3_UF <= DSP_avail * II_S1;
subject to con28: DSP_S3 * TC7_2 * TC8_2 * TC9_2 * loop7_UF * loop8_UF <= DSP_avail * II_S3;
subject to con29: DSP_S5 * TC12_2 * TC13_2 * TC14_2 * loop12_UF * loop13_UF <= DSP_avail * II_S5;
subject to con30: (1-optimist_reuse_dsp) * (DSP_S1 * TC2_2 * TC3_2 * TC4_2 * loop2_UF * loop3_UF) / II_S1 + (DSP_S3 * TC7_2 * TC8_2 * TC9_2 * loop7_UF * loop8_UF) / II_S3 + (DSP_S5 * TC12_2 * TC13_2 * TC14_2 * loop12_UF * loop13_UF) / II_S5 <= DSP_avail;
subject to con31: loop0_UF <= TC0_0;
subject to con32: loop1_UF <= TC1_0;
subject to con33: Lat_comp_S0 = TREE_REDUCTION * (TC0_0 / loop0_UF * TC1_0 / loop1_UF * (IL_par_S0 + II_S0 * (TC0_1 * TC1_1 - 1))) + (1-TREE_REDUCTION) * (TC0_0 / loop0_UF * TC1_0 / loop1_UF * (IL_par_S0 + II_S0 * (TC0_1 * TC1_1 - 1))) ;
subject to con34: loop2_UF <= TC2_0;
subject to con35: loop3_UF <= TC3_0;
subject to con36: Lat_comp_S1 = TREE_REDUCTION * (TC2_0 / loop2_UF * TC3_0 / loop3_UF * TC4_0 * (IL_par_S1 + IL_seq_S1 * log(TC4_2)/log(2) + II_S1 * (TC2_1 * TC3_1 * TC4_1 - 1))) + (1-TREE_REDUCTION) * (TC2_0 / loop2_UF * TC3_0 / loop3_UF * TC4_0 * (IL_par_S1 + IL_seq_S1 * TC4_2 + II_S1 * (TC2_1 * TC3_1 * TC4_1 - 1))) ;
subject to con37: loop5_UF <= TC5_0;
subject to con38: loop6_UF <= TC6_0;
subject to con39: Lat_comp_S2 = TREE_REDUCTION * (TC5_0 / loop5_UF * TC6_0 / loop6_UF * (IL_par_S2 + II_S2 * (TC5_1 * TC6_1 - 1))) + (1-TREE_REDUCTION) * (TC5_0 / loop5_UF * TC6_0 / loop6_UF * (IL_par_S2 + II_S2 * (TC5_1 * TC6_1 - 1))) ;
subject to con40: loop7_UF <= TC7_0;
subject to con41: loop8_UF <= TC8_0;
subject to con42: Lat_comp_S3 = TREE_REDUCTION * (TC7_0 / loop7_UF * TC8_0 / loop8_UF * TC9_0 * (IL_par_S3 + IL_seq_S3 * log(TC9_2)/log(2) + II_S3 * (TC7_1 * TC8_1 * TC9_1 - 1))) + (1-TREE_REDUCTION) * (TC7_0 / loop7_UF * TC8_0 / loop8_UF * TC9_0 * (IL_par_S3 + IL_seq_S3 * TC9_2 + II_S3 * (TC7_1 * TC8_1 * TC9_1 - 1))) ;
subject to con43: loop10_UF <= TC10_0;
subject to con44: loop11_UF <= TC11_0;
subject to con45: Lat_comp_S4 = TREE_REDUCTION * (TC10_0 / loop10_UF * TC11_0 / loop11_UF * (IL_par_S4 + II_S4 * (TC10_1 * TC11_1 - 1))) + (1-TREE_REDUCTION) * (TC10_0 / loop10_UF * TC11_0 / loop11_UF * (IL_par_S4 + II_S4 * (TC10_1 * TC11_1 - 1))) ;
subject to con46: loop12_UF <= TC12_0;
subject to con47: loop13_UF <= TC13_0;
subject to con48: Lat_comp_S5 = TREE_REDUCTION * (TC12_0 / loop12_UF * TC13_0 / loop13_UF * TC14_0 * (IL_par_S5 + IL_seq_S5 * log(TC14_2)/log(2) + II_S5 * (TC12_1 * TC13_1 * TC14_1 - 1))) + (1-TREE_REDUCTION) * (TC12_0 / loop12_UF * TC13_0 / loop13_UF * TC14_0 * (IL_par_S5 + IL_seq_S5 * TC14_2 + II_S5 * (TC12_1 * TC13_1 * TC14_1 - 1))) ;
subject to con49: II_S0 = 1;
subject to con50: is_loop0_pip * TC1_1 = is_loop0_pip * 1;
subject to con51: is_loop0_pip * TC0_1 >= is_loop0_pip * 2;
subject to con52: is_loop1_pip * TC0_1 = is_loop1_pip * 1;
subject to con53: is_loop1_pip * TC1_1 >= is_loop1_pip * 2;
subject to con54: is_loop0_pip + is_loop1_pip = 1;
subject to con55: is_loop2_pip * TC3_1 * TC4_1 = is_loop2_pip * 1;
subject to con56: is_loop2_pip * TC2_1 >= is_loop2_pip * 2;
subject to con57: is_loop3_pip * TC2_1 * TC4_1 = is_loop3_pip * 1;
subject to con58: is_loop3_pip * TC3_1 >= is_loop3_pip * 2;
subject to con59: is_loop4_pip * TC2_1 * TC3_1 = is_loop4_pip * 1;
subject to con60: is_loop4_pip * TC4_1 >= is_loop4_pip * 2;
subject to con61: is_loop2_pip + is_loop3_pip + is_loop4_pip = 1;
subject to con62: II_S1 = 1 * is_loop2_pip + 1 * is_loop3_pip + 6 * is_loop4_pip * TREE_REDUCTION + 7 * TC4_2 * is_loop4_pip * (1 - TREE_REDUCTION);
subject to con63: II_S2 = 1;
subject to con64: is_loop5_pip * TC6_1 = is_loop5_pip * 1;
subject to con65: is_loop5_pip * TC5_1 >= is_loop5_pip * 2;
subject to con66: is_loop6_pip * TC5_1 = is_loop6_pip * 1;
subject to con67: is_loop6_pip * TC6_1 >= is_loop6_pip * 2;
subject to con68: is_loop5_pip + is_loop6_pip = 1;
subject to con69: is_loop7_pip * TC8_1 * TC9_1 = is_loop7_pip * 1;
subject to con70: is_loop7_pip * TC7_1 >= is_loop7_pip * 2;
subject to con71: is_loop8_pip * TC7_1 * TC9_1 = is_loop8_pip * 1;
subject to con72: is_loop8_pip * TC8_1 >= is_loop8_pip * 2;
subject to con73: is_loop9_pip * TC7_1 * TC8_1 = is_loop9_pip * 1;
subject to con74: is_loop9_pip * TC9_1 >= is_loop9_pip * 2;
subject to con75: is_loop7_pip + is_loop8_pip + is_loop9_pip = 1;
subject to con76: II_S3 = 1 * is_loop7_pip + 1 * is_loop8_pip + 6 * is_loop9_pip * TREE_REDUCTION + 7 * TC9_2 * is_loop9_pip * (1 - TREE_REDUCTION);
subject to con77: II_S4 = 1;
subject to con78: is_loop10_pip * TC11_1 = is_loop10_pip * 1;
subject to con79: is_loop10_pip * TC10_1 >= is_loop10_pip * 2;
subject to con80: is_loop11_pip * TC10_1 = is_loop11_pip * 1;
subject to con81: is_loop11_pip * TC11_1 >= is_loop11_pip * 2;
subject to con82: is_loop10_pip + is_loop11_pip = 1;
subject to con83: is_loop12_pip * TC13_1 * TC14_1 = is_loop12_pip * 1;
subject to con84: is_loop12_pip * TC12_1 >= is_loop12_pip * 2;
subject to con85: is_loop13_pip * TC12_1 * TC14_1 = is_loop13_pip * 1;
subject to con86: is_loop13_pip * TC13_1 >= is_loop13_pip * 2;
subject to con87: is_loop14_pip * TC12_1 * TC13_1 = is_loop14_pip * 1;
subject to con88: is_loop14_pip * TC14_1 >= is_loop14_pip * 2;
subject to con89: is_loop12_pip + is_loop13_pip + is_loop14_pip = 1;
subject to con90: II_S5 = 1 * is_loop12_pip + 1 * is_loop13_pip + 6 * is_loop14_pip * TREE_REDUCTION + 7 * TC14_2 * is_loop14_pip * (1 - TREE_REDUCTION);
#subject to con91: loop5_UF * TC5_2 + loop7_UF * TC7_2 + TC14_2 <= AP_F_0;
subject to con92: AP_F_0 = loop5_UF * TC5_2  * cte_0;
subject to con93: loop5_UF * TC5_2  <= AP_F_0;
subject to con94: AP_F_0 =  loop7_UF * TC7_2  * cte_1;
subject to con95:  loop7_UF * TC7_2  <= AP_F_0;
subject to con96: AP_F_0 =  TC14_2 * cte_2;
subject to con97:  TC14_2 <= AP_F_0;
subject to con98: AP_F_0 <= 190;
#subject to con99: 190 = AP_F_0 * cte_3;
subject to con100: AP_F_1 = burst_size_F * constant0;
#subject to con101: loop6_UF * TC6_2 + loop8_UF * TC8_2 + loop13_UF * TC13_2 <= AP_F_1;
subject to con102: AP_F_1 = loop6_UF * TC6_2  * cte_4;
subject to con103: loop6_UF * TC6_2  <= AP_F_1;
subject to con104: AP_F_1 =  loop8_UF * TC8_2  * cte_5;
subject to con105:  loop8_UF * TC8_2  <= AP_F_1;
subject to con106: AP_F_1 =  loop13_UF * TC13_2 * cte_6;
subject to con107:  loop13_UF * TC13_2 <= AP_F_1;
subject to con108: AP_F_1 <= 210;
#subject to con109: 210 = AP_F_1 * cte_7;
subject to con110: AP_F_0 * AP_F_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con111: loop0_UF * TC0_2 + loop2_UF * TC2_2 + loop12_UF * TC12_2 <= AP_E_0;
subject to con112: AP_E_0 = loop0_UF * TC0_2  * cte_8;
subject to con113: loop0_UF * TC0_2  <= AP_E_0;
subject to con114: AP_E_0 =  loop2_UF * TC2_2  * cte_9;
subject to con115:  loop2_UF * TC2_2  <= AP_E_0;
subject to con116: AP_E_0 =  loop12_UF * TC12_2 * cte_10;
subject to con117:  loop12_UF * TC12_2 <= AP_E_0;
subject to con118: AP_E_0 <= 180;
#subject to con119: 180 = AP_E_0 * cte_11;
subject to con120: AP_E_1 = burst_size_E * constant1;
#subject to con121: loop1_UF * TC1_2 + loop3_UF * TC3_2 + TC14_2 <= AP_E_1;
subject to con122: AP_E_1 = loop1_UF * TC1_2  * cte_12;
subject to con123: loop1_UF * TC1_2  <= AP_E_1;
subject to con124: AP_E_1 =  loop3_UF * TC3_2  * cte_13;
subject to con125:  loop3_UF * TC3_2  <= AP_E_1;
subject to con126: AP_E_1 =  TC14_2 * cte_14;
subject to con127:  TC14_2 <= AP_E_1;
subject to con128: AP_E_1 <= 190;
#subject to con129: 190 = AP_E_1 * cte_15;
subject to con130: AP_E_0 * AP_E_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con131: loop2_UF * TC2_2 <= AP_A_0;
subject to con132: AP_A_0 = loop2_UF * TC2_2 * cte_16;
subject to con133: loop2_UF * TC2_2 <= AP_A_0;
subject to con134: AP_A_0 <= 180;
#subject to con135: 180 = AP_A_0 * cte_17;
subject to con136: AP_A_1 = burst_size_A * constant2;
#subject to con137: TC4_2 <= AP_A_1;
subject to con138: AP_A_1 = TC4_2 * cte_18;
subject to con139: TC4_2 <= AP_A_1;
subject to con140: AP_A_1 <= 200;
#subject to con141: 200 = AP_A_1 * cte_19;
subject to con142: AP_A_0 * AP_A_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con143: TC4_2 <= AP_B_0;
subject to con144: AP_B_0 = TC4_2 * cte_20;
subject to con145: TC4_2 <= AP_B_0;
subject to con146: AP_B_0 <= 200;
#subject to con147: 200 = AP_B_0 * cte_21;
subject to con148: AP_B_1 = burst_size_B * constant3;
#subject to con149: loop3_UF * TC3_2 <= AP_B_1;
subject to con150: AP_B_1 = loop3_UF * TC3_2 * cte_22;
subject to con151: loop3_UF * TC3_2 <= AP_B_1;
subject to con152: AP_B_1 <= 190;
#subject to con153: 190 = AP_B_1 * cte_23;
subject to con154: AP_B_0 * AP_B_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con155: TC9_2 <= AP_D_0;
subject to con156: AP_D_0 = TC9_2 * cte_24;
subject to con157: TC9_2 <= AP_D_0;
subject to con158: AP_D_0 <= 220;
#subject to con159: 220 = AP_D_0 * cte_25;
subject to con160: AP_D_1 = burst_size_D * constant4;
#subject to con161: loop8_UF * TC8_2 <= AP_D_1;
subject to con162: AP_D_1 = loop8_UF * TC8_2 * cte_26;
subject to con163: loop8_UF * TC8_2 <= AP_D_1;
subject to con164: AP_D_1 <= 210;
#subject to con165: 210 = AP_D_1 * cte_27;
subject to con166: AP_D_0 * AP_D_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con167: loop7_UF * TC7_2 <= AP_C_0;
subject to con168: AP_C_0 = loop7_UF * TC7_2 * cte_28;
subject to con169: loop7_UF * TC7_2 <= AP_C_0;
subject to con170: AP_C_0 <= 190;
#subject to con171: 190 = AP_C_0 * cte_29;
subject to con172: AP_C_1 = burst_size_C * constant5;
#subject to con173: TC9_2 <= AP_C_1;
subject to con174: AP_C_1 = TC9_2 * cte_30;
subject to con175: TC9_2 <= AP_C_1;
subject to con176: AP_C_1 <= 220;
#subject to con177: 220 = AP_C_1 * cte_31;
subject to con178: AP_C_0 * AP_C_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
#subject to con179: loop10_UF * TC10_2 + loop12_UF * TC12_2 <= AP_G_0;
subject to con180: AP_G_0 = loop10_UF * TC10_2  * cte_32;
subject to con181: loop10_UF * TC10_2  <= AP_G_0;
subject to con182: AP_G_0 =  loop12_UF * TC12_2 * cte_33;
subject to con183:  loop12_UF * TC12_2 <= AP_G_0;
subject to con184: AP_G_0 <= 180;
#subject to con185: 180 = AP_G_0 * cte_34;
subject to con186: AP_G_1 = burst_size_G * constant6;
#subject to con187: loop11_UF * TC11_2 + loop13_UF * TC13_2 <= AP_G_1;
subject to con188: AP_G_1 = loop11_UF * TC11_2  * cte_35;
subject to con189: loop11_UF * TC11_2  <= AP_G_1;
subject to con190: AP_G_1 =  loop13_UF * TC13_2 * cte_36;
subject to con191:  loop13_UF * TC13_2 <= AP_G_1;
subject to con192: AP_G_1 <= 210;
#subject to con193: 210 = AP_G_1 * cte_37;
subject to con194: AP_G_0 * AP_G_1 <= CONSTRAINT_ARRAY_PARTITIONING_VALUE;
subject to con195: transfer_F_S2_under_loop5 * TC5_0 >= transfer_F_S2_under_loop5 * 2;
subject to con196: burst_F_S2_under_loop5 = 1;
subject to con197: transfer_F_S2_under_loop6 * TC6_0 >= transfer_F_S2_under_loop6 * 2;
subject to con198: burst_F_S2_under_loop6 = 1;
subject to con199: transfer_F_S2_under_loop5 + transfer_F_S2_under_loop6 + transfer_F_total = 1;
subject to con200: transfer_F_S3_under_loop7 * TC7_0 >= transfer_F_S3_under_loop7 * 2;
subject to con201: burst_F_S3_under_loop7 = 1;
subject to con202: transfer_F_S3_under_loop8 * TC8_0 >= transfer_F_S3_under_loop8 * 2;
subject to con203: burst_F_S3_under_loop8 = 1;
subject to con204: transfer_F_S3_under_loop7 + transfer_F_S3_under_loop8 + transfer_F_total = 1;
subject to con205: transfer_F_S5_under_loop14 * TC14_0 >= transfer_F_S5_under_loop14 * 2;
subject to con206: burst_F_S5_under_loop14 = 1;
subject to con207: transfer_F_S5_under_loop13 * TC13_0 >= transfer_F_S5_under_loop13 * 2;
subject to con208: burst_F_S5_under_loop13 = 1;
subject to con209: transfer_F_S5_under_loop14 + transfer_F_S5_under_loop13 + transfer_F_total = 1;
subject to con210: transfer_E_S0_under_loop0 * TC0_0 >= transfer_E_S0_under_loop0 * 2;
subject to con211: burst_E_S0_under_loop0 = 1;
subject to con212: transfer_E_S0_under_loop1 * TC1_0 >= transfer_E_S0_under_loop1 * 2;
subject to con213: burst_E_S0_under_loop1 = 1;
subject to con214: transfer_E_S0_under_loop0 + transfer_E_S0_under_loop1 + transfer_E_total = 1;
subject to con215: transfer_E_S1_under_loop2 * TC2_0 >= transfer_E_S1_under_loop2 * 2;
subject to con216: burst_E_S1_under_loop2 = 1;
subject to con217: transfer_E_S1_under_loop3 * TC3_0 >= transfer_E_S1_under_loop3 * 2;
subject to con218: burst_E_S1_under_loop3 = 1;
subject to con219: transfer_E_S1_under_loop2 + transfer_E_S1_under_loop3 + transfer_E_total = 1;
subject to con220: transfer_E_S5_under_loop14 * TC14_0 >= transfer_E_S5_under_loop14 * 2;
subject to con221: burst_E_S5_under_loop14 = 1;
subject to con222: transfer_E_S5_under_loop12 * TC12_0 >= transfer_E_S5_under_loop12 * 2;
subject to con223: burst_E_S5_under_loop12 = 1;
subject to con224: transfer_E_S5_under_loop14 + transfer_E_S5_under_loop12 + transfer_E_total = 1;
subject to con225: transfer_A_S1_under_loop4 * TC4_0 >= transfer_A_S1_under_loop4 * 2;
subject to con226: burst_A_S1_under_loop4 = 1;
subject to con227: transfer_A_S1_under_loop2 * TC2_0 >= transfer_A_S1_under_loop2 * 2;
subject to con228: burst_A_S1_under_loop2 = 1;
subject to con229: transfer_A_S1_under_loop4 + transfer_A_S1_under_loop2 + transfer_A_total = 1;
subject to con230: transfer_B_S1_under_loop4 * TC4_0 >= transfer_B_S1_under_loop4 * 2;
subject to con231: burst_B_S1_under_loop4 = 1;
subject to con232: transfer_B_S1_under_loop3 * TC3_0 >= transfer_B_S1_under_loop3 * 2;
subject to con233: burst_B_S1_under_loop3 = 1;
subject to con234: transfer_B_S1_under_loop4 + transfer_B_S1_under_loop3 + transfer_B_total = 1;
subject to con235: transfer_D_S3_under_loop9 * TC9_0 >= transfer_D_S3_under_loop9 * 2;
subject to con236: burst_D_S3_under_loop9 = 1;
subject to con237: transfer_D_S3_under_loop8 * TC8_0 >= transfer_D_S3_under_loop8 * 2;
subject to con238: burst_D_S3_under_loop8 = 1;
subject to con239: transfer_D_S3_under_loop9 + transfer_D_S3_under_loop8 + transfer_D_total = 1;
subject to con240: transfer_C_S3_under_loop9 * TC9_0 >= transfer_C_S3_under_loop9 * 2;
subject to con241: burst_C_S3_under_loop9 = 1;
subject to con242: transfer_C_S3_under_loop7 * TC7_0 >= transfer_C_S3_under_loop7 * 2;
subject to con243: burst_C_S3_under_loop7 = 1;
subject to con244: transfer_C_S3_under_loop9 + transfer_C_S3_under_loop7 + transfer_C_total = 1;
subject to con245: transfer_G_S4_under_loop10 * TC10_0 >= transfer_G_S4_under_loop10 * 2;
subject to con246: burst_G_S4_under_loop10 = 1;
subject to con247: transfer_G_S4_under_loop11 * TC11_0 >= transfer_G_S4_under_loop11 * 2;
subject to con248: burst_G_S4_under_loop11 = 1;
subject to con249: transfer_G_S4_under_loop10 + transfer_G_S4_under_loop11 + transfer_G_total = 1;
subject to con250: transfer_G_S5_under_loop12 * TC12_0 >= transfer_G_S5_under_loop12 * 2;
subject to con251: burst_G_S5_under_loop12 = 1;
subject to con252: transfer_G_S5_under_loop13 * TC13_0 >= transfer_G_S5_under_loop13 * 2;
subject to con253: burst_G_S5_under_loop13 = 1;
subject to con254: transfer_G_S5_under_loop12 + transfer_G_S5_under_loop13 + transfer_G_total = 1;
subject to con255: transfer_E_total * footprint_tot_E + transfer_E_S0_under_loop0 * footprint_E_S0 / TC0_0 * 1 + transfer_E_S0_under_loop1 * footprint_E_S0 / TC0_0 * TC1_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con256: transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_A_total * footprint_tot_A + transfer_B_total * footprint_tot_B + transfer_A_S1_under_loop4 * footprint_A_S1 / TC2_0 * TC4_0 * 1 + transfer_A_S1_under_loop2 * footprint_A_S1 / TC2_0 * 1 + transfer_B_S1_under_loop4 * footprint_B_S1 / TC3_0 * TC4_0 * 1 + transfer_B_S1_under_loop3 * footprint_B_S1 / TC3_0 * 1 + transfer_E_S1_under_loop2 * footprint_E_S1 / TC2_0 * 1 + transfer_E_S1_under_loop3 * footprint_E_S1 / TC2_0 * TC3_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con257: transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_F_total * footprint_tot_F + transfer_F_S2_under_loop5 * footprint_F_S2 / TC5_0 * 1 + transfer_F_S2_under_loop6 * footprint_F_S2 / TC5_0 * TC6_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con258: transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_F_total * footprint_tot_F + transfer_F_total * footprint_tot_F + transfer_F_total * footprint_tot_F + transfer_C_total * footprint_tot_C + transfer_D_total * footprint_tot_D + transfer_D_S3_under_loop9 * footprint_D_S3 / TC8_0 * TC9_0 * 1 + transfer_D_S3_under_loop8 * footprint_D_S3 / TC8_0 * 1 + transfer_F_S3_under_loop7 * footprint_F_S3 / TC7_0 * 1 + transfer_F_S3_under_loop8 * footprint_F_S3 / TC7_0 * TC8_0 * 1 + transfer_C_S3_under_loop9 * footprint_C_S3 / TC7_0 * TC9_0 * 1 + transfer_C_S3_under_loop7 * footprint_C_S3 / TC7_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con259: transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_F_total * footprint_tot_F + transfer_F_total * footprint_tot_F + transfer_F_total * footprint_tot_F + transfer_G_total * footprint_tot_G + transfer_G_S4_under_loop10 * footprint_G_S4 / TC10_0 * 1 + transfer_G_S4_under_loop11 * footprint_G_S4 / TC10_0 * TC11_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con260: transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_E_total * footprint_tot_E + transfer_F_total * footprint_tot_F + transfer_F_total * footprint_tot_F + transfer_F_total * footprint_tot_F + transfer_G_total * footprint_tot_G + transfer_G_total * footprint_tot_G + transfer_G_total * footprint_tot_G + transfer_E_total * footprint_tot_E + transfer_F_total * footprint_tot_F + transfer_G_S5_under_loop12 * footprint_G_S5 / TC12_0 * 1 + transfer_G_S5_under_loop13 * footprint_G_S5 / TC12_0 * TC13_0 * 1 + transfer_F_S5_under_loop14 * footprint_F_S5 / TC13_0 * TC14_0 * 1 + transfer_F_S5_under_loop13 * footprint_F_S5 / TC13_0 * 1 + transfer_E_S5_under_loop14 * footprint_E_S5 / TC12_0 * TC14_0 * 1 + transfer_E_S5_under_loop12 * footprint_E_S5 / TC12_0 * 1 <= ON_CHIP_MEM_SIZE;
subject to con261: is_burst_size_F_16 + is_burst_size_F_8 + is_burst_size_F_4 + is_burst_size_F_2 + is_burst_size_F_1 = 1;
subject to con262: burst_size_F = is_burst_size_F_16 * 16 + is_burst_size_F_8 * 8 + is_burst_size_F_4 * 4 + is_burst_size_F_2 * 2 + is_burst_size_F_1 * 1;
subject to con263: AP_F_1 >= is_burst_size_F_16 * 16 + is_burst_size_F_8 * 8 + is_burst_size_F_4 * 4 + is_burst_size_F_2 * 2 + is_burst_size_F_1 * 1;
subject to con264: is_burst_size_F_16 = 0;
subject to con265: is_burst_size_F_8 = 0;
subject to con266: is_burst_size_F_4 = 0;
subject to con267: AP_F_1 = (is_burst_size_F_16 * 16 + is_burst_size_F_8 * 8 + is_burst_size_F_4 * 4 + is_burst_size_F_2 * 2 + is_burst_size_F_1 * 1) * cte_burst_size_F;
subject to con268: is_burst_size_E_16 + is_burst_size_E_8 + is_burst_size_E_4 + is_burst_size_E_2 + is_burst_size_E_1 = 1;
subject to con269: burst_size_E = is_burst_size_E_16 * 16 + is_burst_size_E_8 * 8 + is_burst_size_E_4 * 4 + is_burst_size_E_2 * 2 + is_burst_size_E_1 * 1;
subject to con270: AP_E_1 >= is_burst_size_E_16 * 16 + is_burst_size_E_8 * 8 + is_burst_size_E_4 * 4 + is_burst_size_E_2 * 2 + is_burst_size_E_1 * 1;
subject to con271: is_burst_size_E_16 = 0;
subject to con272: is_burst_size_E_8 = 0;
subject to con273: is_burst_size_E_4 = 0;
subject to con274: AP_E_1 = (is_burst_size_E_16 * 16 + is_burst_size_E_8 * 8 + is_burst_size_E_4 * 4 + is_burst_size_E_2 * 2 + is_burst_size_E_1 * 1) * cte_burst_size_E;
subject to con275: is_burst_size_A_16 + is_burst_size_A_8 + is_burst_size_A_4 + is_burst_size_A_2 + is_burst_size_A_1 = 1;
subject to con276: burst_size_A = is_burst_size_A_16 * 16 + is_burst_size_A_8 * 8 + is_burst_size_A_4 * 4 + is_burst_size_A_2 * 2 + is_burst_size_A_1 * 1;
subject to con277: AP_A_1 >= is_burst_size_A_16 * 16 + is_burst_size_A_8 * 8 + is_burst_size_A_4 * 4 + is_burst_size_A_2 * 2 + is_burst_size_A_1 * 1;
subject to con278: is_burst_size_A_16 = 0;
subject to con279: AP_A_1 = (is_burst_size_A_16 * 16 + is_burst_size_A_8 * 8 + is_burst_size_A_4 * 4 + is_burst_size_A_2 * 2 + is_burst_size_A_1 * 1) * cte_burst_size_A;
subject to con280: is_burst_size_B_16 + is_burst_size_B_8 + is_burst_size_B_4 + is_burst_size_B_2 + is_burst_size_B_1 = 1;
subject to con281: burst_size_B = is_burst_size_B_16 * 16 + is_burst_size_B_8 * 8 + is_burst_size_B_4 * 4 + is_burst_size_B_2 * 2 + is_burst_size_B_1 * 1;
subject to con282: AP_B_1 >= is_burst_size_B_16 * 16 + is_burst_size_B_8 * 8 + is_burst_size_B_4 * 4 + is_burst_size_B_2 * 2 + is_burst_size_B_1 * 1;
subject to con283: is_burst_size_B_16 = 0;
subject to con284: is_burst_size_B_8 = 0;
subject to con285: is_burst_size_B_4 = 0;
subject to con286: AP_B_1 = (is_burst_size_B_16 * 16 + is_burst_size_B_8 * 8 + is_burst_size_B_4 * 4 + is_burst_size_B_2 * 2 + is_burst_size_B_1 * 1) * cte_burst_size_B;
subject to con287: is_burst_size_D_16 + is_burst_size_D_8 + is_burst_size_D_4 + is_burst_size_D_2 + is_burst_size_D_1 = 1;
subject to con288: burst_size_D = is_burst_size_D_16 * 16 + is_burst_size_D_8 * 8 + is_burst_size_D_4 * 4 + is_burst_size_D_2 * 2 + is_burst_size_D_1 * 1;
subject to con289: AP_D_1 >= is_burst_size_D_16 * 16 + is_burst_size_D_8 * 8 + is_burst_size_D_4 * 4 + is_burst_size_D_2 * 2 + is_burst_size_D_1 * 1;
subject to con290: is_burst_size_D_16 = 0;
subject to con291: is_burst_size_D_8 = 0;
subject to con292: is_burst_size_D_4 = 0;
subject to con293: AP_D_1 = (is_burst_size_D_16 * 16 + is_burst_size_D_8 * 8 + is_burst_size_D_4 * 4 + is_burst_size_D_2 * 2 + is_burst_size_D_1 * 1) * cte_burst_size_D;
subject to con294: is_burst_size_C_16 + is_burst_size_C_8 + is_burst_size_C_4 + is_burst_size_C_2 + is_burst_size_C_1 = 1;
subject to con295: burst_size_C = is_burst_size_C_16 * 16 + is_burst_size_C_8 * 8 + is_burst_size_C_4 * 4 + is_burst_size_C_2 * 2 + is_burst_size_C_1 * 1;
subject to con296: AP_C_1 >= is_burst_size_C_16 * 16 + is_burst_size_C_8 * 8 + is_burst_size_C_4 * 4 + is_burst_size_C_2 * 2 + is_burst_size_C_1 * 1;
subject to con297: is_burst_size_C_16 = 0;
subject to con298: is_burst_size_C_8 = 0;
subject to con299: AP_C_1 = (is_burst_size_C_16 * 16 + is_burst_size_C_8 * 8 + is_burst_size_C_4 * 4 + is_burst_size_C_2 * 2 + is_burst_size_C_1 * 1) * cte_burst_size_C;
subject to con300: is_burst_size_G_16 + is_burst_size_G_8 + is_burst_size_G_4 + is_burst_size_G_2 + is_burst_size_G_1 = 1;
subject to con301: burst_size_G = is_burst_size_G_16 * 16 + is_burst_size_G_8 * 8 + is_burst_size_G_4 * 4 + is_burst_size_G_2 * 2 + is_burst_size_G_1 * 1;
subject to con302: AP_G_1 >= is_burst_size_G_16 * 16 + is_burst_size_G_8 * 8 + is_burst_size_G_4 * 4 + is_burst_size_G_2 * 2 + is_burst_size_G_1 * 1;
subject to con303: is_burst_size_G_16 = 0;
subject to con304: is_burst_size_G_8 = 0;
subject to con305: is_burst_size_G_4 = 0;
subject to con306: AP_G_1 = (is_burst_size_G_16 * 16 + is_burst_size_G_8 * 8 + is_burst_size_G_4 * 4 + is_burst_size_G_2 * 2 + is_burst_size_G_1 * 1) * cte_burst_size_G;
#subject to con307: Lat_comm_read_S0 = transfer_E_total * footprint_tot_E/burst_size_E + transfer_E_S0_under_loop0 * 1 * TC0_0 * footprint_E_S0 / TC0_0 / burst_E_S0_under_loop0 + transfer_E_S0_under_loop1 * 1 * TC0_0 * TC1_0 * footprint_E_S0 / TC0_0 * TC1_0 / burst_E_S0_under_loop1;
subject to con308: Lat_comm_read_S0 = transfer_E_total * footprint_tot_E/burst_size_E + transfer_E_S0_under_loop0 * 1 * TC0_0 * footprint_E_S0 / TC0_0 / burst_E_S0_under_loop0 + transfer_E_S0_under_loop1 * 1 * TC0_0 * TC1_0 * footprint_E_S0 / TC0_0 * TC1_0 / burst_E_S0_under_loop1;
#subject to con309: Lat_comm_write_S0 = transfer_E_S0_under_loop0 * 1 * footprint_E_S0  / burst_E_S0_under_loop0 + transfer_E_S0_under_loop1 * 1 * footprint_E_S0  / burst_E_S0_under_loop1;
subject to con310: Lat_comm_write_S0 = transfer_E_S0_under_loop0 * 1 * footprint_E_S0  / burst_E_S0_under_loop0 + transfer_E_S0_under_loop1 * 1 * footprint_E_S0  / burst_E_S0_under_loop1;
#subject to con311: Lat_comm_read_S1 = (1 - transfer_A_total ) * transfer_B_total  *  footprint_tot_B/burst_size_B + transfer_A_total  * (1 - transfer_B_total ) *  footprint_tot_A/burst_size_A + transfer_A_total  * transfer_B_total  * (footprint_tot_A/burst_size_A + footprint_tot_B/burst_size_B + abs(footprint_tot_A/burst_size_A - footprint_tot_B/burst_size_B))/2 + (1 - transfer_E_S1_under_loop2 ) * transfer_A_S1_under_loop2  *  1  *  TC2_0  *  footprint_A_S1 / TC2_0 / burst_A_S1_under_loop2 + transfer_E_S1_under_loop2  * (1 - transfer_A_S1_under_loop2 ) *  1  *  TC2_0  *  footprint_E_S1 / TC2_0 / burst_E_S1_under_loop2 + transfer_E_S1_under_loop2  * transfer_A_S1_under_loop2  * (1*TC2_0*footprint_E_S1/TC2_0/burst_E_S1_under_loop2 + 1*TC2_0*footprint_A_S1/TC2_0/burst_A_S1_under_loop2 + abs(1*TC2_0*footprint_E_S1/TC2_0/burst_E_S1_under_loop2 - 1*TC2_0*footprint_A_S1/TC2_0/burst_A_S1_under_loop2))/2 + (1 - transfer_E_S1_under_loop3 ) * transfer_B_S1_under_loop3  *  TC2_0  *  TC3_0  *  footprint_B_S1 / TC3_0 / burst_B_S1_under_loop3 + transfer_E_S1_under_loop3  * (1 - transfer_B_S1_under_loop3 ) *  1  *  TC2_0  *  TC3_0  *  footprint_E_S1 / TC2_0  *  TC3_0 / burst_E_S1_under_loop3 + transfer_E_S1_under_loop3  * transfer_B_S1_under_loop3  * (1*TC2_0*TC3_0*footprint_E_S1/TC2_0*TC3_0/burst_E_S1_under_loop3 + TC2_0*TC3_0*footprint_B_S1/TC3_0/burst_B_S1_under_loop3 + abs(1*TC2_0*TC3_0*footprint_E_S1/TC2_0*TC3_0/burst_E_S1_under_loop3 - TC2_0*TC3_0*footprint_B_S1/TC3_0/burst_B_S1_under_loop3))/2 + (1 - transfer_A_S1_under_loop4 ) * transfer_B_S1_under_loop4  *  TC2_0  *  TC3_0  *  TC4_0  *  footprint_B_S1 / TC3_0  *  TC4_0 / burst_B_S1_under_loop4 + transfer_A_S1_under_loop4  * (1 - transfer_B_S1_under_loop4 ) *  TC3_0  *  TC2_0  *  TC4_0  *  footprint_A_S1 / TC2_0  *  TC4_0 / burst_A_S1_under_loop4 + transfer_A_S1_under_loop4  * transfer_B_S1_under_loop4  * (TC3_0*TC2_0*TC4_0*footprint_A_S1/TC2_0*TC4_0/burst_A_S1_under_loop4 + TC2_0*TC3_0*TC4_0*footprint_B_S1/TC3_0*TC4_0/burst_B_S1_under_loop4 + abs(TC3_0*TC2_0*TC4_0*footprint_A_S1/TC2_0*TC4_0/burst_A_S1_under_loop4 - TC2_0*TC3_0*TC4_0*footprint_B_S1/TC3_0*TC4_0/burst_B_S1_under_loop4))/2;
subject to con312: Lat_comm_read_S1 = transfer_A_total * footprint_tot_A/burst_size_A + transfer_B_total * footprint_tot_B/burst_size_B + transfer_E_S1_under_loop2 * 1 * TC2_0 * footprint_E_S1 / TC2_0 / burst_E_S1_under_loop2 + transfer_A_S1_under_loop2 * 1 * TC2_0 * footprint_A_S1 / TC2_0 / burst_A_S1_under_loop2 + transfer_E_S1_under_loop3 * 1 * TC2_0 * TC3_0 * footprint_E_S1 / TC2_0 * TC3_0 / burst_E_S1_under_loop3 + transfer_B_S1_under_loop3 * TC2_0 * TC3_0 * footprint_B_S1 / TC3_0 / burst_B_S1_under_loop3 + transfer_A_S1_under_loop4 * TC3_0 * TC2_0 * TC4_0 * footprint_A_S1 / TC2_0 * TC4_0 / burst_A_S1_under_loop4 + transfer_B_S1_under_loop4 * TC2_0 * TC3_0 * TC4_0 * footprint_B_S1 / TC3_0 * TC4_0 / burst_B_S1_under_loop4;
#subject to con313: Lat_comm_write_S1 = transfer_E_S1_under_loop2 * 1 * footprint_E_S1  / burst_E_S1_under_loop2 + transfer_E_S1_under_loop3 * 1 * footprint_E_S1  / burst_E_S1_under_loop3;
subject to con314: Lat_comm_write_S1 = transfer_E_S1_under_loop2 * 1 * footprint_E_S1  / burst_E_S1_under_loop2 + transfer_E_S1_under_loop3 * 1 * footprint_E_S1  / burst_E_S1_under_loop3;
#subject to con315: Lat_comm_read_S2 = transfer_F_total * footprint_tot_F/burst_size_F + transfer_F_S2_under_loop5 * 1 * TC5_0 * footprint_F_S2 / TC5_0 / burst_F_S2_under_loop5 + transfer_F_S2_under_loop6 * 1 * TC5_0 * TC6_0 * footprint_F_S2 / TC5_0 * TC6_0 / burst_F_S2_under_loop6;
subject to con316: Lat_comm_read_S2 = transfer_F_total * footprint_tot_F/burst_size_F + transfer_F_S2_under_loop5 * 1 * TC5_0 * footprint_F_S2 / TC5_0 / burst_F_S2_under_loop5 + transfer_F_S2_under_loop6 * 1 * TC5_0 * TC6_0 * footprint_F_S2 / TC5_0 * TC6_0 / burst_F_S2_under_loop6;
#subject to con317: Lat_comm_write_S2 = transfer_F_S2_under_loop5 * 1 * footprint_F_S2  / burst_F_S2_under_loop5 + transfer_F_S2_under_loop6 * 1 * footprint_F_S2  / burst_F_S2_under_loop6;
subject to con318: Lat_comm_write_S2 = transfer_F_S2_under_loop5 * 1 * footprint_F_S2  / burst_F_S2_under_loop5 + transfer_F_S2_under_loop6 * 1 * footprint_F_S2  / burst_F_S2_under_loop6;
#subject to con319: Lat_comm_read_S3 = (1 - transfer_D_total ) * transfer_C_total  *  footprint_tot_C/burst_size_C + transfer_D_total  * (1 - transfer_C_total ) *  footprint_tot_D/burst_size_D + transfer_D_total  * transfer_C_total  * (footprint_tot_D/burst_size_D + footprint_tot_C/burst_size_C + abs(footprint_tot_D/burst_size_D - footprint_tot_C/burst_size_C))/2 + (1 - transfer_F_S3_under_loop7 ) * transfer_C_S3_under_loop7  *  1  *  TC7_0  *  footprint_C_S3 / TC7_0 / burst_C_S3_under_loop7 + transfer_F_S3_under_loop7  * (1 - transfer_C_S3_under_loop7 ) *  1  *  TC7_0  *  footprint_F_S3 / TC7_0 / burst_F_S3_under_loop7 + transfer_F_S3_under_loop7  * transfer_C_S3_under_loop7  * (1*TC7_0*footprint_F_S3/TC7_0/burst_F_S3_under_loop7 + 1*TC7_0*footprint_C_S3/TC7_0/burst_C_S3_under_loop7 + abs(1*TC7_0*footprint_F_S3/TC7_0/burst_F_S3_under_loop7 - 1*TC7_0*footprint_C_S3/TC7_0/burst_C_S3_under_loop7))/2 + (1 - transfer_F_S3_under_loop8 ) * transfer_D_S3_under_loop8  *  TC7_0  *  TC8_0  *  footprint_D_S3 / TC8_0 / burst_D_S3_under_loop8 + transfer_F_S3_under_loop8  * (1 - transfer_D_S3_under_loop8 ) *  1  *  TC7_0  *  TC8_0  *  footprint_F_S3 / TC7_0  *  TC8_0 / burst_F_S3_under_loop8 + transfer_F_S3_under_loop8  * transfer_D_S3_under_loop8  * (1*TC7_0*TC8_0*footprint_F_S3/TC7_0*TC8_0/burst_F_S3_under_loop8 + TC7_0*TC8_0*footprint_D_S3/TC8_0/burst_D_S3_under_loop8 + abs(1*TC7_0*TC8_0*footprint_F_S3/TC7_0*TC8_0/burst_F_S3_under_loop8 - TC7_0*TC8_0*footprint_D_S3/TC8_0/burst_D_S3_under_loop8))/2 + (1 - transfer_D_S3_under_loop9 ) * transfer_C_S3_under_loop9  *  TC8_0  *  TC7_0  *  TC9_0  *  footprint_C_S3 / TC7_0  *  TC9_0 / burst_C_S3_under_loop9 + transfer_D_S3_under_loop9  * (1 - transfer_C_S3_under_loop9 ) *  TC7_0  *  TC8_0  *  TC9_0  *  footprint_D_S3 / TC8_0  *  TC9_0 / burst_D_S3_under_loop9 + transfer_D_S3_under_loop9  * transfer_C_S3_under_loop9  * (TC7_0*TC8_0*TC9_0*footprint_D_S3/TC8_0*TC9_0/burst_D_S3_under_loop9 + TC8_0*TC7_0*TC9_0*footprint_C_S3/TC7_0*TC9_0/burst_C_S3_under_loop9 + abs(TC7_0*TC8_0*TC9_0*footprint_D_S3/TC8_0*TC9_0/burst_D_S3_under_loop9 - TC8_0*TC7_0*TC9_0*footprint_C_S3/TC7_0*TC9_0/burst_C_S3_under_loop9))/2;
subject to con320: Lat_comm_read_S3 = transfer_D_total * footprint_tot_D/burst_size_D + transfer_C_total * footprint_tot_C/burst_size_C + transfer_F_S3_under_loop7 * 1 * TC7_0 * footprint_F_S3 / TC7_0 / burst_F_S3_under_loop7 + transfer_C_S3_under_loop7 * 1 * TC7_0 * footprint_C_S3 / TC7_0 / burst_C_S3_under_loop7 + transfer_F_S3_under_loop8 * 1 * TC7_0 * TC8_0 * footprint_F_S3 / TC7_0 * TC8_0 / burst_F_S3_under_loop8 + transfer_D_S3_under_loop8 * TC7_0 * TC8_0 * footprint_D_S3 / TC8_0 / burst_D_S3_under_loop8 + transfer_D_S3_under_loop9 * TC7_0 * TC8_0 * TC9_0 * footprint_D_S3 / TC8_0 * TC9_0 / burst_D_S3_under_loop9 + transfer_C_S3_under_loop9 * TC8_0 * TC7_0 * TC9_0 * footprint_C_S3 / TC7_0 * TC9_0 / burst_C_S3_under_loop9;
#subject to con321: Lat_comm_write_S3 = transfer_F_S3_under_loop7 * 1 * footprint_F_S3  / burst_F_S3_under_loop7 + transfer_F_S3_under_loop8 * 1 * footprint_F_S3  / burst_F_S3_under_loop8;
subject to con322: Lat_comm_write_S3 = transfer_F_S3_under_loop7 * 1 * footprint_F_S3  / burst_F_S3_under_loop7 + transfer_F_S3_under_loop8 * 1 * footprint_F_S3  / burst_F_S3_under_loop8;
#subject to con323: Lat_comm_read_S4 = transfer_G_total * footprint_tot_G/burst_size_G + transfer_G_S4_under_loop10 * 1 * TC10_0 * footprint_G_S4 / TC10_0 / burst_G_S4_under_loop10 + transfer_G_S4_under_loop11 * 1 * TC10_0 * TC11_0 * footprint_G_S4 / TC10_0 * TC11_0 / burst_G_S4_under_loop11;
subject to con324: Lat_comm_read_S4 = transfer_G_total * footprint_tot_G/burst_size_G + transfer_G_S4_under_loop10 * 1 * TC10_0 * footprint_G_S4 / TC10_0 / burst_G_S4_under_loop10 + transfer_G_S4_under_loop11 * 1 * TC10_0 * TC11_0 * footprint_G_S4 / TC10_0 * TC11_0 / burst_G_S4_under_loop11;
#subject to con325: Lat_comm_write_S4 = transfer_G_S4_under_loop10 * 1 * footprint_G_S4  / burst_G_S4_under_loop10 + transfer_G_S4_under_loop11 * 1 * footprint_G_S4  / burst_G_S4_under_loop11;
subject to con326: Lat_comm_write_S4 = transfer_G_S4_under_loop10 * 1 * footprint_G_S4  / burst_G_S4_under_loop10 + transfer_G_S4_under_loop11 * 1 * footprint_G_S4  / burst_G_S4_under_loop11;
#subject to con327: Lat_comm_read_S5 = (1 - transfer_E_S5_under_loop12 ) * transfer_G_S5_under_loop12  *  1  *  TC12_0  *  footprint_G_S5 / TC12_0 / burst_G_S5_under_loop12 + transfer_E_S5_under_loop12  * (1 - transfer_G_S5_under_loop12 ) *  1  *  TC12_0  *  footprint_E_S5 / TC12_0 / burst_E_S5_under_loop12 + transfer_E_S5_under_loop12  * transfer_G_S5_under_loop12  * (1*TC12_0*footprint_E_S5/TC12_0/burst_E_S5_under_loop12 + 1*TC12_0*footprint_G_S5/TC12_0/burst_G_S5_under_loop12 + abs(1*TC12_0*footprint_E_S5/TC12_0/burst_E_S5_under_loop12 - 1*TC12_0*footprint_G_S5/TC12_0/burst_G_S5_under_loop12))/2 + (1 - transfer_F_S5_under_loop13 ) * transfer_G_S5_under_loop13  *  1  *  TC12_0  *  TC13_0  *  footprint_G_S5 / TC12_0  *  TC13_0 / burst_G_S5_under_loop13 + transfer_F_S5_under_loop13  * (1 - transfer_G_S5_under_loop13 ) *  TC12_0  *  TC13_0  *  footprint_F_S5 / TC13_0 / burst_F_S5_under_loop13 + transfer_F_S5_under_loop13  * transfer_G_S5_under_loop13  * (TC12_0*TC13_0*footprint_F_S5/TC13_0/burst_F_S5_under_loop13 + 1*TC12_0*TC13_0*footprint_G_S5/TC12_0*TC13_0/burst_G_S5_under_loop13 + abs(TC12_0*TC13_0*footprint_F_S5/TC13_0/burst_F_S5_under_loop13 - 1*TC12_0*TC13_0*footprint_G_S5/TC12_0*TC13_0/burst_G_S5_under_loop13))/2 + (1 - transfer_F_S5_under_loop14 ) * transfer_E_S5_under_loop14  *  TC13_0  *  TC12_0  *  TC14_0  *  footprint_E_S5 / TC12_0  *  TC14_0 / burst_E_S5_under_loop14 + transfer_F_S5_under_loop14  * (1 - transfer_E_S5_under_loop14 ) *  TC12_0  *  TC13_0  *  TC14_0  *  footprint_F_S5 / TC13_0  *  TC14_0 / burst_F_S5_under_loop14 + transfer_F_S5_under_loop14  * transfer_E_S5_under_loop14  * (TC12_0*TC13_0*TC14_0*footprint_F_S5/TC13_0*TC14_0/burst_F_S5_under_loop14 + TC13_0*TC12_0*TC14_0*footprint_E_S5/TC12_0*TC14_0/burst_E_S5_under_loop14 + abs(TC12_0*TC13_0*TC14_0*footprint_F_S5/TC13_0*TC14_0/burst_F_S5_under_loop14 - TC13_0*TC12_0*TC14_0*footprint_E_S5/TC12_0*TC14_0/burst_E_S5_under_loop14))/2;
subject to con328: Lat_comm_read_S5 = transfer_E_S5_under_loop12 * 1 * TC12_0 * footprint_E_S5 / TC12_0 / burst_E_S5_under_loop12 + transfer_G_S5_under_loop12 * 1 * TC12_0 * footprint_G_S5 / TC12_0 / burst_G_S5_under_loop12 + transfer_F_S5_under_loop13 * TC12_0 * TC13_0 * footprint_F_S5 / TC13_0 / burst_F_S5_under_loop13 + transfer_G_S5_under_loop13 * 1 * TC12_0 * TC13_0 * footprint_G_S5 / TC12_0 * TC13_0 / burst_G_S5_under_loop13 + transfer_F_S5_under_loop14 * TC12_0 * TC13_0 * TC14_0 * footprint_F_S5 / TC13_0 * TC14_0 / burst_F_S5_under_loop14 + transfer_E_S5_under_loop14 * TC13_0 * TC12_0 * TC14_0 * footprint_E_S5 / TC12_0 * TC14_0 / burst_E_S5_under_loop14;
#subject to con329: Lat_comm_write_S5 = (1 - transfer_G_total ) * (1 - transfer_F_total ) * transfer_E_total  *  footprint_tot_E/burst_size_E + (1 - transfer_G_total ) * transfer_F_total  * (1 - transfer_E_total ) *  footprint_tot_F/burst_size_F + (1 - transfer_G_total ) * transfer_F_total  * transfer_E_total  * (footprint_tot_F/burst_size_F + footprint_tot_E/burst_size_E + abs(footprint_tot_F/burst_size_F - footprint_tot_E/burst_size_E))/2 + transfer_G_total  * (1 - transfer_F_total ) * (1 - transfer_E_total ) *  footprint_tot_G/burst_size_G + transfer_G_total  * (1 - transfer_F_total ) * transfer_E_total  * (footprint_tot_G/burst_size_G + footprint_tot_E/burst_size_E + abs(footprint_tot_G/burst_size_G - footprint_tot_E/burst_size_E))/2 + transfer_G_total  * transfer_F_total  * (1 - transfer_E_total ) * (footprint_tot_G/burst_size_G + footprint_tot_F/burst_size_F + abs(footprint_tot_G/burst_size_G - footprint_tot_F/burst_size_F))/2 + transfer_G_total  * transfer_F_total  * transfer_E_total  * ((footprint_tot_G/burst_size_G+footprint_tot_F/burst_size_F+abs(footprint_tot_G/burst_size_G-footprint_tot_F/burst_size_F))/2 + footprint_tot_E/burst_size_E + abs((footprint_tot_G/burst_size_G+footprint_tot_F/burst_size_F+abs(footprint_tot_G/burst_size_G-footprint_tot_F/burst_size_F))/2 - footprint_tot_E/burst_size_E))/2 + transfer_G_S5_under_loop12 * 1 * footprint_G_S5  / burst_G_S5_under_loop12 + transfer_G_S5_under_loop13 * 1 * footprint_G_S5  / burst_G_S5_under_loop13;
subject to con330: Lat_comm_write_S5 = transfer_G_total * footprint_tot_G/burst_size_G + transfer_F_total * footprint_tot_F/burst_size_F + transfer_E_total * footprint_tot_E/burst_size_E + transfer_G_S5_under_loop12 * 1 * footprint_G_S5  / burst_G_S5_under_loop12 + transfer_G_S5_under_loop13 * 1 * footprint_G_S5  / burst_G_S5_under_loop13;
subject to con331: Lat_comm = Lat_comm_read_S0 + Lat_comm_write_S0 + Lat_comm_read_S1 + Lat_comm_write_S1 + Lat_comm_read_S2 + Lat_comm_write_S2 + Lat_comm_read_S3 + Lat_comm_write_S3 + Lat_comm_read_S4 + Lat_comm_write_S4 + Lat_comm_read_S5 + Lat_comm_write_S5;
#subject to con332: transfer_E_total * footprint_tot_E / (AP_E_0 * AP_E_1 * 16000 / size_data_type) + transfer_E_S0_under_loop0 * footprint_E_S0 / (TC0_0 * 1) / (AP_E_0 * AP_E_1 * 16000 / size_data_type) + transfer_E_S0_under_loop1 * footprint_E_S0 / (TC0_0 * TC1_0 * 1) / (AP_E_0 * AP_E_1 * 16000 / size_data_type) <= ceil0;
#subject to con333: ceil0 * AP_E_0 * AP_E_1 <= BRAM;
#subject to con334: transfer_E_total * footprint_tot_E / (AP_E_0 * AP_E_1 * 16000 / size_data_type) + transfer_E_S1_under_loop2 * footprint_E_S1 / (TC2_0 * 1) / (AP_E_0 * AP_E_1 * 16000 / size_data_type) + transfer_E_S1_under_loop3 * footprint_E_S1 / (TC2_0 * TC3_0 * 1) / (AP_E_0 * AP_E_1 * 16000 / size_data_type) <= ceil1;
#subject to con335: transfer_A_total * footprint_tot_A / (AP_A_0 * AP_A_1 * 16000 / size_data_type) + transfer_A_S1_under_loop2 * footprint_A_S1 / (TC2_0 * 1) / (AP_A_0 * AP_A_1 * 16000 / size_data_type) + transfer_A_S1_under_loop4 * footprint_A_S1 / (TC2_0 * TC4_0 * 1) / (AP_A_0 * AP_A_1 * 16000 / size_data_type) <= ceil2;
#subject to con336: transfer_B_total * footprint_tot_B / (AP_B_0 * AP_B_1 * 16000 / size_data_type) + transfer_B_S1_under_loop3 * footprint_B_S1 / (TC3_0 * 1) / (AP_B_0 * AP_B_1 * 16000 / size_data_type) + transfer_B_S1_under_loop4 * footprint_B_S1 / (TC3_0 * TC4_0 * 1) / (AP_B_0 * AP_B_1 * 16000 / size_data_type) <= ceil3;
#subject to con337: ceil1 * AP_E_0 * AP_E_1 + ceil2 * AP_A_0 * AP_A_1 + ceil3 * AP_B_0 * AP_B_1 <= BRAM;
#subject to con338: transfer_F_total * footprint_tot_F / (AP_F_0 * AP_F_1 * 16000 / size_data_type) + transfer_F_S2_under_loop5 * footprint_F_S2 / (TC5_0 * 1) / (AP_F_0 * AP_F_1 * 16000 / size_data_type) + transfer_F_S2_under_loop6 * footprint_F_S2 / (TC5_0 * TC6_0 * 1) / (AP_F_0 * AP_F_1 * 16000 / size_data_type) <= ceil4;
#subject to con339: transfer_E_total * footprint_tot_E / (AP_E_0 * AP_E_1 * 16000 / size_data_type) <= ceil5;
#subject to con340: ceil4 * AP_F_0 * AP_F_1 + ceil5 * AP_E_0 * AP_E_1 <= BRAM;
#subject to con341: transfer_F_total * footprint_tot_F / (AP_F_0 * AP_F_1 * 16000 / size_data_type) + transfer_F_S3_under_loop7 * footprint_F_S3 / (TC7_0 * 1) / (AP_F_0 * AP_F_1 * 16000 / size_data_type) + transfer_F_S3_under_loop8 * footprint_F_S3 / (TC7_0 * TC8_0 * 1) / (AP_F_0 * AP_F_1 * 16000 / size_data_type) <= ceil6;
#subject to con342: transfer_E_total * footprint_tot_E / (AP_E_0 * AP_E_1 * 16000 / size_data_type) <= ceil7;
#subject to con343: transfer_D_total * footprint_tot_D / (AP_D_0 * AP_D_1 * 16000 / size_data_type) + transfer_D_S3_under_loop8 * footprint_D_S3 / (TC8_0 * 1) / (AP_D_0 * AP_D_1 * 16000 / size_data_type) + transfer_D_S3_under_loop9 * footprint_D_S3 / (TC8_0 * TC9_0 * 1) / (AP_D_0 * AP_D_1 * 16000 / size_data_type) <= ceil8;
#subject to con344: transfer_C_total * footprint_tot_C / (AP_C_0 * AP_C_1 * 16000 / size_data_type) + transfer_C_S3_under_loop7 * footprint_C_S3 / (TC7_0 * 1) / (AP_C_0 * AP_C_1 * 16000 / size_data_type) + transfer_C_S3_under_loop9 * footprint_C_S3 / (TC7_0 * TC9_0 * 1) / (AP_C_0 * AP_C_1 * 16000 / size_data_type) <= ceil9;
#subject to con345: ceil6 * AP_F_0 * AP_F_1 + ceil7 * AP_E_0 * AP_E_1 + ceil8 * AP_D_0 * AP_D_1 + ceil9 * AP_C_0 * AP_C_1 <= BRAM;
#subject to con346: transfer_F_total * footprint_tot_F / (AP_F_0 * AP_F_1 * 16000 / size_data_type) <= ceil10;
#subject to con347: transfer_E_total * footprint_tot_E / (AP_E_0 * AP_E_1 * 16000 / size_data_type) <= ceil11;
#subject to con348: transfer_G_total * footprint_tot_G / (AP_G_0 * AP_G_1 * 16000 / size_data_type) + transfer_G_S4_under_loop10 * footprint_G_S4 / (TC10_0 * 1) / (AP_G_0 * AP_G_1 * 16000 / size_data_type) + transfer_G_S4_under_loop11 * footprint_G_S4 / (TC10_0 * TC11_0 * 1) / (AP_G_0 * AP_G_1 * 16000 / size_data_type) <= ceil12;
#subject to con349: ceil10 * AP_F_0 * AP_F_1 + ceil11 * AP_E_0 * AP_E_1 + ceil12 * AP_G_0 * AP_G_1 <= BRAM;
#subject to con350: transfer_F_total * footprint_tot_F / (AP_F_0 * AP_F_1 * 16000 / size_data_type) + transfer_F_S5_under_loop13 * footprint_F_S5 / (TC13_0 * 1) / (AP_F_0 * AP_F_1 * 16000 / size_data_type) + transfer_F_S5_under_loop14 * footprint_F_S5 / (TC13_0 * TC14_0 * 1) / (AP_F_0 * AP_F_1 * 16000 / size_data_type) <= ceil13;
#subject to con351: transfer_E_total * footprint_tot_E / (AP_E_0 * AP_E_1 * 16000 / size_data_type) + transfer_E_S5_under_loop12 * footprint_E_S5 / (TC12_0 * 1) / (AP_E_0 * AP_E_1 * 16000 / size_data_type) + transfer_E_S5_under_loop14 * footprint_E_S5 / (TC12_0 * TC14_0 * 1) / (AP_E_0 * AP_E_1 * 16000 / size_data_type) <= ceil14;
#subject to con352: transfer_G_total * footprint_tot_G / (AP_G_0 * AP_G_1 * 16000 / size_data_type) + transfer_G_S5_under_loop12 * footprint_G_S5 / (TC12_0 * 1) / (AP_G_0 * AP_G_1 * 16000 / size_data_type) + transfer_G_S5_under_loop13 * footprint_G_S5 / (TC12_0 * TC13_0 * 1) / (AP_G_0 * AP_G_1 * 16000 / size_data_type) <= ceil15;
#subject to con353: ceil13 * AP_F_0 * AP_F_1 + ceil14 * AP_E_0 * AP_E_1 + ceil15 * AP_G_0 * AP_G_1 <= BRAM;
#subject to con354: ceil0 * AP_E_0 * AP_E_1 + ceil1 * AP_E_0 * AP_E_1 + ceil2 * AP_A_0 * AP_A_1 + ceil3 * AP_B_0 * AP_B_1 + ceil4 * AP_F_0 * AP_F_1 + ceil5 * AP_E_0 * AP_E_1 + ceil6 * AP_F_0 * AP_F_1 + ceil7 * AP_E_0 * AP_E_1 + ceil8 * AP_D_0 * AP_D_1 + ceil9 * AP_C_0 * AP_C_1 + ceil10 * AP_F_0 * AP_F_1 + ceil11 * AP_E_0 * AP_E_1 + ceil12 * AP_G_0 * AP_G_1 + ceil13 * AP_F_0 * AP_F_1 + ceil14 * AP_E_0 * AP_E_1 + ceil15 * AP_G_0 * AP_G_1 <= BRAM;
solve;
display TC0_0;
display TC0_1;
display TC0_2;
display TC1_0;
display TC1_1;
display TC1_2;
display TC2_0;
display TC2_1;
display TC2_2;
display TC3_0;
display TC3_1;
display TC3_2;
display TC4_0;
display TC4_1;
display TC4_2;
display TC5_0;
display TC5_1;
display TC5_2;
display TC6_0;
display TC6_1;
display TC6_2;
display TC7_0;
display TC7_1;
display TC7_2;
display TC8_0;
display TC8_1;
display TC8_2;
display TC9_0;
display TC9_1;
display TC9_2;
display TC10_0;
display TC10_1;
display TC10_2;
display TC11_0;
display TC11_1;
display TC11_2;
display TC12_0;
display TC12_1;
display TC12_2;
display TC13_0;
display TC13_1;
display TC13_2;
display TC14_0;
display TC14_1;
display TC14_2;
display loop0_UF;
display loop1_UF;
display loop2_UF;
display loop3_UF;
display loop5_UF;
display loop6_UF;
display loop7_UF;
display loop8_UF;
display loop10_UF;
display loop11_UF;
display loop12_UF;
display loop13_UF;
display Lat_comp_S0;
display Lat_comp_S0_no_tree;
display Lat_comp_S1;
display Lat_comp_S1_no_tree;
display Lat_comp_S2;
display Lat_comp_S2_no_tree;
display Lat_comp_S3;
display Lat_comp_S3_no_tree;
display Lat_comp_S4;
display Lat_comp_S4_no_tree;
display Lat_comp_S5;
display Lat_comp_S5_no_tree;
display II_S0;
display II_S1;
display II_S2;
display II_S3;
display II_S4;
display II_S5;
display is_loop0_pip;
display is_loop1_pip;
display is_loop2_pip;
display is_loop3_pip;
display is_loop4_pip;
display is_loop5_pip;
display is_loop6_pip;
display is_loop7_pip;
display is_loop8_pip;
display is_loop9_pip;
display is_loop10_pip;
display is_loop11_pip;
display is_loop12_pip;
display is_loop13_pip;
display is_loop14_pip;
display AP_F_0;
display cte_0;
display cte_1;
display cte_2;
display cte_3;
display AP_F_1;
display constant0;
display cte_4;
display cte_5;
display cte_6;
display cte_7;
display AP_E_0;
display cte_8;
display cte_9;
display cte_10;
display cte_11;
display AP_E_1;
display constant1;
display cte_12;
display cte_13;
display cte_14;
display cte_15;
display AP_A_0;
display cte_16;
display cte_17;
display AP_A_1;
display constant2;
display cte_18;
display cte_19;
display AP_B_0;
display cte_20;
display cte_21;
display AP_B_1;
display constant3;
display cte_22;
display cte_23;
display AP_D_0;
display cte_24;
display cte_25;
display AP_D_1;
display constant4;
display cte_26;
display cte_27;
display AP_C_0;
display cte_28;
display cte_29;
display AP_C_1;
display constant5;
display cte_30;
display cte_31;
display AP_G_0;
display cte_32;
display cte_33;
display cte_34;
display AP_G_1;
display constant6;
display cte_35;
display cte_36;
display cte_37;
display Lat_comm;
display transfer_F_total;
display transfer_E_total;
display transfer_A_total;
display transfer_B_total;
display transfer_D_total;
display transfer_C_total;
display transfer_G_total;
display transfer_F_S2_under_loop5;
display burst_F_S2_under_loop5;
display transfer_F_S2_under_loop6;
display burst_F_S2_under_loop6;
display transfer_F_S3_under_loop7;
display burst_F_S3_under_loop7;
display transfer_F_S3_under_loop8;
display burst_F_S3_under_loop8;
display transfer_F_S5_under_loop14;
display burst_F_S5_under_loop14;
display transfer_F_S5_under_loop13;
display burst_F_S5_under_loop13;
display transfer_E_S0_under_loop0;
display burst_E_S0_under_loop0;
display transfer_E_S0_under_loop1;
display burst_E_S0_under_loop1;
display transfer_E_S1_under_loop2;
display burst_E_S1_under_loop2;
display transfer_E_S1_under_loop3;
display burst_E_S1_under_loop3;
display transfer_E_S5_under_loop14;
display burst_E_S5_under_loop14;
display transfer_E_S5_under_loop12;
display burst_E_S5_under_loop12;
display transfer_A_S1_under_loop4;
display burst_A_S1_under_loop4;
display transfer_A_S1_under_loop2;
display burst_A_S1_under_loop2;
display transfer_B_S1_under_loop4;
display burst_B_S1_under_loop4;
display transfer_B_S1_under_loop3;
display burst_B_S1_under_loop3;
display transfer_D_S3_under_loop9;
display burst_D_S3_under_loop9;
display transfer_D_S3_under_loop8;
display burst_D_S3_under_loop8;
display transfer_C_S3_under_loop9;
display burst_C_S3_under_loop9;
display transfer_C_S3_under_loop7;
display burst_C_S3_under_loop7;
display transfer_G_S4_under_loop10;
display burst_G_S4_under_loop10;
display transfer_G_S4_under_loop11;
display burst_G_S4_under_loop11;
display transfer_G_S5_under_loop12;
display burst_G_S5_under_loop12;
display transfer_G_S5_under_loop13;
display burst_G_S5_under_loop13;
display burst_size_F;
display cte_burst_size_F;
display is_burst_size_F_16;
display is_burst_size_F_8;
display is_burst_size_F_4;
display is_burst_size_F_2;
display is_burst_size_F_1;
display burst_size_E;
display cte_burst_size_E;
display is_burst_size_E_16;
display is_burst_size_E_8;
display is_burst_size_E_4;
display is_burst_size_E_2;
display is_burst_size_E_1;
display burst_size_A;
display cte_burst_size_A;
display is_burst_size_A_16;
display is_burst_size_A_8;
display is_burst_size_A_4;
display is_burst_size_A_2;
display is_burst_size_A_1;
display burst_size_B;
display cte_burst_size_B;
display is_burst_size_B_16;
display is_burst_size_B_8;
display is_burst_size_B_4;
display is_burst_size_B_2;
display is_burst_size_B_1;
display burst_size_D;
display cte_burst_size_D;
display is_burst_size_D_16;
display is_burst_size_D_8;
display is_burst_size_D_4;
display is_burst_size_D_2;
display is_burst_size_D_1;
display burst_size_C;
display cte_burst_size_C;
display is_burst_size_C_16;
display is_burst_size_C_8;
display is_burst_size_C_4;
display is_burst_size_C_2;
display is_burst_size_C_1;
display burst_size_G;
display cte_burst_size_G;
display is_burst_size_G_16;
display is_burst_size_G_8;
display is_burst_size_G_4;
display is_burst_size_G_2;
display is_burst_size_G_1;
display Lat_comm_read_S0;;
display Lat_comm_write_S0;;
display Lat_comm_read_S1;;
display Lat_comm_write_S1;;
display Lat_comm_read_S2;;
display Lat_comm_write_S2;;
display Lat_comm_read_S3;;
display Lat_comm_write_S3;;
display Lat_comm_read_S4;;
display Lat_comm_write_S4;;
display Lat_comm_read_S5;;
display Lat_comm_write_S5;;
display ceil0;
display ceil1;
display ceil2;
display ceil3;
display ceil4;
display ceil5;
display ceil6;
display ceil7;
display ceil8;
display ceil9;
display ceil10;
display ceil11;
display ceil12;
display ceil13;
display ceil14;
display ceil15;
display _total_solve_time;
