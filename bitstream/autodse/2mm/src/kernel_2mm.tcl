catch {::common::set_param -quiet hls.xocc.mode csynth};
# 
# HLS run script generated by v++ compiler
# 

open_project kernel_2mm
set_top kernel_2mm
# v++ -g, -D, -I, --advanced.prop kernel.kernel_2mm.kernel_flags
add_files "__merlinkernel_kernel_2mm.c" -cflags " -D XILINX "
open_solution -flow_target vitis solution
set_part xcu55c-fsvh2892-2L-e
# v++ --hls.clock or --kernel_frequency
create_clock -period 250MHz -name default
# v++ --advanced.param compiler.hlsDataflowStrictMode
config_dataflow -strict_mode warning
# v++ --advanced.param compiler.deadlockDetection
config_rtl -deadlock_detection sim
# v++ --advanced.param compiler.axiDeadLockFree
config_interface -m_axi_conservative_mode=1
config_interface -m_axi_addr64
# v++ --hls.max_memory_ports
config_interface -m_axi_auto_max_ports=0
config_export -format xo -ipname kernel_2mm
# v++ --hls.pre_tcl or --advanced.prop solution.hls_pre_tcl
source "my_hls_pre.tcl"
csynth_design
export_design
close_project
puts "HLS completed successfully"
exit
