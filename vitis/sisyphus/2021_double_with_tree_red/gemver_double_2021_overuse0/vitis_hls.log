
****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
  **** SW Build 3247384 on Thu Jun 10 19:36:07 MDT 2021
  **** IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
    ** Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.

source /mnt/software/xilinx/Vitis_HLS/2021.1/scripts/vitis_hls/hls.tcl -notrace
INFO: Applying HLS Y2K22 patch v1.2 for IP revision
INFO: [HLS 200-10] Running '/mnt/software/xilinx/Vitis_HLS/2021.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'spouget' on host 'amx2' (Linux_x86_64 version 5.15.0-116-generic) on Thu Aug 15 11:34:21 PDT 2024
INFO: [HLS 200-10] On os Ubuntu 22.04.4 LTS
INFO: [HLS 200-10] In directory '/home/spouget/CodeGenBitNew/gemver_double_2021'
Sourcing Tcl script 'vitis.tcl'
INFO: [HLS 200-1510] Running: open_project kernel_nlp 
INFO: [HLS 200-10] Creating and opening project '/home/spouget/CodeGenBitNew/gemver_double_2021/kernel_nlp'.
INFO: [HLS 200-1510] Running: set_top kernel_nlp 
INFO: [HLS 200-1510] Running: add_files code_generated.cpp -cflags  -O3 -D XILINX  
INFO: [HLS 200-10] Adding design file 'code_generated.cpp' to the project
INFO: [HLS 200-1510] Running: add_files -tb csim.cpp 
INFO: [HLS 200-10] Adding test bench file 'csim.cpp' to the project
INFO: [HLS 200-1510] Running: open_solution -flow_target vitis solution 
INFO: [HLS 200-10] Creating and opening solution '/home/spouget/CodeGenBitNew/gemver_double_2021/kernel_nlp/solution'.
INFO: [HLS 200-1505] Using flow_target 'vitis'
Resolution: For help on HLS 200-1505 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-1505.html
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_latency=64
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_rtl -register_reset_num=3
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1510] Running: create_clock -period 250MHz -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 4ns.
INFO: [HLS 200-1510] Running: config_dataflow -strict_mode warning 
INFO: [HLS 200-1510] Running: config_export -disable_deadlock_detection=true 
INFO: [HLS 200-1510] Running: config_rtl -m_axi_conservative_mode=1 
WARNING: [HLS 200-483] The 'config_rtl -m_axi_conservative_mode' command is deprecated and will be removed in a future release. Use 'config_interface -m_axi_conservative_mode' as its replacement.
INFO: [HLS 200-1510] Running: config_interface -m_axi_addr64 
INFO: [HLS 200-1510] Running: config_interface -m_axi_auto_max_ports=0 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -ipname kernel_nlp 
INFO: [HLS 200-1510] Running: config_compile -unsafe_math_optimizations 
INFO: [XFORM 203-1172] Optimizing floating point zeros and discarding its signedness.
INFO: [XFORM 203-1176] Optimizing floating point comparison without checking NaN.
INFO: [XFORM 203-1173] Reordering floating point operations aggressively.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 250.376 MB.
INFO: [HLS 200-10] Analyzing design file 'code_generated.cpp' ... 
WARNING: [HLS 207-5535] Unsupported interface port data type in '#pragma HLS interface m_axi': code_generated.cpp:379:34
WARNING: [HLS 207-5535] Unsupported interface port data type in '#pragma HLS interface m_axi': code_generated.cpp:380:34
WARNING: [HLS 207-5528] Ignore interface attribute or pragma which is not used in top function: code_generated.cpp:401:9
WARNING: [HLS 207-5301] unused parameter 'print': /mnt/software/xilinx/Vitis_HLS/2021.1/common/technology/autopilot/ap_int_base.h:792:16
WARNING: [HLS 207-5301] unused parameter 'alpha': code_generated.cpp:296:103
WARNING: [HLS 207-5301] unused parameter 'beta': code_generated.cpp:296:117
WARNING: [HLS 207-5301] unused parameter 'vA': code_generated.cpp:296:132
WARNING: [HLS 207-5301] unused parameter 'vu1': code_generated.cpp:296:152
WARNING: [HLS 207-5301] unused parameter 've1': code_generated.cpp:296:170
WARNING: [HLS 207-5301] unused parameter 'vu2': code_generated.cpp:296:188
WARNING: [HLS 207-5301] unused parameter 've2': code_generated.cpp:296:206
WARNING: [HLS 207-5301] unused parameter 'vw': code_generated.cpp:296:224
WARNING: [HLS 207-5301] unused parameter 'vx': code_generated.cpp:296:241
WARNING: [HLS 207-5301] unused parameter 'vy': code_generated.cpp:296:258
WARNING: [HLS 207-5301] unused parameter 'vz': code_generated.cpp:296:275
WARNING: [HLS 207-5301] unused parameter 'alpha': code_generated.cpp:318:69
WARNING: [HLS 207-5301] unused parameter 'vA': code_generated.cpp:318:98
WARNING: [HLS 207-5301] unused parameter 'vu1': code_generated.cpp:318:118
WARNING: [HLS 207-5301] unused parameter 've1': code_generated.cpp:318:136
WARNING: [HLS 207-5301] unused parameter 'vu2': code_generated.cpp:318:154
WARNING: [HLS 207-5301] unused parameter 've2': code_generated.cpp:318:172
WARNING: [HLS 207-5301] unused parameter 'vw': code_generated.cpp:318:190
WARNING: [HLS 207-5301] unused parameter 'vx': code_generated.cpp:318:207
WARNING: [HLS 207-5301] unused parameter 'vy': code_generated.cpp:318:224
WARNING: [HLS 207-5301] unused parameter 'vz': code_generated.cpp:318:241
WARNING: [HLS 207-5301] unused parameter 'alpha': code_generated.cpp:340:49
WARNING: [HLS 207-5301] unused parameter 'beta': code_generated.cpp:340:63
WARNING: [HLS 207-5301] unused parameter 'vA': code_generated.cpp:340:78
WARNING: [HLS 207-5301] unused parameter 'vu1': code_generated.cpp:340:98
WARNING: [HLS 207-5301] unused parameter 've1': code_generated.cpp:340:116
WARNING: [HLS 207-5301] unused parameter 'vu2': code_generated.cpp:340:134
WARNING: [HLS 207-5301] unused parameter 've2': code_generated.cpp:340:152
WARNING: [HLS 207-5301] unused parameter 'vw': code_generated.cpp:340:170
WARNING: [HLS 207-5301] unused parameter 'vx': code_generated.cpp:340:187
WARNING: [HLS 207-5301] unused parameter 'vy': code_generated.cpp:340:204
WARNING: [HLS 207-5301] unused parameter 'vz': code_generated.cpp:340:221
WARNING: [HLS 207-5301] unused parameter 'beta': code_generated.cpp:355:83
WARNING: [HLS 207-5301] unused parameter 'vA': code_generated.cpp:355:98
WARNING: [HLS 207-5301] unused parameter 'vu1': code_generated.cpp:355:118
WARNING: [HLS 207-5301] unused parameter 've1': code_generated.cpp:355:136
WARNING: [HLS 207-5301] unused parameter 'vu2': code_generated.cpp:355:154
WARNING: [HLS 207-5301] unused parameter 've2': code_generated.cpp:355:172
WARNING: [HLS 207-5301] unused parameter 'vw': code_generated.cpp:355:190
WARNING: [HLS 207-5301] unused parameter 'vx': code_generated.cpp:355:207
WARNING: [HLS 207-5301] unused parameter 'vy': code_generated.cpp:355:224
WARNING: [HLS 207-5301] unused parameter 'vz': code_generated.cpp:355:241
WARNING: [HLS 207-5535] Unsupported interface port data type in '#pragma HLS interface m_axi': code_generated.cpp:379:34
WARNING: [HLS 207-5535] Unsupported interface port data type in '#pragma HLS interface m_axi': code_generated.cpp:380:34
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 5.22 seconds. CPU system time: 0.88 seconds. Elapsed time: 5.72 seconds; current allocated memory: 253.169 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-279] Initial Interval estimation mode is set into default.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::pragma() const' into 'hls::vector<double, 16ul>::operator[](unsigned long)' (/mnt/software/xilinx/Vitis_HLS/2021.1/common/technology/autopilot/hls_vector.h:142:5)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:17:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:18:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:19:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:20:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:21:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:22:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:24:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:25:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:26:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:27:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:40:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:41:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:42:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:43:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:44:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:45:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:46:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:47:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:48:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:49:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:50:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:51:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:52:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:53:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:54:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e1(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:55:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:64:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:65:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:66:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:67:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:68:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:69:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:70:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:71:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:72:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:73:29)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:74:30)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:75:30)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:76:30)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:77:30)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:78:30)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:79:30)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:88:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:89:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:90:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:91:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:92:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:93:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:94:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:95:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:96:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:97:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:98:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:99:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:100:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:101:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:102:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_u2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:103:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:111:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:112:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:113:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:114:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:115:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:116:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:117:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:118:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:119:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:120:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:121:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:122:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:123:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:124:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:125:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_e2(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:126:23)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:134:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:135:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:136:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:137:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:138:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:139:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:140:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:141:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:142:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:143:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:144:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:145:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:146:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:147:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:148:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_y(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:149:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:157:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:158:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:159:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:160:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:161:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:162:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:163:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:164:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:165:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:166:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:167:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:168:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:169:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:170:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:171:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:172:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:180:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:181:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:182:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:183:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:184:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:185:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:186:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:187:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:188:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:189:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:190:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:191:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:192:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:193:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:194:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_z(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:195:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:203:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:204:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:205:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:206:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:207:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:208:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:209:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:210:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:211:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:212:21)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:213:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:214:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:215:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:216:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:217:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'load_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:218:22)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:227:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:228:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:229:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:230:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:231:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:232:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:233:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:234:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:235:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:236:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:237:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:238:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:239:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:240:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:241:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_A(double (*) [400], hls::vector<double, 16ul>*)' (code_generated.cpp:242:13)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:252:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:253:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:254:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:255:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:256:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:257:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:258:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:259:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:260:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:261:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:262:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:263:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:264:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:265:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:266:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_x(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:267:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:276:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:277:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:278:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:279:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:280:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:281:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:282:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:283:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:284:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:285:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:286:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:287:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:288:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:289:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:290:9)
INFO: [HLS 214-131] Inlining function 'hls::vector<double, 16ul>::operator[](unsigned long)' into 'store_w(double*, hls::vector<double, 16ul>*)' (code_generated.cpp:291:9)
INFO: [HLS 214-131] Inlining function 'load_u1(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:424:2)
INFO: [HLS 214-131] Inlining function 'load_e1(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:425:5)
INFO: [HLS 214-131] Inlining function 'load_A(double (*) [400], hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:426:5)
INFO: [HLS 214-131] Inlining function 'load_u2(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:427:5)
INFO: [HLS 214-131] Inlining function 'load_e2(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:428:5)
INFO: [HLS 214-131] Inlining function 'load_y(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:429:5)
INFO: [HLS 214-131] Inlining function 'load_x(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:430:5)
INFO: [HLS 214-131] Inlining function 'load_z(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:431:5)
INFO: [HLS 214-131] Inlining function 'load_w(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:432:5)
INFO: [HLS 214-131] Inlining function 'task0(double*, double*, double (*) [400], double*, double*, double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:433:5)
INFO: [HLS 214-131] Inlining function 'task1(double*, double (*) [400], double*, double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:434:5)
INFO: [HLS 214-131] Inlining function 'task2(double*, double*, double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:435:5)
INFO: [HLS 214-131] Inlining function 'task3(double*, double (*) [400], double*, double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:436:5)
INFO: [HLS 214-131] Inlining function 'store_A(double (*) [400], hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:437:5)
INFO: [HLS 214-131] Inlining function 'store_x(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:438:5)
INFO: [HLS 214-131] Inlining function 'store_w(double*, hls::vector<double, 16ul>*)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:439:5)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_363_4' (code_generated.cpp:363:20) in function 'kernel_nlp' completely with a factor of 1 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_365_5' (code_generated.cpp:365:20) in function 'kernel_nlp' completely with a factor of 200 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_346_3' (code_generated.cpp:346:20) in function 'kernel_nlp' completely with a factor of 200 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_326_4' (code_generated.cpp:326:20) in function 'kernel_nlp' completely with a factor of 100 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_328_5' (code_generated.cpp:328:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_304_4' (code_generated.cpp:304:20) in function 'kernel_nlp' completely with a factor of 5 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_306_5' (code_generated.cpp:306:20) in function 'kernel_nlp' completely with a factor of 50 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_306_5' (code_generated.cpp:306:20) in function 'kernel_nlp' completely with a factor of 50 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_306_5' (code_generated.cpp:306:20) in function 'kernel_nlp' completely with a factor of 50 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_306_5' (code_generated.cpp:306:20) in function 'kernel_nlp' completely with a factor of 50 (code_generated.cpp:377:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_306_5' (code_generated.cpp:306:20) in function 'kernel_nlp' completely with a factor of 50 (code_generated.cpp:377:0)
INFO: [HLS 214-178] Inlining function 'std::__array_traits<double, 16ul>::_S_ref(double const (&) [16], unsigned long)' into 'std::array<double, 16ul>::operator[](unsigned long)' (/mnt/software/xilinx/Vitis_HLS/2021.1/tps/lnx64/gcc-6.2.0/lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/array:182:0)
INFO: [HLS 214-178] Inlining function 'std::array<double, 16ul>::operator[](unsigned long)' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 'vA' with non-compact mode in 1024-bits
INFO: [HLS 214-241] Aggregating maxi variable 'vu1' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 've1' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 'vu2' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 've2' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 'vw' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 'vx' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 'vy' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-241] Aggregating maxi variable 'vz' with non-compact mode in 1024-bits (code_generated.cpp:377:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_14_1'(code_generated.cpp:14:19) has been inferred on port 'kernel_u1'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:14:19)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_37_1'(code_generated.cpp:37:19) has been inferred on port 'kernel_e1'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:37:19)
INFO: [HLS 214-115] Multiple burst reads of length 10000 and bit width 1024 in loop 'VITIS_LOOP_60_1'(code_generated.cpp:60:19) has been inferred on port 'kernel_A'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:60:19)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_85_1'(code_generated.cpp:85:19) has been inferred on port 'kernel_u2'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:85:19)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_108_1'(code_generated.cpp:108:20) has been inferred on port 'kernel_e2'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:108:20)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_131_1'(code_generated.cpp:131:20) has been inferred on port 'kernel_y'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:131:20)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_154_1'(code_generated.cpp:154:20) has been inferred on port 'kernel_x'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:154:20)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_177_1'(code_generated.cpp:177:20) has been inferred on port 'kernel_z'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:177:20)
INFO: [HLS 214-115] Multiple burst reads of length 25 and bit width 1024 in loop 'VITIS_LOOP_200_1'(code_generated.cpp:200:20) has been inferred on port 'kernel_w'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:200:20)
INFO: [HLS 214-115] Multiple burst writes of length 10000 and bit width 1024 in loop 'VITIS_LOOP_223_1'(code_generated.cpp:223:20) has been inferred on port 'kernel_A'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:223:20)
INFO: [HLS 214-115] Multiple burst writes of length 25 and bit width 1024 in loop 'VITIS_LOOP_249_1'(code_generated.cpp:249:20) has been inferred on port 'kernel_x'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:249:20)
INFO: [HLS 214-115] Multiple burst writes of length 25 and bit width 1024 in loop 'VITIS_LOOP_273_1'(code_generated.cpp:273:20) has been inferred on port 'kernel_w'. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (code_generated.cpp:273:20)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.a16f64' into '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:16:20)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.s_class.hls::vectors.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:292:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.s_class.hls::vectors' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:292:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.s_class.hls::vectors.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:268:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.s_class.hls::vectors' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:268:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.s_class.hls::vectors.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:243:33)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1024.s_class.hls::vectors' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:243:33)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:202:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:179:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:156:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:133:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:110:20)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:87:20)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:63:19)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.unpack.none.s_struct.std::arrays.i1024.1' into 'kernel_nlp(double, double, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*, hls::vector<double, 16ul>*)' (code_generated.cpp:39:20)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 43.54 seconds. CPU system time: 1.25 seconds. Elapsed time: 49.64 seconds; current allocated memory: 341.038 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 341.041 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 2.42 seconds. CPU system time: 0.01 seconds. Elapsed time: 2.44 seconds; current allocated memory: 359.114 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.33 seconds. CPU system time: 0 seconds. Elapsed time: 1.38 seconds; current allocated memory: 353.597 MB.
WARNING: [HLS 200-914] Completely partitioning array 'y' (code_generated.cpp:403) accessed through non-constant indices on dimension 1 (code_generated.cpp:134:9), which may result in long runtime and suboptimal QoR due to large multiplexers. Please consider wrapping the array access into a function or using a register file core instead.
Resolution: For help on HLS 200-914 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-914.html
INFO: [XFORM 203-101] Partitioning array 'y' (code_generated.cpp:403) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'u1' (code_generated.cpp:404) in dimension 1 with a cyclic factor 40.
INFO: [XFORM 203-101] Partitioning array 'w' (code_generated.cpp:405) in dimension 1 with a cyclic factor 8.
INFO: [XFORM 203-101] Partitioning array 'e1' (code_generated.cpp:406) in dimension 1 with a cyclic factor 200.
INFO: [XFORM 203-101] Partitioning array 'A' (code_generated.cpp:407) in dimension 1 with a cyclic factor 5.
INFO: [XFORM 203-101] Partitioning array 'z' (code_generated.cpp:408) in dimension 1 with a cyclic factor 200.
INFO: [XFORM 203-101] Partitioning array 'u2' (code_generated.cpp:409) in dimension 1 with a cyclic factor 40.
WARNING: [HLS 200-914] Completely partitioning array 'x' (code_generated.cpp:410) accessed through non-constant indices on dimension 1 (code_generated.cpp:267:21), which may result in long runtime and suboptimal QoR due to large multiplexers. Please consider wrapping the array access into a function or using a register file core instead.
Resolution: For help on HLS 200-914 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-914.html
INFO: [XFORM 203-101] Partitioning array 'x' (code_generated.cpp:410) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2' (code_generated.cpp:411) in dimension 1 with a cyclic factor 200.
INFO: [XFORM 203-101] Partitioning array 'A' (code_generated.cpp:407) in dimension 2 with a cyclic factor 200.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.0' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.1' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.2' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.3' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.4' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.5' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.6' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.7' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.8' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.9' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.10' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.11' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.12' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.13' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.14' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.15' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.16' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.17' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.18' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.19' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.20' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.21' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.22' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.23' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.24' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.25' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.26' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.27' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.28' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.29' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.30' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.31' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.32' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.33' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.34' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.35' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.36' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.37' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.38' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.39' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.40' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.41' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.42' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.43' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.44' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.45' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.46' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.47' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.48' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.49' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.50' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.51' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.52' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.53' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.54' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.55' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.56' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.57' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.58' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.59' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.60' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.61' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.62' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.63' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.64' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.65' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.66' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.67' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.68' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.69' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.70' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.71' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.72' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.73' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.74' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.75' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.76' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.77' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.78' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.79' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.80' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.81' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.82' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.83' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.84' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.85' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.86' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.87' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.88' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.89' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.90' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.91' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.92' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.93' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.94' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.95' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.96' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.97' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.98' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.99' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.100' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.101' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.102' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.103' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.104' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.105' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.106' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.107' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.108' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.109' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.110' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.111' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.112' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.113' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.114' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.115' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.116' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.117' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.118' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.119' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.120' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.121' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.122' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.123' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.124' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.125' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.126' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.127' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.128' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.129' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.130' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.131' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.132' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.133' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.134' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.135' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.136' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.137' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.138' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.139' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.140' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.141' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.142' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.143' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.144' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.145' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.146' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.147' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.148' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.149' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.150' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.151' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.152' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.153' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.154' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.155' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.156' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.157' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.158' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.159' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.160' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.161' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.162' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.163' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.164' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.165' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.166' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.167' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.168' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.169' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.170' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.171' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.172' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.173' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.174' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.175' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.176' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.177' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.178' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.179' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.180' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.181' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.182' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.183' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.184' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.185' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.186' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.187' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.188' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.189' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.190' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.191' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.192' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.193' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.194' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.195' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.196' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.197' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.198' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e1.199' (code_generated.cpp:406) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.0' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.1' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.2' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.3' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.4' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.5' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.6' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.7' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.8' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.9' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.10' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.11' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.12' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.13' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.14' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.15' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.16' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.17' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.18' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.19' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.20' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.21' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.22' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.23' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.24' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.25' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.26' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.27' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.28' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.29' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.30' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.31' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.32' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.33' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.34' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.35' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.36' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.37' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.38' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.39' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.40' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.41' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.42' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.43' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.44' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.45' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.46' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.47' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.48' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.49' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.50' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.51' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.52' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.53' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.54' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.55' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.56' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.57' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.58' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.59' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.60' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.61' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.62' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.63' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.64' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.65' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.66' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.67' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.68' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.69' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.70' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.71' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.72' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.73' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.74' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.75' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.76' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.77' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.78' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.79' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.80' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.81' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.82' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.83' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.84' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.85' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.86' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.87' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.88' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.89' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.90' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.91' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.92' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.93' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.94' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.95' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.96' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.97' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.98' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.99' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.100' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.101' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.102' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.103' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.104' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.105' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.106' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.107' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.108' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.109' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.110' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.111' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.112' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.113' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.114' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.115' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.116' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.117' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.118' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.119' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.120' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.121' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.122' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.123' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.124' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.125' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.126' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.127' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.128' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.129' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.130' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.131' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.132' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.133' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.134' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.135' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.136' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.137' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.138' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.139' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.140' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.141' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.142' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.143' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.144' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.145' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.146' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.147' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.148' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.149' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.150' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.151' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.152' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.153' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.154' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.155' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.156' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.157' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.158' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.159' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.160' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.161' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.162' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.163' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.164' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.165' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.166' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.167' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.168' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.169' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.170' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.171' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.172' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.173' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.174' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.175' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.176' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.177' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.178' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.179' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.180' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.181' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.182' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.183' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.184' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.185' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.186' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.187' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.188' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.189' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.190' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.191' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.192' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.193' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.194' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.195' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.196' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.197' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.198' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'z.199' (code_generated.cpp:408) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.0' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.1' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.2' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.3' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.4' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.5' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.6' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.7' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.8' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.9' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.10' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.11' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.12' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.13' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.14' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.15' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.16' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.17' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.18' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.19' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.20' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.21' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.22' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.23' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.24' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.25' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.26' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.27' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.28' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.29' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.30' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.31' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.32' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.33' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.34' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.35' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.36' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.37' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.38' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.39' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.40' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.41' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.42' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.43' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.44' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.45' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.46' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.47' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.48' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.49' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.50' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.51' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.52' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.53' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.54' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.55' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.56' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.57' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.58' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.59' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.60' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.61' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.62' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.63' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.64' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.65' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.66' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.67' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.68' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.69' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.70' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.71' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.72' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.73' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.74' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.75' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.76' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.77' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.78' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.79' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.80' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.81' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.82' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.83' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.84' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.85' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.86' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.87' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.88' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.89' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.90' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.91' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.92' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.93' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.94' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.95' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.96' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.97' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.98' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.99' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.100' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.101' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.102' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.103' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.104' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.105' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.106' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.107' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.108' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.109' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.110' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.111' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.112' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.113' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.114' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.115' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.116' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.117' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.118' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.119' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.120' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.121' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.122' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.123' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.124' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.125' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.126' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.127' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.128' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.129' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.130' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.131' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.132' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.133' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.134' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.135' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.136' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.137' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.138' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.139' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.140' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.141' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.142' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.143' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.144' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.145' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.146' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.147' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.148' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.149' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.150' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.151' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.152' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.153' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.154' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.155' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.156' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.157' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.158' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.159' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.160' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.161' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.162' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.163' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.164' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.165' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.166' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.167' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.168' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.169' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.170' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.171' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.172' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.173' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.174' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.175' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.176' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.177' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.178' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.179' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.180' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.181' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.182' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.183' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.184' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.185' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.186' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.187' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.188' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.189' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.190' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.191' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.192' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.193' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.194' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.195' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.196' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.197' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.198' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'e2.199' (code_generated.cpp:411) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'e1.0' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.1' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.2' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.3' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.4' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.5' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.6' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.7' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.8' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.9' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.10' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.11' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.12' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.13' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.14' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.15' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.16' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.17' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.18' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.19' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.20' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.21' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.22' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.23' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.24' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.25' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.26' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.27' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.28' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.29' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.30' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.31' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.32' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.33' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.34' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.35' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.36' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.37' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.38' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.39' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.40' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.41' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.42' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.43' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.44' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.45' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.46' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.47' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.48' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.49' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.50' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.51' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.52' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.53' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.54' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.55' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.56' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.57' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.58' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.59' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.60' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.61' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.62' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.63' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.64' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.65' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.66' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.67' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.68' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.69' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.70' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.71' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.72' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.73' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.74' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.75' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.76' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.77' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.78' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.79' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.80' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.81' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.82' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.83' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.84' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.85' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.86' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.87' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.88' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.89' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.90' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.91' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.92' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.93' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.94' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.95' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.96' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.97' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.98' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.99' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.100' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.101' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.102' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.103' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.104' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.105' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.106' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.107' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.108' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.109' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.110' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.111' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.112' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.113' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.114' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.115' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.116' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.117' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.118' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.119' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.120' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.121' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.122' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.123' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.124' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.125' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.126' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.127' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.128' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.129' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.130' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.131' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.132' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.133' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.134' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.135' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.136' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.137' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.138' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.139' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.140' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.141' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.142' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.143' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.144' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.145' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.146' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.147' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.148' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.149' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.150' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.151' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.152' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.153' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.154' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.155' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.156' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.157' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.158' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.159' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.160' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.161' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.162' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.163' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.164' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.165' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.166' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.167' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.168' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.169' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.170' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.171' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.172' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.173' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.174' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.175' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.176' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.177' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.178' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.179' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.180' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.181' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.182' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.183' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.184' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.185' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.186' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.187' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.188' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.189' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.190' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.191' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.192' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.193' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.194' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.195' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.196' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.197' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.198' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e1.199' (code_generated.cpp:406) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.0' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.1' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.2' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.3' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.4' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.5' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.6' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.7' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.8' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.9' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.10' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.11' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.12' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.13' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.14' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.15' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.16' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.17' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.18' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.19' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.20' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.21' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.22' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.23' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.24' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.25' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.26' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.27' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.28' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.29' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.30' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.31' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.32' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.33' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.34' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.35' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.36' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.37' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.38' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.39' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.40' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.41' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.42' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.43' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.44' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.45' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.46' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.47' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.48' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.49' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.50' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.51' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.52' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.53' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.54' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.55' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.56' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.57' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.58' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.59' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.60' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.61' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.62' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.63' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.64' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.65' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.66' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.67' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.68' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.69' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.70' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.71' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.72' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.73' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.74' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.75' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.76' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.77' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.78' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.79' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.80' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.81' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.82' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.83' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.84' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.85' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.86' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.87' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.88' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.89' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.90' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.91' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.92' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.93' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.94' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.95' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.96' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.97' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.98' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.99' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.100' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.101' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.102' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.103' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.104' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.105' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.106' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.107' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.108' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.109' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.110' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.111' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.112' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.113' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.114' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.115' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.116' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.117' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.118' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.119' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.120' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.121' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.122' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.123' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.124' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.125' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.126' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.127' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.128' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.129' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.130' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.131' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.132' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.133' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.134' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.135' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.136' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.137' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.138' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.139' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.140' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.141' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.142' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.143' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.144' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.145' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.146' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.147' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.148' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.149' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.150' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.151' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.152' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.153' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.154' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.155' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.156' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.157' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.158' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.159' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.160' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.161' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.162' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.163' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.164' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.165' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.166' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.167' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.168' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.169' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.170' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.171' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.172' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.173' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.174' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.175' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.176' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.177' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.178' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.179' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.180' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.181' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.182' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.183' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.184' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.185' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.186' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.187' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.188' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.189' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.190' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.191' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.192' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.193' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.194' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.195' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.196' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.197' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.198' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'z.199' (code_generated.cpp:408) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.0' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.1' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.2' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.3' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.4' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.5' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.6' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.7' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.8' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.9' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.10' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.11' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.12' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.13' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.14' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.15' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.16' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.17' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.18' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.19' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.20' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.21' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.22' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.23' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.24' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.25' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.26' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.27' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.28' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.29' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.30' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.31' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.32' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.33' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.34' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.35' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.36' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.37' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.38' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.39' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.40' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.41' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.42' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.43' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.44' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.45' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.46' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.47' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.48' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.49' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.50' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.51' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.52' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.53' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.54' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.55' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.56' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.57' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.58' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.59' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.60' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.61' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.62' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.63' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.64' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.65' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.66' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.67' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.68' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.69' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.70' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.71' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.72' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.73' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.74' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.75' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.76' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.77' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.78' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.79' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.80' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.81' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.82' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.83' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.84' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.85' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.86' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.87' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.88' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.89' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.90' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.91' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.92' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.93' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.94' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.95' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.96' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.97' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.98' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.99' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.100' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.101' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.102' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.103' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.104' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.105' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.106' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.107' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.108' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.109' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.110' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.111' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.112' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.113' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.114' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.115' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.116' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.117' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.118' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.119' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.120' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.121' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.122' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.123' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.124' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.125' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.126' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.127' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.128' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.129' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.130' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.131' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.132' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.133' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.134' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.135' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.136' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.137' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.138' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.139' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.140' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.141' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.142' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.143' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.144' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.145' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.146' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.147' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.148' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.149' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.150' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.151' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.152' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.153' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.154' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.155' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.156' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.157' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.158' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.159' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.160' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.161' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.162' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.163' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.164' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.165' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.166' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.167' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.168' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.169' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.170' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.171' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.172' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.173' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.174' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.175' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.176' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.177' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.178' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.179' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.180' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.181' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.182' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.183' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.184' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.185' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.186' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.187' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.188' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.189' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.190' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.191' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.192' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.193' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.194' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.195' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.196' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.197' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.198' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'e2.199' (code_generated.cpp:411) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (code_generated.cpp:326:29) in function 'kernel_nlp'... converting 1501 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'kernel_nlp' (code_generated.cpp:14:27)...899 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 767.3 seconds. CPU system time: 2.77 seconds. Elapsed time: 853.88 seconds; current allocated memory: 511.332 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_1' (code_generated.cpp:61:35) in function 'kernel_nlp'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_301_2' (code_generated.cpp:302:40) in function 'kernel_nlp' the outer loop is not a perfect loop because there is nontrivial logic before entering the inner loop.
Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-960.html
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_322_1' (code_generated.cpp:323:36) in function 'kernel_nlp' the outer loop is not a perfect loop because there is nontrivial logic before entering the inner loop.
Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-960.html
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_360_2' (code_generated.cpp:361:40) in function 'kernel_nlp'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_223_1' (code_generated.cpp:224:36) in function 'kernel_nlp'.
INFO: [HLS 200-472] Inferring partial write operation for 'w[0]' (code_generated.cpp:369:30)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[0]' (code_generated.cpp:88:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[1]' (code_generated.cpp:89:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[2]' (code_generated.cpp:90:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[3]' (code_generated.cpp:91:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[4]' (code_generated.cpp:92:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[5]' (code_generated.cpp:93:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[6]' (code_generated.cpp:94:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[7]' (code_generated.cpp:95:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[8]' (code_generated.cpp:96:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[9]' (code_generated.cpp:97:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[10]' (code_generated.cpp:98:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[11]' (code_generated.cpp:99:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[12]' (code_generated.cpp:100:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[13]' (code_generated.cpp:101:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[14]' (code_generated.cpp:102:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u2[15]' (code_generated.cpp:103:21)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][15]' (code_generated.cpp:79:28)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][14]' (code_generated.cpp:78:28)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][13]' (code_generated.cpp:77:28)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][12]' (code_generated.cpp:76:28)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][11]' (code_generated.cpp:75:28)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][10]' (code_generated.cpp:74:28)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][9]' (code_generated.cpp:73:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][8]' (code_generated.cpp:72:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][7]' (code_generated.cpp:71:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][6]' (code_generated.cpp:70:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][5]' (code_generated.cpp:69:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][4]' (code_generated.cpp:68:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][3]' (code_generated.cpp:67:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][2]' (code_generated.cpp:66:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][1]' (code_generated.cpp:65:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[0][0]' (code_generated.cpp:64:27)
INFO: [HLS 200-472] Inferring partial write operation for 'A[4][49]' (code_generated.cpp:310:33)
INFO: [HLS 200-472] Inferring partial write operation for 'w[0]' (code_generated.cpp:203:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[1]' (code_generated.cpp:204:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[2]' (code_generated.cpp:205:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[3]' (code_generated.cpp:206:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[4]' (code_generated.cpp:207:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[5]' (code_generated.cpp:208:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[6]' (code_generated.cpp:209:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[7]' (code_generated.cpp:210:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[0]' (code_generated.cpp:211:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[1]' (code_generated.cpp:212:19)
INFO: [HLS 200-472] Inferring partial write operation for 'w[2]' (code_generated.cpp:213:20)
INFO: [HLS 200-472] Inferring partial write operation for 'w[3]' (code_generated.cpp:214:20)
INFO: [HLS 200-472] Inferring partial write operation for 'w[4]' (code_generated.cpp:215:20)
INFO: [HLS 200-472] Inferring partial write operation for 'w[5]' (code_generated.cpp:216:20)
INFO: [HLS 200-472] Inferring partial write operation for 'w[6]' (code_generated.cpp:217:20)
INFO: [HLS 200-472] Inferring partial write operation for 'w[7]' (code_generated.cpp:218:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[0]' (code_generated.cpp:17:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[1]' (code_generated.cpp:18:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[2]' (code_generated.cpp:19:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[3]' (code_generated.cpp:20:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[4]' (code_generated.cpp:21:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[5]' (code_generated.cpp:22:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[6]' (code_generated.cpp:23:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[7]' (code_generated.cpp:24:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[8]' (code_generated.cpp:25:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[9]' (code_generated.cpp:26:20)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[10]' (code_generated.cpp:27:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[11]' (code_generated.cpp:28:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[12]' (code_generated.cpp:29:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[13]' (code_generated.cpp:30:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[14]' (code_generated.cpp:31:21)
INFO: [HLS 200-472] Inferring partial write operation for 'u1[15]' (code_generated.cpp:32:21)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1022.52 seconds. CPU system time: 0.7 seconds. Elapsed time: 1024.07 seconds; current allocated memory: 1.240 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'kernel_nlp' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_14_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_14_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1484.94 seconds. CPU system time: 1.4 seconds. Elapsed time: 1488.36 seconds; current allocated memory: 1.744 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.33 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.55 seconds; current allocated memory: 1.745 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_37_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln55) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_37_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_37_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 53.64 seconds. CPU system time: 0.2 seconds. Elapsed time: 54.12 seconds; current allocated memory: 1.756 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3.7 seconds. CPU system time: 0.05 seconds. Elapsed time: 3.96 seconds; current allocated memory: 1.805 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln79) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 14, loop 'VITIS_LOOP_60_1_VITIS_LOOP_61_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 29.81 seconds. CPU system time: 0.17 seconds. Elapsed time: 30.58 seconds; current allocated memory: 1.827 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 5.33 seconds. CPU system time: 0.07 seconds. Elapsed time: 5.9 seconds; current allocated memory: 1.854 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_85_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln88) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_85_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_85_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 7.97 seconds. CPU system time: 0.14 seconds. Elapsed time: 8.56 seconds; current allocated memory: 1.855 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.33 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.45 seconds; current allocated memory: 1.857 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_108_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln126) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_108_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_108_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 52.86 seconds. CPU system time: 0.18 seconds. Elapsed time: 53.27 seconds; current allocated memory: 1.868 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3.71 seconds. CPU system time: 0.06 seconds. Elapsed time: 3.9 seconds; current allocated memory: 1.917 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_131_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_131_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_131_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3.77 seconds. CPU system time: 0.09 seconds. Elapsed time: 4.28 seconds; current allocated memory: 1.923 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.57 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.69 seconds; current allocated memory: 1.952 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_154_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_154_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_154_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.44 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.55 seconds; current allocated memory: 1.958 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.65 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.71 seconds; current allocated memory: 1.987 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_177_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln195) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_177_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_177_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 52.91 seconds. CPU system time: 0.15 seconds. Elapsed time: 53.31 seconds; current allocated memory: 1.998 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3.65 seconds. CPU system time: 0.07 seconds. Elapsed time: 4.02 seconds; current allocated memory: 2.047 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_200_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_200_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_200_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2.94 seconds. CPU system time: 0.09 seconds. Elapsed time: 5.18 seconds; current allocated memory: 2.048 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.1 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 2.048 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_302_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul704) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_302_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 31, loop 'VITIS_LOOP_302_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 23.45 seconds. CPU system time: 0.17 seconds. Elapsed time: 24.28 seconds; current allocated memory: 2.138 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 14.41 seconds. CPU system time: 0.05 seconds. Elapsed time: 14.78 seconds; current allocated memory: 2.183 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_324_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_324_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 4, Depth = 40, loop 'VITIS_LOOP_324_3'
WARNING: [HLS 200-871] Estimated clock period (3.283ns) exceeds the target (target clock period: 4ns, clock uncertainty: 1.08ns, effective delay budget: 2.92ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-871.html
WARNING: [HLS 200-1016] The critical path in module 'kernel_nlp_Pipeline_VITIS_LOOP_324_3' consists of the following:	'dadd' operation ('add17_i_30_4', code_generated.cpp:332) [5074]  (2.9 ns)
	'store' operation ('x_30_write_ln332', code_generated.cpp:332) of variable 'add17_i_30_4', code_generated.cpp:332 on local variable 'x[30]' [6870]  (0.387 ns)

Resolution: For help on HLS 200-1016 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-1016.html
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 40.17 seconds. CPU system time: 0.17 seconds. Elapsed time: 43.82 seconds; current allocated memory: 2.206 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 11.12 seconds. CPU system time: 0.04 seconds. Elapsed time: 12.63 seconds; current allocated memory: 2.240 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_344_2'.
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' (loop 'VITIS_LOOP_344_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between 'store' operation ('x_200_write_ln349', code_generated.cpp:349) of variable 'x[200]', code_generated.cpp:349 on local variable 'x[200]' and 'load' operation ('x_200_load_1', code_generated.cpp:349) on local variable 'x[200]'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' (loop 'VITIS_LOOP_344_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 0) between 'store' operation ('x_200_write_ln349', code_generated.cpp:349) of variable 'x[200]', code_generated.cpp:349 on local variable 'x[200]' and 'load' operation ('x_200_load_1', code_generated.cpp:349) on local variable 'x[200]'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' (loop 'VITIS_LOOP_344_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'store' operation ('x_200_write_ln349', code_generated.cpp:349) of variable 'x[200]', code_generated.cpp:349 on local variable 'x[200]' and 'load' operation ('x_200_load_1', code_generated.cpp:349) on local variable 'x[200]'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 4, Depth = 9, loop 'VITIS_LOOP_344_2'
WARNING: [HLS 200-871] Estimated clock period (3.694ns) exceeds the target (target clock period: 4ns, clock uncertainty: 1.08ns, effective delay budget: 2.92ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-871.html
WARNING: [HLS 200-1016] The critical path in module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' consists of the following:	'dadd' operation ('x[50]', code_generated.cpp:349) [3466]  (2.9 ns)
	'select' operation ('x[250]', code_generated.cpp:349) [3467]  (0.411 ns)
	'store' operation ('x_250_3_write_ln349', code_generated.cpp:349) of variable 'x[250]', code_generated.cpp:349 on local variable 'x[250]' [4363]  (0.387 ns)

Resolution: For help on HLS 200-1016 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-1016.html
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 17.17 seconds. CPU system time: 0.07 seconds. Elapsed time: 27.27 seconds; current allocated memory: 2.251 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3.05 seconds. CPU system time: 0 seconds. Elapsed time: 4.94 seconds; current allocated memory: 2.271 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln369) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'.
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 27, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
WARNING: [HLS 200-880] The II Violation in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' (loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'): Unable to enforce a carried dependence constraint (II = 29, distance = 1, offset = 1) between 'store' operation ('w_0_addr_write_ln369', code_generated.cpp:369) of variable 'add17_i703_s', code_generated.cpp:369 on array 'w_0' and 'load' operation ('w_0_load', code_generated.cpp:369) on array 'w_0'.
Resolution: For help on HLS 200-880 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-880.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 30, Depth = 96, loop 'VITIS_LOOP_360_2_VITIS_LOOP_361_3'
WARNING: [HLS 200-871] Estimated clock period (5.028ns) exceeds the target (target clock period: 4ns, clock uncertainty: 1.08ns, effective delay budget: 2.92ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-871.html
WARNING: [HLS 200-1016] The critical path in module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' consists of the following:	'dadd' operation ('tmp110', code_generated.cpp:369) [5166]  (2.51 ns)
	'dadd' operation ('tmp113', code_generated.cpp:369) [5169]  (2.51 ns)

Resolution: For help on HLS 200-1016 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.1;t=hls+guidance;d=200-1016.html
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 104.61 seconds. CPU system time: 0.13 seconds. Elapsed time: 108.38 seconds; current allocated memory: 2.287 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 9.85 seconds. CPU system time: 0.02 seconds. Elapsed time: 12.85 seconds; current allocated memory: 2.313 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln223_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln223) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_223_1_VITIS_LOOP_224_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 18, loop 'VITIS_LOOP_223_1_VITIS_LOOP_224_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 45.53 seconds. CPU system time: 0.12 seconds. Elapsed time: 47.86 seconds; current allocated memory: 2.334 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 10.72 seconds. CPU system time: 0.1 seconds. Elapsed time: 12.2 seconds; current allocated memory: 2.370 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_249_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_249_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_249_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 8.27 seconds. CPU system time: 0.1 seconds. Elapsed time: 14.92 seconds; current allocated memory: 2.375 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.07 seconds. CPU system time: 0.02 seconds. Elapsed time: 4.11 seconds; current allocated memory: 2.390 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp_Pipeline_VITIS_LOOP_273_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_273_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_273_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2.16 seconds. CPU system time: 0.03 seconds. Elapsed time: 6.2 seconds; current allocated memory: 2.390 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.88 seconds; current allocated memory: 2.390 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'kernel_nlp' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln332) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 12.58 seconds. CPU system time: 0.38 seconds. Elapsed time: 14.63 seconds; current allocated memory: 2.418 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 36.58 seconds. CPU system time: 0.39 seconds. Elapsed time: 38.43 seconds; current allocated memory: 2.478 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_14_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_14_1' pipeline 'VITIS_LOOP_14_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_14_1/m_axi_kernel_u1_ARUSER' to 0.
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_7ns_6_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_14_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 28.96 seconds. CPU system time: 0.36 seconds. Elapsed time: 30.91 seconds; current allocated memory: 2.481 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_37_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_37_1' pipeline 'VITIS_LOOP_37_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_37_1/m_axi_kernel_e1_ARUSER' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_37_1' is 25600, found 2 HDL expressions with this fanout: ((icmp_ln37_reg_81740_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)), ((icmp_ln37_reg_81740_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001))
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_9ns_8_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_37_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4.72 seconds. CPU system time: 0.12 seconds. Elapsed time: 6.3 seconds; current allocated memory: 2.522 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2' pipeline 'VITIS_LOOP_60_1_VITIS_LOOP_61_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2/m_axi_kernel_A_ARUSER' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2' is 14400, found 5 HDL expressions with this fanout: (1'b1 == ap_condition_10995), (1'b1 == ap_condition_10992), (1'b1 == ap_condition_10989), (1'b1 == ap_condition_11001), (1'b1 == ap_condition_10961)
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 17 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_4ns_3_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_9ns_8_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 8.49 seconds. CPU system time: 0.27 seconds. Elapsed time: 11.54 seconds; current allocated memory: 2.644 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_85_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_85_1' pipeline 'VITIS_LOOP_85_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_85_1/m_axi_kernel_u2_ARUSER' to 0.
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_7ns_6_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_85_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 6.51 seconds. CPU system time: 0.35 seconds. Elapsed time: 8.41 seconds; current allocated memory: 2.750 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_108_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_108_1' pipeline 'VITIS_LOOP_108_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_108_1/m_axi_kernel_e2_ARUSER' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_108_1' is 25600, found 2 HDL expressions with this fanout: ((icmp_ln108_reg_81740_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)), ((icmp_ln108_reg_81740_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001))
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_9ns_8_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_108_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4.73 seconds. CPU system time: 0.12 seconds. Elapsed time: 8.2 seconds; current allocated memory: 2.791 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_131_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_131_1' pipeline 'VITIS_LOOP_131_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_131_1/m_axi_kernel_y_ARUSER' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_131_1' is 25600 from HDL expression: ((icmp_ln131_fu_6114_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_131_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 7.53 seconds. CPU system time: 0.3 seconds. Elapsed time: 12.93 seconds; current allocated memory: 2.901 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_154_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_154_1' pipeline 'VITIS_LOOP_154_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_154_1/m_axi_kernel_x_ARUSER' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_154_1' is 25600 from HDL expression: ((icmp_ln154_fu_6114_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_154_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.49 seconds. CPU system time: 0.1 seconds. Elapsed time: 1.94 seconds; current allocated memory: 2.938 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_177_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_177_1' pipeline 'VITIS_LOOP_177_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_177_1/m_axi_kernel_z_ARUSER' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_177_1' is 25600, found 2 HDL expressions with this fanout: ((icmp_ln177_reg_81740_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)), ((icmp_ln177_reg_81740_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001))
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_9ns_8_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_177_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5.27 seconds. CPU system time: 0.12 seconds. Elapsed time: 5.72 seconds; current allocated memory: 3.004 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_200_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_200_1' pipeline 'VITIS_LOOP_200_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_200_1/m_axi_kernel_w_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_200_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 7.27 seconds. CPU system time: 0.25 seconds. Elapsed time: 8.63 seconds; current allocated memory: 3.106 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_302_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_302_3' pipeline 'VITIS_LOOP_302_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_302_3' is 640101 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_full_dsp_1': 500 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_6_max_dsp_1': 500 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_7ns_6_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_302_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 8.76 seconds. CPU system time: 0.17 seconds. Elapsed time: 9.4 seconds; current allocated memory: 3.231 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_324_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_324_3' pipeline 'VITIS_LOOP_324_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_324_3' is 80065 from HDL expression: ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_full_dsp_1': 125 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_6_max_dsp_1': 127 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_324_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 24.79 seconds. CPU system time: 0.5 seconds. Elapsed time: 27.93 seconds; current allocated memory: 3.408 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' pipeline 'VITIS_LOOP_344_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_344_2' is 25600 from HDL expression: ((icmp_ln344_reg_29071 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_full_dsp_1': 50 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_344_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 20.04 seconds. CPU system time: 0.32 seconds. Elapsed time: 21.08 seconds; current allocated memory: 3.529 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' pipeline 'VITIS_LOOP_360_2_VITIS_LOOP_361_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3' is 64896 from HDL expression: ((icmp_ln360_reg_28787 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_full_dsp_1': 10 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_6_max_dsp_1': 14 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_564_64_1_1': 200 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_864_64_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_4ns_9_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_360_2_VITIS_LOOP_361_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 7.84 seconds. CPU system time: 0.22 seconds. Elapsed time: 10.06 seconds; current allocated memory: 3.628 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2' pipeline 'VITIS_LOOP_223_1_VITIS_LOOP_224_2' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2/m_axi_kernel_A_BREADY' to 0.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2' is 1280037 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_9ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 17 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_100010_64_1_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_4ns_9_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_9ns_9ns_9_13_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 14.17 seconds. CPU system time: 0.32 seconds. Elapsed time: 16.85 seconds; current allocated memory: 3.821 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_249_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_249_1' pipeline 'VITIS_LOOP_249_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_249_1/m_axi_kernel_x_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_249_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 19.6 seconds. CPU system time: 0.31 seconds. Elapsed time: 21.69 seconds; current allocated memory: 3.922 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp_Pipeline_VITIS_LOOP_273_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'kernel_nlp_Pipeline_VITIS_LOOP_273_1' pipeline 'VITIS_LOOP_273_1' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'kernel_nlp_Pipeline_VITIS_LOOP_273_1/m_axi_kernel_w_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp_Pipeline_VITIS_LOOP_273_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5.48 seconds. CPU system time: 0.12 seconds. Elapsed time: 14.61 seconds; current allocated memory: 3.946 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'kernel_nlp' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_A' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_u1' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_e1' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_u2' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_e2' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_w' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_x' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_y' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/kernel_z' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/alpha' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/beta' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vA' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vu1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/ve1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vu2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/ve2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vw' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vx' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vy' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'kernel_nlp/vz' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'kernel_nlp' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'alpha', 'beta', 'vA', 'vu1', 've1', 'vu2', 've2', 'vw', 'vx', 'vy', 'vz' to AXI-Lite port control.
INFO: [RTGEN 206-104] Estimated max fanout for 'kernel_nlp' is 83400 from HDL expression: (1'b1 == ap_CS_fsm_state227)
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_5_full_dsp_1': 500 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_6_max_dsp_1': 500 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_9ns_10ns_19_4_1': 150 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'kernel_nlp'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 7.63 seconds. CPU system time: 0.26 seconds. Elapsed time: 11.49 seconds; current allocated memory: 188.245 MB.
INFO: [RTMG 210-278] Implementing memory 'kernel_nlp_u1_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'kernel_nlp_w_0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'kernel_nlp_A_0_0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 127.09 seconds. CPU system time: 1.48 seconds. Elapsed time: 134.96 seconds; current allocated memory: 393.876 MB.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 43.41 seconds. CPU system time: 0.15 seconds. Elapsed time: 44.65 seconds; current allocated memory: 484.286 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for kernel_nlp.
INFO: [VLOG 209-307] Generating Verilog RTL for kernel_nlp.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 198.89 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4246.48 seconds. CPU system time: 16.16 seconds. Elapsed time: 4465.99 seconds; current allocated memory: 484.270 MB.
INFO: [HLS 200-1510] Running: export_design 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.

****** Vivado v2021.1 (64-bit)
  **** SW Build 3247384 on Thu Jun 10 19:36:07 MDT 2021
  **** IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
    ** Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.

source run_ippack.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/mnt/software/xilinx/Vivado/2021.1/data/ip'.
WARNING: [IP_Flow 19-4832] The IP name 'kernel_nlp_dadd_64ns_64ns_64_5_full_dsp_1_ip' you have specified is long. The Windows operating system has path length limitations. It is recommended you use shorter names to reduce the likelihood of issues.
INFO: [IP_Flow 19-1686] Generating 'Synthesis' target for IP 'kernel_nlp_dadd_64ns_64ns_64_5_full_dsp_1_ip'...
INFO: [IP_Flow 19-1686] Generating 'Simulation' target for IP 'kernel_nlp_dadd_64ns_64ns_64_5_full_dsp_1_ip'...
WARNING: [IP_Flow 19-4832] The IP name 'kernel_nlp_dadd_64ns_64ns_64_5_no_dsp_1_ip' you have specified is long. The Windows operating system has path length limitations. It is recommended you use shorter names to reduce the likelihood of issues.
INFO: [IP_Flow 19-1686] Generating 'Synthesis' target for IP 'kernel_nlp_dadd_64ns_64ns_64_5_no_dsp_1_ip'...
INFO: [IP_Flow 19-1686] Generating 'Simulation' target for IP 'kernel_nlp_dadd_64ns_64ns_64_5_no_dsp_1_ip'...
WARNING: [IP_Flow 19-4832] The IP name 'kernel_nlp_dmul_64ns_64ns_64_6_max_dsp_1_ip' you have specified is long. The Windows operating system has path length limitations. It is recommended you use shorter names to reduce the likelihood of issues.
INFO: [IP_Flow 19-1686] Generating 'Synthesis' target for IP 'kernel_nlp_dmul_64ns_64ns_64_6_max_dsp_1_ip'...
INFO: [IP_Flow 19-1686] Generating 'Simulation' target for IP 'kernel_nlp_dmul_64ns_64ns_64_6_max_dsp_1_ip'...
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/mnt/software/xilinx/Vivado/2021.1/data/ip'.
INFO: [Common 17-206] Exiting Vivado at Thu Aug 15 12:53:35 2024...
INFO: [HLS 200-802] Generated output file kernel_nlp/solution/impl/export.zip
INFO: [HLS 200-111] Finished Command export_design CPU user time: 272.49 seconds. CPU system time: 4.31 seconds. Elapsed time: 297.34 seconds; current allocated memory: 517.948 MB.
HLS completed successfully
INFO: [HLS 200-112] Total CPU user time: 4523.39 seconds. Total CPU system time: 22.15 seconds. Total elapsed time: 4768.76 seconds; peak allocated memory: 3.946 GB.
INFO: [Common 17-206] Exiting vitis_hls at Thu Aug 15 12:53:50 2024...
