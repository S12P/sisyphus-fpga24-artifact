

================================================================
== Synthesis Summary Report of 'kernel_nlp'
================================================================
+ General Information: 
    * Date:           Wed Aug 14 23:02:20 2024
    * Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
    * Project:        kernel_nlp
    * Solution:       solution (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcu200-fsgd2104-2-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +---------------------------------------------------------------------+--------+-------+---------+-----------+----------+---------+-------+----------+------------+------------+--------------+--------------+-----+
    |                               Modules                               |  Issue |       | Latency |  Latency  | Iteration|         |  Trip |          |            |            |              |              |     |
    |                               & Loops                               |  Type  | Slack | (cycles)|    (ns)   |  Latency | Interval| Count | Pipelined|    BRAM    |     DSP    |      FF      |      LUT     | URAM|
    +---------------------------------------------------------------------+--------+-------+---------+-----------+----------+---------+-------+----------+------------+------------+--------------+--------------+-----+
    |+ kernel_nlp                                                         |  Timing|  -0.36|    81580|  3.263e+05|         -|    81581|      -|        no|  1672 (38%)|  4507 (65%)|  799137 (33%)|  631657 (53%)|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_14_1_fu_14680                  |  Timing|  -0.00|      207|    828.000|         -|      207|      -|        no|           -|           -|    26277 (1%)|     136 (~0%)|    -|
    |  o VITIS_LOOP_14_1                                                  |       -|   2.92|      205|    820.000|         2|        1|    205|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_23_1_fu_15097                  |  Timing|  -0.00|      197|    788.000|         -|      197|      -|        no|           -|           -|    24997 (1%)|     136 (~0%)|    -|
    |  o VITIS_LOOP_23_1                                                  |       -|   2.92|      195|    780.000|         2|        1|    195|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_32_1_fu_15494                  |  Timing|  -0.00|      207|    828.000|         -|      207|      -|        no|           -|           -|    26277 (1%)|     136 (~0%)|    -|
    |  o VITIS_LOOP_32_1                                                  |       -|   2.92|      205|    820.000|         2|        1|    205|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_41_1_VITIS_LOOP_42_2_fu_15911  |  Timing|  -0.00|    79953|  3.198e+05|         -|    79953|      -|        no|           -|           -|     203 (~0%)|     208 (~0%)|    -|
    |  o VITIS_LOOP_41_1_VITIS_LOOP_42_2                                  |       -|   2.92|    79951|  3.198e+05|         3|        1|  79950|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_75_2_fu_16738                  |       -|   2.10|        4|     16.000|         -|        4|      -|        no|           -|           -|    26245 (1%)|    29566 (2%)|    -|
    |  o VITIS_LOOP_75_2                                                  |       -|   2.92|        2|      8.000|         1|        1|      2|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_90_2_fu_17562                  |       -|   2.10|        4|     16.000|         -|        4|      -|        no|           -|           -|    24965 (1%)|    28126 (2%)|    -|
    |  o VITIS_LOOP_90_2                                                  |       -|   2.92|        2|      8.000|         1|        1|      2|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_107_3_fu_18346                 |       -|   0.02|      444|  1.776e+03|         -|      444|      -|        no|           -|           -|   110399 (4%)|    32735 (2%)|    -|
    |  o VITIS_LOOP_107_3                                                 |       -|   2.92|      442|  1.768e+03|        54|        1|    390|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_131_3_fu_20360                 |  Timing|  -0.36|      810|  3.240e+03|         -|      810|      -|        no|           -|           -|   212060 (8%)|    80523 (6%)|    -|
    |  o VITIS_LOOP_131_3                                                 |       -|   2.92|      808|  3.232e+03|        33|        4|    195|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_62_1_fu_22394                  |  Timing|  -0.00|      211|    844.000|         -|      211|      -|        no|           -|           -|    2286 (~0%)|    28926 (2%)|    -|
    |  o VITIS_LOOP_62_1                                                  |       -|   2.92|      209|    836.000|        16|        1|    195|       yes|           -|           -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_52_1_fu_22791                  |  Timing|  -0.00|      221|    884.000|         -|      221|      -|        no|           -|           -|    2286 (~0%)|    30406 (2%)|    -|
    |  o VITIS_LOOP_52_1                                                  |       -|   2.92|      219|    876.000|        16|        1|    205|       yes|           -|           -|             -|             -|    -|
    +---------------------------------------------------------------------+--------+-------+---------+-----------+----------+---------+-------+----------+------------+------------+--------------+--------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface        | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|                  | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+------------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_kernel_A   | 128 -> 128 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_tmp | 128 -> 128 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_x   | 128 -> 128 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_y   | 128 -> 128 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
+------------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+--------------------+
| Argument | Direction | Datatype           |
+----------+-----------+--------------------+
| vA       | in        | vector<double, 2>* |
| vx       | in        | vector<double, 2>* |
| vy       | inout     | vector<double, 2>* |
| vtmp     | inout     | vector<double, 2>* |
+----------+-----------+--------------------+

* SW-to-HW Mapping
+----------+----------------------+-----------+----------+-----------------------+
| Argument | HW Name              | HW Type   | HW Usage | HW Info               |
+----------+----------------------+-----------+----------+-----------------------+
| vA       | m_axi_kernel_A       | interface |          |                       |
| vA       | s_axi_control vA_1   | register  | offset   | offset=0x10, range=32 |
| vA       | s_axi_control vA_2   | register  | offset   | offset=0x14, range=32 |
| vx       | m_axi_kernel_x       | interface |          |                       |
| vx       | s_axi_control vx_1   | register  | offset   | offset=0x1c, range=32 |
| vx       | s_axi_control vx_2   | register  | offset   | offset=0x20, range=32 |
| vy       | m_axi_kernel_y       | interface |          |                       |
| vy       | s_axi_control vy_1   | register  | offset   | offset=0x28, range=32 |
| vy       | s_axi_control vy_2   | register  | offset   | offset=0x2c, range=32 |
| vtmp     | m_axi_kernel_tmp     | interface |          |                       |
| vtmp     | s_axi_control vtmp_1 | register  | offset   | offset=0x34, range=32 |
| vtmp     | s_axi_control vtmp_2 | register  | offset   | offset=0x38, range=32 |
+----------+----------------------+-----------+----------+-----------------------+


================================================================
== M_AXI Burst Information
================================================================
* Burst Summary
+------------------+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------+
| HW Interface     | Loop            | Message                                                                                                                                                                                                                     | Location                 |
+------------------+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------+
| m_axi_kernel_y   | VITIS_LOOP_14_1 | Multiple burst reads of length 205 and bit width 128. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.   | code_generated.cpp:14:19 |
| m_axi_kernel_tmp | VITIS_LOOP_23_1 | Multiple burst reads of length 195 and bit width 128. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.   | code_generated.cpp:23:19 |
| m_axi_kernel_x   | VITIS_LOOP_32_1 | Multiple burst reads of length 205 and bit width 128. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.   | code_generated.cpp:32:19 |
| m_axi_kernel_A   | VITIS_LOOP_41_1 | Multiple burst reads of length 79950 and bit width 128. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. | code_generated.cpp:41:19 |
| m_axi_kernel_tmp | VITIS_LOOP_62_1 | Multiple burst writes of length 195 and bit width 128. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.  | code_generated.cpp:62:19 |
| m_axi_kernel_y   | VITIS_LOOP_52_1 | Multiple burst writes of length 205 and bit width 128. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.  | code_generated.cpp:52:19 |
+------------------+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------+

* Bursts and Widening Missed
+------------------+----------+-----------------+--------------------------------------------------------------------------------------+--------------------------+
| HW Interface     | Variable | Loop            | Problem                                                                              | Location                 |
+------------------+----------+-----------------+--------------------------------------------------------------------------------------+--------------------------+
| m_axi_kernel_y   | vy       | VITIS_LOOP_52_1 | Could not widen since Type i128 size is greater than or equal to alignment 16(bytes) | code_generated.cpp:52:19 |
| m_axi_kernel_tmp | vtmp     | VITIS_LOOP_62_1 | Could not widen since Type i128 size is greater than or equal to alignment 16(bytes) | code_generated.cpp:62:19 |
| m_axi_kernel_A   | vA       | VITIS_LOOP_42_2 | Could not widen since Type i128 size is greater than or equal to alignment 16(bytes) | code_generated.cpp:42:26 |
| m_axi_kernel_x   | vx       | VITIS_LOOP_32_1 | Could not widen since Type i128 size is greater than or equal to alignment 16(bytes) | code_generated.cpp:32:19 |
| m_axi_kernel_tmp | vtmp     | VITIS_LOOP_23_1 | Could not widen since Type i128 size is greater than or equal to alignment 16(bytes) | code_generated.cpp:23:19 |
| m_axi_kernel_y   | vy       | VITIS_LOOP_14_1 | Could not widen since Type i128 size is greater than or equal to alignment 16(bytes) | code_generated.cpp:14:19 |
+------------------+----------+-----------------+--------------------------------------------------------------------------------------+--------------------------+


