

================================================================
== Synthesis Summary Report of 'kernel_nlp'
================================================================
+ General Information: 
    * Date:           Thu Aug 15 16:10:30 2024
    * Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
    * Project:        kernel_nlp
    * Solution:       solution (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcu200-fsgd2104-2-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-----------------------------------------------------------------------+--------+--------+---------+-----------+----------+---------+-------+----------+------------+----------+--------------+--------------+-----+
    |                                Modules                                |  Issue |        | Latency |  Latency  | Iteration|         |  Trip |          |            |          |              |              |     |
    |                                & Loops                                |  Type  |  Slack | (cycles)|    (ns)   |  Latency | Interval| Count | Pipelined|    BRAM    |    DSP   |      FF      |      LUT     | URAM|
    +-----------------------------------------------------------------------+--------+--------+---------+-----------+----------+---------+-------+----------+------------+----------+--------------+--------------+-----+
    |+ kernel_nlp                                                           |  Timing|  -41.08|   125925|  5.540e+06|         -|   125926|      -|        no|  1482 (34%)|  591 (8%)|  260336 (11%)|  374068 (31%)|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_14_1_fu_9889                     |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    1044 (~0%)|     103 (~0%)|    -|
    |  o VITIS_LOOP_14_1                                                    |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_37_1_fu_9904                     |  Timing|   -0.00|       38|  1.672e+03|         -|       38|      -|        no|           -|  16 (~0%)|    1436 (~0%)|    1586 (~0%)|    -|
    |  o VITIS_LOOP_37_1                                                    |       -|    2.92|       36|  1.584e+03|        13|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_60_1_VITIS_LOOP_61_2_fu_9951     |  Timing|   -0.00|    10013|  4.405e+05|         -|    10013|      -|        no|           -|  16 (~0%)|    1533 (~0%)|    1140 (~0%)|    -|
    |  o VITIS_LOOP_60_1_VITIS_LOOP_61_2                                    |       -|    2.92|    10011|  4.404e+05|        13|        1|  10000|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_85_1_fu_10278                    |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    1044 (~0%)|     103 (~0%)|    -|
    |  o VITIS_LOOP_85_1                                                    |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_108_1_fu_10293                   |  Timing|   -0.00|       27|  1.188e+03|         -|       27|      -|        no|           -|         -|    25729 (1%)|     383 (~0%)|    -|
    |  o VITIS_LOOP_108_1                                                   |       -|    2.92|       25|  1.100e+03|         2|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_131_1_fu_10700                   |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    1044 (~0%)|     103 (~0%)|    -|
    |  o VITIS_LOOP_131_1                                                   |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_154_1_fu_10715                   |  Timing|   -0.00|       27|  1.188e+03|         -|       27|      -|        no|           -|         -|    25729 (1%)|     383 (~0%)|    -|
    |  o VITIS_LOOP_154_1                                                   |       -|    2.92|       25|  1.100e+03|         2|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_177_1_fu_11122                   |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    1044 (~0%)|     103 (~0%)|    -|
    |  o VITIS_LOOP_177_1                                                   |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_200_1_fu_11137                   |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    1044 (~0%)|     103 (~0%)|    -|
    |  o VITIS_LOOP_200_1                                                   |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_302_3_fu_11152                   |  Timing|   -2.82|     2416|  1.063e+05|         -|     2416|      -|        no|           -|         -|    6226 (~0%)|    25083 (2%)|    -|
    |  o VITIS_LOOP_302_3                                                   |      II|    2.92|     2414|  1.062e+05|        21|        6|    400|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_344_2_fu_11658                   |  Timing|  -41.08|      803|  3.533e+04|         -|      803|      -|        no|           -|         -|    25841 (1%)|    34625 (2%)|    -|
    |  o VITIS_LOOP_344_2                                                   |      II|    2.92|      801|  3.524e+04|         6|        4|    200|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_324_3_fu_12470                   |  Timing|   -2.87|     1621|  7.132e+04|         -|     1621|      -|        no|           -|         -|   19888 (~0%)|    17265 (1%)|    -|
    |  o VITIS_LOOP_324_3                                                   |      II|    2.92|     1619|  7.123e+04|        28|        8|    200|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_361_3_fu_13044                   |  Timing|   -2.11|     7231|  3.181e+05|         -|     7231|      -|        no|           -|         -|    5162 (~0%)|    20148 (1%)|    -|
    |  o VITIS_LOOP_361_3                                                   |      II|    2.92|     7229|  3.180e+05|        48|       18|    400|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_223_1_VITIS_LOOP_224_2_fu_13461  |  Timing|   -0.00|    10015|  4.406e+05|         -|    10015|      -|        no|           -|  16 (~0%)|   14921 (~0%)|    2842 (~0%)|    -|
    |  o VITIS_LOOP_223_1_VITIS_LOOP_224_2                                  |       -|    2.92|    10013|  4.405e+05|        15|        1|  10000|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_249_1_fu_13788                   |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    2244 (~0%)|    28655 (2%)|    -|
    |  o VITIS_LOOP_249_1                                                   |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | + grp_kernel_nlp_Pipeline_VITIS_LOOP_273_1_fu_14195                   |  Timing|   -0.00|       28|  1.232e+03|         -|       28|      -|        no|           -|         -|    1044 (~0%)|     110 (~0%)|    -|
    |  o VITIS_LOOP_273_1                                                   |       -|    2.92|       26|  1.144e+03|         3|        1|     25|       yes|           -|         -|             -|             -|    -|
    | o VITIS_LOOP_301_2                                                    |       -|    2.92|    24300|  1.069e+06|      2430|        -|     10|        no|           -|         -|             -|             -|    -|
    | o VITIS_LOOP_322_1                                                    |       -|    2.92|     8185|  3.601e+05|      1637|        -|      5|        no|           -|         -|             -|             -|    -|
    | o VITIS_LOOP_360_2                                                    |       -|    2.92|    72460|  3.188e+06|      7246|        -|     10|        no|           -|         -|             -|             -|    -|
    +-----------------------------------------------------------------------+--------+--------+---------+-----------+----------+---------+-------+----------+------------+----------+--------------+--------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-----------------+--------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface       | Data Width   | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|                 | (SW->HW)     |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+-----------------+--------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_kernel_A  | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_e1 | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_e2 | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_u1 | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_u2 | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_w  | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_x  | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_y  | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
| m_axi_kernel_z  | 1024 -> 1024 | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          |
+-----------------+--------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 8             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+---------------------+
| Argument | Direction | Datatype            |
+----------+-----------+---------------------+
| alpha    | in        | double              |
| beta     | in        | double              |
| vA       | inout     | vector<double, 16>* |
| vu1      | in        | vector<double, 16>* |
| ve1      | in        | vector<double, 16>* |
| vu2      | in        | vector<double, 16>* |
| ve2      | in        | vector<double, 16>* |
| vw       | inout     | vector<double, 16>* |
| vx       | inout     | vector<double, 16>* |
| vy       | in        | vector<double, 16>* |
| vz       | in        | vector<double, 16>* |
+----------+-----------+---------------------+

* SW-to-HW Mapping
+----------+-----------------------+-----------+----------+-----------------------+
| Argument | HW Name               | HW Type   | HW Usage | HW Info               |
+----------+-----------------------+-----------+----------+-----------------------+
| alpha    | s_axi_control alpha_1 | register  |          | offset=0x10, range=32 |
| alpha    | s_axi_control alpha_2 | register  |          | offset=0x14, range=32 |
| beta     | s_axi_control beta_1  | register  |          | offset=0x1c, range=32 |
| beta     | s_axi_control beta_2  | register  |          | offset=0x20, range=32 |
| vA       | m_axi_kernel_A        | interface |          |                       |
| vA       | s_axi_control vA_1    | register  | offset   | offset=0x28, range=32 |
| vA       | s_axi_control vA_2    | register  | offset   | offset=0x2c, range=32 |
| vu1      | m_axi_kernel_u1       | interface |          |                       |
| vu1      | s_axi_control vu1_1   | register  | offset   | offset=0x34, range=32 |
| vu1      | s_axi_control vu1_2   | register  | offset   | offset=0x38, range=32 |
| ve1      | m_axi_kernel_e1       | interface |          |                       |
| ve1      | s_axi_control ve1_1   | register  | offset   | offset=0x40, range=32 |
| ve1      | s_axi_control ve1_2   | register  | offset   | offset=0x44, range=32 |
| vu2      | m_axi_kernel_u2       | interface |          |                       |
| vu2      | s_axi_control vu2_1   | register  | offset   | offset=0x4c, range=32 |
| vu2      | s_axi_control vu2_2   | register  | offset   | offset=0x50, range=32 |
| ve2      | m_axi_kernel_e2       | interface |          |                       |
| ve2      | s_axi_control ve2_1   | register  | offset   | offset=0x58, range=32 |
| ve2      | s_axi_control ve2_2   | register  | offset   | offset=0x5c, range=32 |
| vw       | m_axi_kernel_w        | interface |          |                       |
| vw       | s_axi_control vw_1    | register  | offset   | offset=0x64, range=32 |
| vw       | s_axi_control vw_2    | register  | offset   | offset=0x68, range=32 |
| vx       | m_axi_kernel_x        | interface |          |                       |
| vx       | s_axi_control vx_1    | register  | offset   | offset=0x70, range=32 |
| vx       | s_axi_control vx_2    | register  | offset   | offset=0x74, range=32 |
| vy       | m_axi_kernel_y        | interface |          |                       |
| vy       | s_axi_control vy_1    | register  | offset   | offset=0x7c, range=32 |
| vy       | s_axi_control vy_2    | register  | offset   | offset=0x80, range=32 |
| vz       | m_axi_kernel_z        | interface |          |                       |
| vz       | s_axi_control vz_1    | register  | offset   | offset=0x88, range=32 |
| vz       | s_axi_control vz_2    | register  | offset   | offset=0x8c, range=32 |
+----------+-----------------------+-----------+----------+-----------------------+


================================================================
== M_AXI Burst Information
================================================================
* Burst Summary
+-----------------+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------+
| HW Interface    | Loop             | Message                                                                                                                                                                                                                       | Location                  |
+-----------------+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------+
| m_axi_kernel_u1 | VITIS_LOOP_14_1  | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:14:19  |
| m_axi_kernel_e1 | VITIS_LOOP_37_1  | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:37:19  |
| m_axi_kernel_A  | VITIS_LOOP_60_1  | Multiple burst reads of length 10000 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.  | code_generated.cpp:60:19  |
| m_axi_kernel_u2 | VITIS_LOOP_85_1  | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:85:19  |
| m_axi_kernel_e2 | VITIS_LOOP_108_1 | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:108:20 |
| m_axi_kernel_y  | VITIS_LOOP_131_1 | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:131:20 |
| m_axi_kernel_x  | VITIS_LOOP_154_1 | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:154:20 |
| m_axi_kernel_z  | VITIS_LOOP_177_1 | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:177:20 |
| m_axi_kernel_w  | VITIS_LOOP_200_1 | Multiple burst reads of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.     | code_generated.cpp:200:20 |
| m_axi_kernel_A  | VITIS_LOOP_223_1 | Multiple burst writes of length 10000 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. | code_generated.cpp:223:20 |
| m_axi_kernel_x  | VITIS_LOOP_249_1 | Multiple burst writes of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.    | code_generated.cpp:249:20 |
| m_axi_kernel_w  | VITIS_LOOP_273_1 | Multiple burst writes of length 25 and bit width 1024. These bursts requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.    | code_generated.cpp:273:20 |
+-----------------+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------+

* Bursts and Widening Missed
+-----------------+----------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| HW Interface    | Variable | Problem                                                                                                              | Location                  |
+-----------------+----------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| m_axi_kernel_w  | vw       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:273:20 |
| m_axi_kernel_x  | vx       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:249:20 |
| m_axi_kernel_A  | vA       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:223:20 |
| m_axi_kernel_w  | vw       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:200:20 |
| m_axi_kernel_z  | vz       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:177:20 |
| m_axi_kernel_x  | vx       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:154:20 |
| m_axi_kernel_y  | vy       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:131:20 |
| m_axi_kernel_e2 | ve2      | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:108:20 |
| m_axi_kernel_u2 | vu2      | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:85:19  |
| m_axi_kernel_A  | vA       | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:60:19  |
| m_axi_kernel_e1 | ve1      | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:37:19  |
| m_axi_kernel_u1 | vu1      | Could not widen since the size of type 'i1024' is greater than or equal to the max_widen_bitwidth threshold of '64'. | code_generated.cpp:14:19  |
+-----------------+----------+----------------------------------------------------------------------------------------------------------------------+---------------------------+


