#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WDATA", 512, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WSTRB", 64, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RDATA", 512, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_C_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_AWUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WDATA", 512, hls_out, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WSTRB", 64, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_WUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_ARUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RDATA", 512, hls_in, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_128_0_BUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_AWUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WDATA", 512, hls_out, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WSTRB", 64, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_WUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_ARUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RDATA", 512, hls_in, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_merlin_gmem_kernel_gemm_512_0_BUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "kernel_gemm";
