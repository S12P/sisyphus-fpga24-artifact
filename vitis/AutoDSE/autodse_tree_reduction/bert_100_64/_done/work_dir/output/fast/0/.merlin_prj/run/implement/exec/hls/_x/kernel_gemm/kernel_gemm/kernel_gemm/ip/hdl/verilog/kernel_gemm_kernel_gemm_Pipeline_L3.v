// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_gemm_kernel_gemm_Pipeline_L3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWVALID,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWREADY,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWADDR,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWID,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWLEN,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWSIZE,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWBURST,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWLOCK,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWCACHE,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWPROT,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWQOS,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWREGION,
        m_axi_merlin_gmem_kernel_gemm_512_C_AWUSER,
        m_axi_merlin_gmem_kernel_gemm_512_C_WVALID,
        m_axi_merlin_gmem_kernel_gemm_512_C_WREADY,
        m_axi_merlin_gmem_kernel_gemm_512_C_WDATA,
        m_axi_merlin_gmem_kernel_gemm_512_C_WSTRB,
        m_axi_merlin_gmem_kernel_gemm_512_C_WLAST,
        m_axi_merlin_gmem_kernel_gemm_512_C_WID,
        m_axi_merlin_gmem_kernel_gemm_512_C_WUSER,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARVALID,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARREADY,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARADDR,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARID,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARLEN,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARSIZE,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARBURST,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARLOCK,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARCACHE,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARPROT,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARQOS,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARREGION,
        m_axi_merlin_gmem_kernel_gemm_512_C_ARUSER,
        m_axi_merlin_gmem_kernel_gemm_512_C_RVALID,
        m_axi_merlin_gmem_kernel_gemm_512_C_RREADY,
        m_axi_merlin_gmem_kernel_gemm_512_C_RDATA,
        m_axi_merlin_gmem_kernel_gemm_512_C_RLAST,
        m_axi_merlin_gmem_kernel_gemm_512_C_RID,
        m_axi_merlin_gmem_kernel_gemm_512_C_RFIFONUM,
        m_axi_merlin_gmem_kernel_gemm_512_C_RUSER,
        m_axi_merlin_gmem_kernel_gemm_512_C_RRESP,
        m_axi_merlin_gmem_kernel_gemm_512_C_BVALID,
        m_axi_merlin_gmem_kernel_gemm_512_C_BREADY,
        m_axi_merlin_gmem_kernel_gemm_512_C_BRESP,
        m_axi_merlin_gmem_kernel_gemm_512_C_BID,
        m_axi_merlin_gmem_kernel_gemm_512_C_BUSER,
        sext_ln1705,
        C_buf_address0,
        C_buf_ce0,
        C_buf_q0,
        C_buf_16_address0,
        C_buf_16_ce0,
        C_buf_16_q0,
        C_buf_17_address0,
        C_buf_17_ce0,
        C_buf_17_q0,
        C_buf_18_address0,
        C_buf_18_ce0,
        C_buf_18_q0,
        C_buf_19_address0,
        C_buf_19_ce0,
        C_buf_19_q0,
        C_buf_20_address0,
        C_buf_20_ce0,
        C_buf_20_q0,
        C_buf_21_address0,
        C_buf_21_ce0,
        C_buf_21_q0,
        C_buf_22_address0,
        C_buf_22_ce0,
        C_buf_22_q0,
        C_buf_23_address0,
        C_buf_23_ce0,
        C_buf_23_q0,
        C_buf_24_address0,
        C_buf_24_ce0,
        C_buf_24_q0,
        C_buf_25_address0,
        C_buf_25_ce0,
        C_buf_25_q0,
        C_buf_26_address0,
        C_buf_26_ce0,
        C_buf_26_q0,
        C_buf_27_address0,
        C_buf_27_ce0,
        C_buf_27_q0,
        C_buf_28_address0,
        C_buf_28_ce0,
        C_buf_28_q0,
        C_buf_29_address0,
        C_buf_29_ce0,
        C_buf_29_q0,
        C_buf_30_address0,
        C_buf_30_ce0,
        C_buf_30_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_merlin_gmem_kernel_gemm_512_C_AWVALID;
input   m_axi_merlin_gmem_kernel_gemm_512_C_AWREADY;
output  [63:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWADDR;
output  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWID;
output  [31:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWLEN;
output  [2:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWSIZE;
output  [1:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWBURST;
output  [1:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWLOCK;
output  [3:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWCACHE;
output  [2:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWPROT;
output  [3:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWQOS;
output  [3:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWREGION;
output  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_AWUSER;
output   m_axi_merlin_gmem_kernel_gemm_512_C_WVALID;
input   m_axi_merlin_gmem_kernel_gemm_512_C_WREADY;
output  [511:0] m_axi_merlin_gmem_kernel_gemm_512_C_WDATA;
output  [63:0] m_axi_merlin_gmem_kernel_gemm_512_C_WSTRB;
output   m_axi_merlin_gmem_kernel_gemm_512_C_WLAST;
output  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_WID;
output  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_WUSER;
output   m_axi_merlin_gmem_kernel_gemm_512_C_ARVALID;
input   m_axi_merlin_gmem_kernel_gemm_512_C_ARREADY;
output  [63:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARADDR;
output  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARID;
output  [31:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARLEN;
output  [2:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARSIZE;
output  [1:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARBURST;
output  [1:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARLOCK;
output  [3:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARCACHE;
output  [2:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARPROT;
output  [3:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARQOS;
output  [3:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARREGION;
output  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_ARUSER;
input   m_axi_merlin_gmem_kernel_gemm_512_C_RVALID;
output   m_axi_merlin_gmem_kernel_gemm_512_C_RREADY;
input  [511:0] m_axi_merlin_gmem_kernel_gemm_512_C_RDATA;
input   m_axi_merlin_gmem_kernel_gemm_512_C_RLAST;
input  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_RID;
input  [8:0] m_axi_merlin_gmem_kernel_gemm_512_C_RFIFONUM;
input  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_RUSER;
input  [1:0] m_axi_merlin_gmem_kernel_gemm_512_C_RRESP;
input   m_axi_merlin_gmem_kernel_gemm_512_C_BVALID;
output   m_axi_merlin_gmem_kernel_gemm_512_C_BREADY;
input  [1:0] m_axi_merlin_gmem_kernel_gemm_512_C_BRESP;
input  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_BID;
input  [0:0] m_axi_merlin_gmem_kernel_gemm_512_C_BUSER;
input  [57:0] sext_ln1705;
output  [8:0] C_buf_address0;
output   C_buf_ce0;
input  [31:0] C_buf_q0;
output  [8:0] C_buf_16_address0;
output   C_buf_16_ce0;
input  [31:0] C_buf_16_q0;
output  [8:0] C_buf_17_address0;
output   C_buf_17_ce0;
input  [31:0] C_buf_17_q0;
output  [8:0] C_buf_18_address0;
output   C_buf_18_ce0;
input  [31:0] C_buf_18_q0;
output  [8:0] C_buf_19_address0;
output   C_buf_19_ce0;
input  [31:0] C_buf_19_q0;
output  [8:0] C_buf_20_address0;
output   C_buf_20_ce0;
input  [31:0] C_buf_20_q0;
output  [8:0] C_buf_21_address0;
output   C_buf_21_ce0;
input  [31:0] C_buf_21_q0;
output  [8:0] C_buf_22_address0;
output   C_buf_22_ce0;
input  [31:0] C_buf_22_q0;
output  [8:0] C_buf_23_address0;
output   C_buf_23_ce0;
input  [31:0] C_buf_23_q0;
output  [8:0] C_buf_24_address0;
output   C_buf_24_ce0;
input  [31:0] C_buf_24_q0;
output  [8:0] C_buf_25_address0;
output   C_buf_25_ce0;
input  [31:0] C_buf_25_q0;
output  [8:0] C_buf_26_address0;
output   C_buf_26_ce0;
input  [31:0] C_buf_26_q0;
output  [8:0] C_buf_27_address0;
output   C_buf_27_ce0;
input  [31:0] C_buf_27_q0;
output  [8:0] C_buf_28_address0;
output   C_buf_28_ce0;
input  [31:0] C_buf_28_q0;
output  [8:0] C_buf_29_address0;
output   C_buf_29_ce0;
input  [31:0] C_buf_29_q0;
output  [8:0] C_buf_30_address0;
output   C_buf_30_ce0;
input  [31:0] C_buf_30_q0;

reg ap_idle;
reg m_axi_merlin_gmem_kernel_gemm_512_C_WVALID;
reg C_buf_ce0;
reg C_buf_16_ce0;
reg C_buf_17_ce0;
reg C_buf_18_ce0;
reg C_buf_19_ce0;
reg C_buf_20_ce0;
reg C_buf_21_ce0;
reg C_buf_22_ce0;
reg C_buf_23_ce0;
reg C_buf_24_ce0;
reg C_buf_25_ce0;
reg C_buf_26_ce0;
reg C_buf_27_ce0;
reg C_buf_28_ce0;
reg C_buf_29_ce0;
reg C_buf_30_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1845_fu_365_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    merlin_gmem_kernel_gemm_512_C_blk_n_W;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] buf_tmp_reg_660;
reg   [31:0] buf_tmp_8_reg_665;
reg   [31:0] buf_tmp_1_reg_670;
reg   [31:0] buf_tmp_9_reg_675;
reg   [31:0] buf_tmp_2_reg_680;
reg   [31:0] buf_tmp_10_reg_685;
reg   [31:0] buf_tmp_3_reg_690;
reg   [31:0] buf_tmp_11_reg_695;
reg   [31:0] buf_tmp_4_reg_700;
reg   [31:0] buf_tmp_12_reg_705;
reg   [31:0] buf_tmp_5_reg_710;
reg   [31:0] buf_tmp_13_reg_715;
reg   [31:0] buf_tmp_6_reg_720;
reg   [31:0] buf_tmp_14_reg_725;
reg   [31:0] buf_tmp_7_reg_730;
reg   [31:0] buf_tmp_15_reg_735;
wire   [63:0] zext_ln1870_fu_390_p1;
wire    ap_block_pp0_stage0_01001;
reg   [8:0] i_fu_94;
wire   [8:0] i_2_fu_371_p2;
wire    ap_loop_init;
reg   [63:0] index3_fu_98;
wire   [63:0] index3_3_fu_428_p3;
reg   [63:0] index2_fu_102;
wire   [63:0] index2_2_fu_436_p3;
wire   [6:0] trunc_ln1870_fu_353_p1;
wire   [8:0] tmp_fu_357_p3;
wire   [8:0] trunc_ln1845_fu_380_p1;
wire   [8:0] add_ln1870_fu_384_p2;
wire   [0:0] icmp_ln1875_fu_410_p2;
wire   [63:0] index3_2_fu_416_p2;
wire   [63:0] index2_1_fu_422_p2;
wire   [31:0] raw_bits_15_fu_510_p1;
wire   [31:0] raw_bits_14_fu_507_p1;
wire   [31:0] raw_bits_13_fu_504_p1;
wire   [31:0] raw_bits_12_fu_501_p1;
wire   [31:0] raw_bits_11_fu_498_p1;
wire   [31:0] raw_bits_10_fu_495_p1;
wire   [31:0] raw_bits_9_fu_492_p1;
wire   [31:0] raw_bits_8_fu_489_p1;
wire   [31:0] raw_bits_7_fu_486_p1;
wire   [31:0] raw_bits_6_fu_483_p1;
wire   [31:0] raw_bits_5_fu_480_p1;
wire   [31:0] raw_bits_4_fu_477_p1;
wire   [31:0] raw_bits_3_fu_474_p1;
wire   [31:0] raw_bits_2_fu_471_p1;
wire   [31:0] raw_bits_1_fu_468_p1;
wire   [31:0] raw_bits_fu_465_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 i_fu_94 = 9'd0;
#0 index3_fu_98 = 64'd0;
#0 index2_fu_102 = 64'd0;
#0 ap_done_reg = 1'b0;
end

kernel_gemm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_94 <= 9'd0;
        end else if (((icmp_ln1845_fu_365_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_94 <= i_2_fu_371_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            index2_fu_102 <= 64'd0;
        end else if (((icmp_ln1845_fu_365_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            index2_fu_102 <= index2_2_fu_436_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            index3_fu_98 <= 64'd0;
        end else if (((icmp_ln1845_fu_365_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            index3_fu_98 <= index3_3_fu_428_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        buf_tmp_10_reg_685 <= C_buf_25_q0;
        buf_tmp_11_reg_695 <= C_buf_26_q0;
        buf_tmp_12_reg_705 <= C_buf_27_q0;
        buf_tmp_13_reg_715 <= C_buf_28_q0;
        buf_tmp_14_reg_725 <= C_buf_29_q0;
        buf_tmp_15_reg_735 <= C_buf_30_q0;
        buf_tmp_1_reg_670 <= C_buf_16_q0;
        buf_tmp_2_reg_680 <= C_buf_17_q0;
        buf_tmp_3_reg_690 <= C_buf_18_q0;
        buf_tmp_4_reg_700 <= C_buf_19_q0;
        buf_tmp_5_reg_710 <= C_buf_20_q0;
        buf_tmp_6_reg_720 <= C_buf_21_q0;
        buf_tmp_7_reg_730 <= C_buf_22_q0;
        buf_tmp_8_reg_665 <= C_buf_23_q0;
        buf_tmp_9_reg_675 <= C_buf_24_q0;
        buf_tmp_reg_660 <= C_buf_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_16_ce0 = 1'b1;
    end else begin
        C_buf_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_17_ce0 = 1'b1;
    end else begin
        C_buf_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_18_ce0 = 1'b1;
    end else begin
        C_buf_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_19_ce0 = 1'b1;
    end else begin
        C_buf_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_20_ce0 = 1'b1;
    end else begin
        C_buf_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_21_ce0 = 1'b1;
    end else begin
        C_buf_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_22_ce0 = 1'b1;
    end else begin
        C_buf_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_23_ce0 = 1'b1;
    end else begin
        C_buf_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_24_ce0 = 1'b1;
    end else begin
        C_buf_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_25_ce0 = 1'b1;
    end else begin
        C_buf_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_26_ce0 = 1'b1;
    end else begin
        C_buf_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_27_ce0 = 1'b1;
    end else begin
        C_buf_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_28_ce0 = 1'b1;
    end else begin
        C_buf_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_29_ce0 = 1'b1;
    end else begin
        C_buf_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_30_ce0 = 1'b1;
    end else begin
        C_buf_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_buf_ce0 = 1'b1;
    end else begin
        C_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1845_fu_365_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m_axi_merlin_gmem_kernel_gemm_512_C_WVALID = 1'b1;
    end else begin
        m_axi_merlin_gmem_kernel_gemm_512_C_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        merlin_gmem_kernel_gemm_512_C_blk_n_W = m_axi_merlin_gmem_kernel_gemm_512_C_WREADY;
    end else begin
        merlin_gmem_kernel_gemm_512_C_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_buf_16_address0 = zext_ln1870_fu_390_p1;

assign C_buf_17_address0 = zext_ln1870_fu_390_p1;

assign C_buf_18_address0 = zext_ln1870_fu_390_p1;

assign C_buf_19_address0 = zext_ln1870_fu_390_p1;

assign C_buf_20_address0 = zext_ln1870_fu_390_p1;

assign C_buf_21_address0 = zext_ln1870_fu_390_p1;

assign C_buf_22_address0 = zext_ln1870_fu_390_p1;

assign C_buf_23_address0 = zext_ln1870_fu_390_p1;

assign C_buf_24_address0 = zext_ln1870_fu_390_p1;

assign C_buf_25_address0 = zext_ln1870_fu_390_p1;

assign C_buf_26_address0 = zext_ln1870_fu_390_p1;

assign C_buf_27_address0 = zext_ln1870_fu_390_p1;

assign C_buf_28_address0 = zext_ln1870_fu_390_p1;

assign C_buf_29_address0 = zext_ln1870_fu_390_p1;

assign C_buf_30_address0 = zext_ln1870_fu_390_p1;

assign C_buf_address0 = zext_ln1870_fu_390_p1;

assign add_ln1870_fu_384_p2 = (tmp_fu_357_p3 + trunc_ln1845_fu_380_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_merlin_gmem_kernel_gemm_512_C_WREADY == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_merlin_gmem_kernel_gemm_512_C_WREADY == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign i_2_fu_371_p2 = (i_fu_94 + 9'd1);

assign icmp_ln1845_fu_365_p2 = ((i_fu_94 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln1875_fu_410_p2 = ((index2_fu_102 == 64'd3) ? 1'b1 : 1'b0);

assign index2_1_fu_422_p2 = (index2_fu_102 + 64'd1);

assign index2_2_fu_436_p3 = ((icmp_ln1875_fu_410_p2[0:0] == 1'b1) ? 64'd0 : index2_1_fu_422_p2);

assign index3_2_fu_416_p2 = (index3_fu_98 + 64'd1);

assign index3_3_fu_428_p3 = ((icmp_ln1875_fu_410_p2[0:0] == 1'b1) ? index3_2_fu_416_p2 : index3_fu_98);

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARADDR = 64'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARBURST = 2'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARCACHE = 4'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARID = 1'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARLEN = 32'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARLOCK = 2'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARPROT = 3'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARQOS = 4'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARREGION = 4'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARSIZE = 3'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARUSER = 1'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_ARVALID = 1'b0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWADDR = 64'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWBURST = 2'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWCACHE = 4'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWID = 1'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWLEN = 32'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWLOCK = 2'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWPROT = 3'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWQOS = 4'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWREGION = 4'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWSIZE = 3'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWUSER = 1'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_AWVALID = 1'b0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_BREADY = 1'b0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_RREADY = 1'b0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_WDATA = {{{{{{{{{{{{{{{{raw_bits_15_fu_510_p1}, {raw_bits_14_fu_507_p1}}, {raw_bits_13_fu_504_p1}}, {raw_bits_12_fu_501_p1}}, {raw_bits_11_fu_498_p1}}, {raw_bits_10_fu_495_p1}}, {raw_bits_9_fu_492_p1}}, {raw_bits_8_fu_489_p1}}, {raw_bits_7_fu_486_p1}}, {raw_bits_6_fu_483_p1}}, {raw_bits_5_fu_480_p1}}, {raw_bits_4_fu_477_p1}}, {raw_bits_3_fu_474_p1}}, {raw_bits_2_fu_471_p1}}, {raw_bits_1_fu_468_p1}}, {raw_bits_fu_465_p1}};

assign m_axi_merlin_gmem_kernel_gemm_512_C_WID = 1'd0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_WLAST = 1'b0;

assign m_axi_merlin_gmem_kernel_gemm_512_C_WSTRB = 64'd18446744073709551615;

assign m_axi_merlin_gmem_kernel_gemm_512_C_WUSER = 1'd0;

assign raw_bits_10_fu_495_p1 = buf_tmp_10_reg_685;

assign raw_bits_11_fu_498_p1 = buf_tmp_11_reg_695;

assign raw_bits_12_fu_501_p1 = buf_tmp_12_reg_705;

assign raw_bits_13_fu_504_p1 = buf_tmp_13_reg_715;

assign raw_bits_14_fu_507_p1 = buf_tmp_14_reg_725;

assign raw_bits_15_fu_510_p1 = buf_tmp_15_reg_735;

assign raw_bits_1_fu_468_p1 = buf_tmp_1_reg_670;

assign raw_bits_2_fu_471_p1 = buf_tmp_2_reg_680;

assign raw_bits_3_fu_474_p1 = buf_tmp_3_reg_690;

assign raw_bits_4_fu_477_p1 = buf_tmp_4_reg_700;

assign raw_bits_5_fu_480_p1 = buf_tmp_5_reg_710;

assign raw_bits_6_fu_483_p1 = buf_tmp_6_reg_720;

assign raw_bits_7_fu_486_p1 = buf_tmp_7_reg_730;

assign raw_bits_8_fu_489_p1 = buf_tmp_8_reg_665;

assign raw_bits_9_fu_492_p1 = buf_tmp_9_reg_675;

assign raw_bits_fu_465_p1 = buf_tmp_reg_660;

assign tmp_fu_357_p3 = {{trunc_ln1870_fu_353_p1}, {2'd0}};

assign trunc_ln1845_fu_380_p1 = index2_fu_102[8:0];

assign trunc_ln1870_fu_353_p1 = index3_fu_98[6:0];

assign zext_ln1870_fu_390_p1 = add_ln1870_fu_384_p2;

endmodule //kernel_gemm_kernel_gemm_Pipeline_L3
