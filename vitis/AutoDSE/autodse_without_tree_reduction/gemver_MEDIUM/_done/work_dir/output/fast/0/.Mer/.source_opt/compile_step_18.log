debug mode
Warning: this is an empty file (no tokens found): not even a CR present! (but not an error using the token stream unparsing) 
[MARS-PARALLEL-MSG] Xilinx flow mode.
==============================================
-----=# Fine-grained Parallel Optimization Start#=----
==============================================
==============================================
-----=# Loop Parallel Xilinx Optimization Start#=----
==============================================
Merlin Pass [Dependency Resolve: Multiply Assign Reduce] started ... 
[DER ALGO][getPipelinedLoops]find a pipelined loop: SgForStatement:for(i = 0;i < 400;i++) {...}
[DER ALGO][getPipelinedLoops]find a pipelined loop: SgForStatement:for(i = 0;i < 400;i++) {...}
[DER ALGO][getPipelinedLoops]find a pipelined loop: SgForStatement:for(i = 0;i < 400;i++) {...}
[DER ALGO][getPipelinedLoops]find a pipelined loop: SgForStatement:for(j = 0;j < 400;j++) {...}
[MARS-PARALLEL-MSG] Xilinx flow mode.
===============================================
=========>  Memory Partition Optimization Start
Check existing HLS partition pragma...
variable: x_buf
found arr: x_buf
   Add HLS array partition pragma: HLS array_partition variable=x_buf cyclic factor = 16 dim=1
variable: A_buf
found arr: A_buf
   Add HLS array partition pragma: HLS array_partition variable=A_buf cyclic factor = 16 dim=2
variable: u1_6_0_buf
found arr: u1_6_0_buf
   Add HLS array partition pragma: HLS array_partition variable=u1_6_0_buf cyclic factor = 16 dim=1
variable: v1_6_0_buf
found arr: v1_6_0_buf
   Add HLS array partition pragma: HLS array_partition variable=v1_6_0_buf cyclic factor = 16 dim=1
variable: u2_6_0_buf
found arr: u2_6_0_buf
   Add HLS array partition pragma: HLS array_partition variable=u2_6_0_buf cyclic factor = 16 dim=1
variable: v2_6_0_buf
found arr: v2_6_0_buf
   Add HLS array partition pragma: HLS array_partition variable=v2_6_0_buf cyclic factor = 16 dim=1
variable: y_7_0_buf
found arr: y_7_0_buf
   Add HLS array partition pragma: HLS array_partition variable=y_7_0_buf cyclic factor = 16 dim=1
variable: z_4_0_buf
found arr: z_4_0_buf
   Add HLS array partition pragma: HLS array_partition variable=z_4_0_buf cyclic factor = 16 dim=1
variable: w_buf
found arr: w_buf
   Add HLS array partition pragma: HLS array_partition variable=w_buf cyclic factor = 16 dim=1
variable: w_buf
found arr: w_buf
   Add HLS array partition pragma: HLS array_partition variable=w_buf cyclic factor = 16 dim=1
variable: x_buf
found arr: x_buf
   Add HLS array partition pragma: HLS array_partition variable=x_buf cyclic factor = 16 dim=1
variable: A_buf
found arr: A_buf
   Add HLS array partition pragma: HLS array_partition variable=A_buf cyclic factor = 16 dim=2
CHECK HLS resource pragma
[print] Existing partition pragmas:
arr: z_4_0_buf
1
#pragma HLS array_partition variable=z_4_0_buf cyclic factor = 16 dim=1
arr: v2_6_0_buf
1
#pragma HLS array_partition variable=v2_6_0_buf cyclic factor = 16 dim=1
arr: u2_6_0_buf
1
#pragma HLS array_partition variable=u2_6_0_buf cyclic factor = 16 dim=1
arr: v1_6_0_buf
1
#pragma HLS array_partition variable=v1_6_0_buf cyclic factor = 16 dim=1
arr: u1_6_0_buf
1
#pragma HLS array_partition variable=u1_6_0_buf cyclic factor = 16 dim=1
arr: y_7_0_buf
1
#pragma HLS array_partition variable=y_7_0_buf cyclic factor = 16 dim=1
arr: w_buf
2
#pragma HLS array_partition variable=w_buf cyclic factor = 16 dim=1
#pragma HLS array_partition variable=w_buf cyclic factor = 16 dim=1
arr: A_buf
2
#pragma HLS array_partition variable=A_buf cyclic factor = 16 dim=2
#pragma HLS array_partition variable=A_buf cyclic factor = 16 dim=2
arr: x_buf
2
#pragma HLS array_partition variable=x_buf cyclic factor = 16 dim=1
#pragma HLS array_partition variable=x_buf cyclic factor = 16 dim=1


 ###### Partition analysis...


Partition analysis node...
Partition opt is: -2

==>Array: z_4_0_buf

 ==> choose dimension priority for variable: SgInitializedName:z_4_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: v2_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:v2_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: u2_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:u2_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: v1_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:v1_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: u1_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:u1_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: y_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:y_7_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: w_buf

 ==> choose dimension priority for variable: SgInitializedName:w_buf

 ==> parse access in dimension 0
priority: 104
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

==>Array: x_buf

 ==> choose dimension priority for variable: SgInitializedName:x_buf

 ==> parse access in dimension 0
priority: 104
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: -1

==>Array: v2_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:v2_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1 ==> complete partition 

==>Array: u2_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:u2_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: v1_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:v1_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1 ==> complete partition 

==>Array: u1_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:u1_6_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

 ==> parse access in dimension 0
priority: 104

 ==> parse access in dimension 1
priority: 104
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 400
         ==> dimension 2 ==> complete partition 


Partition analysis node...
Partition opt is: -2

==>Array: y_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:y_7_0_buf

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

==>Array: x_buf

 ==> choose dimension priority for variable: SgInitializedName:x_buf


Partition analysis node...
Partition opt is: -1

==>Array: z_4_0_buf

 ==> choose dimension priority for variable: SgInitializedName:z_4_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: x_buf

 ==> choose dimension priority for variable: SgInitializedName:x_buf

 ==> parse access in dimension 0
priority: 104
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: -1

==>Array: w_buf

 ==> choose dimension priority for variable: SgInitializedName:w_buf

 ==> parse access in dimension 0
priority: 104
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

 ==> parse access in dimension 0
priority: 102

 ==> parse access in dimension 1
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2 ==> complete partition 

==>Array: x_buf

 ==> choose dimension priority for variable: SgInitializedName:x_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1 ==> complete partition 


Partition analysis node...
Partition opt is: 0

==>Array: v2_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:v2_6_0_buf

 ==> parse access in dimension 0
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1 ==> complete partition 

==>Array: u2_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:u2_6_0_buf

 ==> parse access in dimension 0
priority: 101
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: v1_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:v1_6_0_buf

 ==> parse access in dimension 0
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1 ==> complete partition 

==>Array: u1_6_0_buf

 ==> choose dimension priority for variable: SgInitializedName:u1_6_0_buf

 ==> parse access in dimension 0
priority: 101
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

 ==> parse access in dimension 0
priority: 102

 ==> parse access in dimension 1
priority: 106
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 400
         ==> dimension 2 ==> complete partition 
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: -1

==>Array: y_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:y_7_0_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

 ==> parse access in dimension 0
priority: 102

 ==> parse access in dimension 1
priority: 101
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2==> factor partition factor: 1

==>Array: x_buf

 ==> choose dimension priority for variable: SgInitializedName:x_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: 0

==>Array: w_buf

 ==> choose dimension priority for variable: SgInitializedName:w_buf

 ==> parse access in dimension 0
priority: 102
[print ==>] Unroll the references:
 original refs: 2
[print ==>] Unroll the references, repeated refs: 1
         ==> dimension 1==> factor partition factor: 1

==>Array: A_buf

 ==> choose dimension priority for variable: SgInitializedName:A_buf

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2 ==> complete partition 
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
Hooray! Indices are different!! 
         ==> dimension 1==> factor partition factor: 1

==>Array: x_buf

 ==> choose dimension priority for variable: SgInitializedName:x_buf

 ==> parse access in dimension 0
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1 ==> complete partition 


 ######Partition merge...
Get partition table for z_4_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=z_4_0_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for v2_6_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=v2_6_0_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for u2_6_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=u2_6_0_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for v1_6_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=v1_6_0_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for u1_6_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=u1_6_0_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for y_7_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=y_7_0_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for w_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=w_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=w_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Get partition table for A_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=A_buf cyclic factor = 16 dim=2
[INFO] dim-1, factor-16
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=A_buf cyclic factor = 16 dim=2
[INFO] dim-1, factor-16
Get partition table for x_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=x_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=x_buf cyclic factor = 16 dim=1
[INFO] dim-0, factor-16
==> Array merge: SgInitializedName:z_4_0_buf
==> Array merge: SgInitializedName:v2_6_0_buf
Choose factors
dim-0, factor-0
dim-0, factor-0
dim-0, factor-16
dim-0, size-400, choose-0
==> Array merge: SgInitializedName:u2_6_0_buf
==> Array merge: SgInitializedName:v1_6_0_buf
Choose factors
dim-0, factor-0
dim-0, factor-0
dim-0, factor-16
dim-0, size-400, choose-0
==> Array merge: SgInitializedName:u1_6_0_buf
==> Array merge: SgInitializedName:y_7_0_buf
==> Array merge: SgInitializedName:w_buf
Choose factors
dim-0, factor-16
dim-0, factor-16
dim-0, size-400, choose-16
==> Array merge: SgInitializedName:A_buf
Choose factors
dim-1, factor-0
dim-1, factor-0
dim-1, factor-0
dim-1, factor-0
dim-1, factor-16
dim-1, factor-16
dim-1, size-400, choose-0
==> Array merge: SgInitializedName:x_buf
Choose factors
dim-0, factor-0
dim-0, factor-0
dim-0, factor-16
dim-0, factor-16
dim-0, size-400, choose-0
Check init: v2_6_0_buf
check  (0 , 0)
Check init: v1_6_0_buf
check  (0 , 0)
Check init: A_buf
check  (0 , 0)
Check init: v2_6_0_buf
check  (0 , 0)
Check init: v1_6_0_buf
check  (0 , 0)
Check init: A_buf
check  (0 , 0)
Check init: A_buf
check  (0 , 0)
Check init: x_buf
check  (0 , 0)
Check init: A_buf
check  (0 , 0)
Check init: x_buf
check  (0 , 0)


 ######Partition transform...
[pragma gen] HLS array_partition variable=z_4_0_buf cyclic factor=16 dim=1
[pragma gen] HLS array_partition variable=v2_6_0_buf complete dim=1
[pragma gen] HLS array_partition variable=u2_6_0_buf cyclic factor=16 dim=1
[pragma gen] HLS array_partition variable=v1_6_0_buf complete dim=1
[pragma gen] HLS array_partition variable=u1_6_0_buf cyclic factor=16 dim=1
[pragma gen] HLS array_partition variable=y_7_0_buf cyclic factor=16 dim=1
[pragma gen] HLS array_partition variable=w_buf cyclic factor=16 dim=1
[pragma gen] HLS array_partition variable=A_buf complete dim=2
[pragma gen] HLS array_partition variable=x_buf complete dim=1
INFO: [FGPIP-101] Partitioning array 'z_4_0_buf' on dimension 1 with factor 16


INFO: [FGPIP-101] Partitioning array 'v2_6_0_buf' on dimension 1 completely


INFO: [FGPIP-101] Partitioning array 'u2_6_0_buf' on dimension 1 with factor 16


INFO: [FGPIP-101] Partitioning array 'v1_6_0_buf' on dimension 1 completely


INFO: [FGPIP-101] Partitioning array 'u1_6_0_buf' on dimension 1 with factor 16


INFO: [FGPIP-101] Partitioning array 'y_7_0_buf' on dimension 1 with factor 16


INFO: [FGPIP-101] Partitioning array 'w_buf' on dimension 1 with factor 16


INFO: [FGPIP-101] Partitioning array 'A_buf' on dimension 2 completely


INFO: [FGPIP-101] Partitioning array 'x_buf' on dimension 1 completely


==============================================
============================================
============================================

==> INSERT PIPELINE ANALYSIS
Check: SgInitializedName:v2_6_0_buf
outside can be flatten
Check: SgInitializedName:u2_6_0_buf
outside can be flatten
Check: SgInitializedName:v1_6_0_buf
outside can be flatten
Check: SgInitializedName:u1_6_0_buf
outside can be flatten
Check: SgInitializedName:A_buf
outside can be flatten
[MARS-PARALLEL-CODEGEN] no loop-carried dependency on Array 'A_buf'

==> INSERT PARALLEL ANALYSIS

==> INSERT PIPELINE ANALYSIS
Check: SgInitializedName:y_7_0_buf
outside can be flatten
Check: SgInitializedName:A_buf
outside can be flatten
Check: SgInitializedName:x_buf
dep on loop SgForStatement:for(j = 0;j < 400;j++) {...}

==> INSERT PIPELINE ANALYSIS
Check: SgInitializedName:z_4_0_buf
outside can be flatten
Check: SgInitializedName:x_buf
outside can be flatten
[MARS-PARALLEL-CODEGEN] no loop-carried dependency on Array 'x_buf'

==> INSERT PIPELINE ANALYSIS
Check: SgInitializedName:w_buf
outside can be flatten
[MARS-PARALLEL-CODEGEN] no loop-carried dependency on Array 'w_buf'
Check: SgInitializedName:A_buf
outside can be flatten
Check: SgInitializedName:x_buf
outside can be flatten

==> INSERT PARALLEL ANALYSIS
============================================
============================================

-----=# Loop Parallel Optimization End#=----
============================================

Check false dependency pragma for Xilinx flow
====>  index transform: 
SgForStatement:for(i = 0;i < 400;i++) {...}
====>  index transform: 
SgForStatement:for(j = 0;j < 400;j++) {...}
====>  index transform: 
SgForStatement:for(j = 0;j < 400;j++) {...}
====>  index transform: 
SgForStatement:for(i = 0;i < 400;i++) {...}
====>  index transform: 
SgForStatement:for(i = 0;i < 400;i++) {...}
====>  index transform: 
SgForStatement:for(j = 0;j < 400;j++) {...}
mars_opt __dummy__.c __merlinwrapper_kernel_gemver.c __merlinkernel_kernel_gemver.c  -e c -p loop_parallel -a cstd=c99 -a cxxstd=c++11   -a impl_tool=sdaccel -a tool_version=vitis -a effort=standard -a generate_l2_api=on -a debug_mode=debug   -I /opt/merlin/sources/merlin-compiler/trunk/source-opt/include/apint_include -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemver_MEDIUM/_done/work_dir/output/fast/0 -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemver_MEDIUM/_done/work_dir/output/fast/0/gemver_MEDIUM/ -I/opt/merlin/sources/merlin-compiler/trunk//mars-gen/lib/merlin -I /opt/merlin/sources/merlin-compiler/trunk/mars-gen/lib/merlin -a cflags=" -D__SYNTHESIS__  -D_MARS_COMPILER_FLOW_ "
