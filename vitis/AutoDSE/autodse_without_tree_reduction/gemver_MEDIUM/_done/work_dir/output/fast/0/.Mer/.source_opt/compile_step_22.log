debug mode
Warning: this is an empty file (no tokens found): not even a CR present! (but not an error using the token stream unparsing) 
Enter final code gen...
tool version = vitis
---------------------
-----STREAMING_UPDATE
---------------------
----------------------------
-----FINISH STREAMING_UPDATE
----------------------------
    Enter getKernelMap...
    Enter data parser...
-- Kernel: SgFunctionDeclaration:void kernel_gemver(float alpha,float beta,merlin_uint_512 [100... A,merlin_uint_512 [25] u1,merlin_uint_512 [25] v1,merlin_uint_512 [25] u2,merlin_uint_512 [25] v2,merlin_uint_512 [25] w,merlin_uint_512 [25] x,merlin_uint_512 [25] y,merlin_uint_512 [25] z) {...}
-- Kernel call: SgFunctionCallExp:kernel_gemver(alpha,beta,__m_A,__m_u1,__m_v1,__m_u2,__m_v2,__m_w,__m_x,__m_y,__m_z)
-- Kernel pragma: SgPragmaDeclaration:#pragma ACCEL kernel
-- Port: SgFunctionDeclaration:void kernel_gemver(float alpha,float beta,merlin_uint_512 [100... A,merlin_uint_512 [25] u1,merlin_uint_512 [25] v1,merlin_uint_512 [25] u2,merlin_uint_512 [25] v2,merlin_uint_512 [25] w,merlin_uint_512 [25] x,merlin_uint_512 [25] y,merlin_uint_512 [25] z) {...}

 ************* 
Data Parser Output (Kernels):
--kernel (kernel_gemver): device=fpga return_type=void 

 ************* 
Data Parser Output (Ports):
--kernel (kernel_gemver): 
  port (A): VARIABLE=A actual_name=A bank=nullptr bitwidth=512 data_size_in_byte=4*400*400 data_type=struct merlin_uint_512 depth=400,400 formal_name=A io=RW max_depth=400,400 org_bitwidth=32 org_name=A orig_data_type=float port_idx=2 port_type=array read_length=10000 read_offset=0 read_valid=1 volatile=no write_length=10000 write_offset=0 write_valid=1 
  port (alpha): actual_name=alpha data_type=float formal_name=alpha org_name=alpha orig_data_type=float port_idx=0 port_type=scalar volatile=no 
  port (beta): actual_name=beta data_type=float formal_name=beta org_name=beta orig_data_type=float port_idx=1 port_type=scalar volatile=no 
  port (u1): VARIABLE=u1 actual_name=u1 bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=u1 io=RO max_depth=400 org_bitwidth=32 org_name=u1 orig_data_type=float port_idx=3 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (u2): VARIABLE=u2 actual_name=u2 bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=u2 io=RO max_depth=400 org_bitwidth=32 org_name=u2 orig_data_type=float port_idx=5 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (v1): VARIABLE=v1 actual_name=v1 bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=v1 io=RO max_depth=400 org_bitwidth=32 org_name=v1 orig_data_type=float port_idx=4 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (v2): VARIABLE=v2 actual_name=v2 bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=v2 io=RO max_depth=400 org_bitwidth=32 org_name=v2 orig_data_type=float port_idx=6 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (w): VARIABLE=w actual_name=w bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=w io=RW max_depth=400 org_bitwidth=32 org_name=w orig_data_type=float port_idx=7 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_length=25 write_offset=0 write_valid=1 
  port (x): VARIABLE=x actual_name=x bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=x io=RW max_depth=400 org_bitwidth=32 org_name=x orig_data_type=float port_idx=8 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_length=25 write_offset=0 write_valid=1 
  port (y): VARIABLE=y actual_name=y bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=y io=RO max_depth=400 org_bitwidth=32 org_name=y orig_data_type=float port_idx=9 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (z): VARIABLE=z actual_name=z bank=nullptr bitwidth=512 data_size_in_byte=4*400 data_type=struct merlin_uint_512 depth=400 formal_name=z io=RO max_depth=400 org_bitwidth=32 org_name=z orig_data_type=float port_idx=10 port_type=array read_length=25 read_offset=0 read_valid=1 volatile=no write_valid=0 

    Enter post process...
[MARS-PARALLEL-MSG] Enable xilinx flow mode.
    Enter set_unique_function_name_top...
    Legalizing_kernel_name from : kernel_gemver to kernel_gemver
checking func_name: kernel_gemver
checking func_name: memcpy_wide_bus_read_float_512
checking func_name: merlin_get_range_512
checking func_name: memcpy_wide_bus_read_float_2d_400_512
checking func_name: memcpy_wide_bus_write_float_512
checking func_name: merlin_set_range_512
checking func_name: memcpy_wide_bus_write_float_2d_400_512
Enter replace memcpy with for loop in function
    Enter shorten_function_name_top...
		Enter check_and_short_function_name
Enter adding loop label
Data transfer generation for OpenCL
    Enter opencl code generation...
    Enter merlin parameter head generation...
    Enter merlin kernel buffer head generation...
one kernel = void kernel_gemver(float alpha,float beta,merlin_uint_512 [100... A,merlin_uint_512 [25] u1,merlin_uint_512 [25] v1,merlin_uint_512 [25] u2,merlin_uint_512 [25] v2,merlin_uint_512 [25] w,merlin_uint_512 [25] x,merlin_uint_512 [25] y,merlin_uint_512 [25] z) {...}
    Enter merlin kernel buffer file generation...
    Legalizing_kernel_name from : kernel_gemver to kernel_gemver
    Enter merlin wrapper generation...
    Enter merlin task generation...
    Enter insert hls interface pragma...
bundle for A is merlin_gmem_kernel_gemver_512_A
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemver_512_0
bundle for u1 is merlin_gmem_kernel_gemver_512_0
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemver_512_1
bundle for u2 is merlin_gmem_kernel_gemver_512_1
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemver_512_2
bundle for v1 is merlin_gmem_kernel_gemver_512_2
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemver_512_3
bundle for v2 is merlin_gmem_kernel_gemver_512_3
bundle for w is merlin_gmem_kernel_gemver_512_w
bundle for x is merlin_gmem_kernel_gemver_512_x
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemver_512_4
bundle for y is merlin_gmem_kernel_gemver_512_4
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemver_512_5
bundle for z is merlin_gmem_kernel_gemver_512_5
Enter generate_kernel_file_list.
    Legalizing_kernel_name from : kernel_gemver to kernel_gemver
    Legalizing_kernel_name from : kernel_gemver to kernel_gemver
    legalizing kernel...
    Legalizing_kernel_name from : kernel_gemver to kernel_gemver
mars_opt __dummy__.c __merlinwrapper_kernel_gemver.c __merlinkernel_kernel_gemver.c  -e c -p final_code_gen -a cstd=c99 -a cxxstd=c++11 -a impl_tool=sdaccel -a mode=opencl -a naive= -a effort=standard -a volatile_flag= -a tool_version=vitis -a explicit_bundle= -a extern_c= -a pcie_transfer_opt= -a pure_kernel=off -a debug_mode=debug   -I /opt/merlin/sources/merlin-compiler/trunk/source-opt/include/apint_include -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemver_MEDIUM/_done/work_dir/output/fast/0 -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemver_MEDIUM/_done/work_dir/output/fast/0/gemver_MEDIUM/ -I/opt/merlin/sources/merlin-compiler/trunk//mars-gen/lib/merlin -I /opt/merlin/sources/merlin-compiler/trunk/mars-gen/lib/merlin -a cflags=" -D__SYNTHESIS__  -D_MARS_COMPILER_FLOW_ "
