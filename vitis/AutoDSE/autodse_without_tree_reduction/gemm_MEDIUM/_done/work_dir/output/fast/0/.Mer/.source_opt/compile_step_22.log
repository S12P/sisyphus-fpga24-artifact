debug mode
Warning: this is an empty file (no tokens found): not even a CR present! (but not an error using the token stream unparsing) 
Enter final code gen...
tool version = vitis
---------------------
-----STREAMING_UPDATE
---------------------
----------------------------
-----FINISH STREAMING_UPDATE
----------------------------
    Enter getKernelMap...
    Enter data parser...
-- Kernel: SgFunctionDeclaration:void kernel_gemm(float alpha,float beta,merlin_uint_128 [110... C,merlin_uint_512 [300... A,merlin_uint_128 [132... B) {...}
-- Kernel call: SgFunctionCallExp:kernel_gemm(alpha,beta,__m_C,__m_A,__m_B)
-- Kernel pragma: SgPragmaDeclaration:#pragma ACCEL kernel
-- Port: SgFunctionDeclaration:void kernel_gemm(float alpha,float beta,merlin_uint_128 [110... C,merlin_uint_512 [300... A,merlin_uint_128 [132... B) {...}
Unrecognized access bounds for variable 'SgInitializedName:C' because of containing variable in scope :
SgBasicBlock:{#pragma HLS DATA_PACK VARIABLE=B#pragma HLS DATA_PACK VARIABLE=A#pragma HLS DATA_PACK VARIABLE=C#pragma ACCEL interface variable=B depth=240,220 max_depth=240,220#pragma ACCEL interface variable=A depth=200,240 max_depth=200,240#pragma ACCEL interface variable=C depth=200,220 max_depth=200,220__merlin_access_range(B,0,52799);__merlin_access_range(A,0,47999);__merlin_access_range(C,0,43999);int i;int j;int k;{float B_7_0_buf[240][220];#pragma HLS array_partition variable=B_7_0_buf complete dim=2float A_7_0_buf[40][5][240];#pragma HLS array_partition variable=A_7_0_buf cyclic factor=16 dim=3{memcpy_wide_bus_read_float_3d_5_240_512(A_7_0_buf,0,0,0,(merlin_uint_512 *)A,(0 * 4),sizeof(float ) *((unsigned long )48000L),48000L);}{memcpy_wide_bus_read_float_2d_220_128(B_7_0_buf,0,0,(merlin_uint_128 *)B,(0 * 4),sizeof(float ) *((unsigned long )52800L),52800L);}float C_buf_0[5][220];int mars_count_0_1 = 0;float mars_kernel_0_1_C_buf_0_0[5][220];#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 complete dim=2float mars_kernel_0_1_C_buf_0_1[5][220];#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 complete dim=2float mars_kernel_0_1_C_buf_0_2[5][220];#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 complete dim=2for(i = 0;i < 40 + 2;i++) {if(mars_count_0_1 == 0) mars_kernel_0_1(i,0,39,A_7_0_buf,B_7_0_buf,C,mars_kernel_0_1_C_buf_0_0,mars_kernel_0_1_C_buf_0_1,mars_kernel_0_1_C_buf_0_2,alpha,beta);else if(mars_count_0_1 == 1) mars_kernel_0_1(i,0,39,A_7_0_buf,B_7_0_buf,C,mars_kernel_0_1_C_buf_0_2,mars_kernel_0_1_C_buf_0_0,mars_kernel_0_1_C_buf_0_1,alpha,beta);else mars_kernel_0_1(i,0,39,A_7_0_buf,B_7_0_buf,C,mars_kernel_0_1_C_buf_0_1,mars_kernel_0_1_C_buf_0_2,mars_kernel_0_1_C_buf_0_0,alpha,beta);mars_count_0_1++;if(mars_count_0_1 == 3) mars_count_0_1 = 0;}}}
range : 
((size_t )(((long )i) * 1100L *((long )4))) / 16L..18446744073709551615UL +(4415UL +((size_t )(((long )i) * 1100L *((long )4)))) / 16L inexact
Unrecognized access bounds for variable 'SgInitializedName:C' because of containing variable in scope :
SgBasicBlock:{#pragma HLS DATA_PACK VARIABLE=B#pragma HLS DATA_PACK VARIABLE=A#pragma HLS DATA_PACK VARIABLE=C#pragma ACCEL interface variable=B depth=240,220 max_depth=240,220#pragma ACCEL interface variable=A depth=200,240 max_depth=200,240#pragma ACCEL interface variable=C depth=200,220 max_depth=200,220__merlin_access_range(B,0,52799);__merlin_access_range(A,0,47999);__merlin_access_range(C,0,43999);int i;int j;int k;{float B_7_0_buf[240][220];#pragma HLS array_partition variable=B_7_0_buf complete dim=2float A_7_0_buf[40][5][240];#pragma HLS array_partition variable=A_7_0_buf cyclic factor=16 dim=3{memcpy_wide_bus_read_float_3d_5_240_512(A_7_0_buf,0,0,0,(merlin_uint_512 *)A,(0 * 4),sizeof(float ) *((unsigned long )48000L),48000L);}{memcpy_wide_bus_read_float_2d_220_128(B_7_0_buf,0,0,(merlin_uint_128 *)B,(0 * 4),sizeof(float ) *((unsigned long )52800L),52800L);}float C_buf_0[5][220];int mars_count_0_1 = 0;float mars_kernel_0_1_C_buf_0_0[5][220];#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 complete dim=2float mars_kernel_0_1_C_buf_0_1[5][220];#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 complete dim=2float mars_kernel_0_1_C_buf_0_2[5][220];#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 complete dim=2for(i = 0;i < 40 + 2;i++) {if(mars_count_0_1 == 0) mars_kernel_0_1(i,0,39,A_7_0_buf,B_7_0_buf,C,mars_kernel_0_1_C_buf_0_0,mars_kernel_0_1_C_buf_0_1,mars_kernel_0_1_C_buf_0_2,alpha,beta);else if(mars_count_0_1 == 1) mars_kernel_0_1(i,0,39,A_7_0_buf,B_7_0_buf,C,mars_kernel_0_1_C_buf_0_2,mars_kernel_0_1_C_buf_0_0,mars_kernel_0_1_C_buf_0_1,alpha,beta);else mars_kernel_0_1(i,0,39,A_7_0_buf,B_7_0_buf,C,mars_kernel_0_1_C_buf_0_1,mars_kernel_0_1_C_buf_0_2,mars_kernel_0_1_C_buf_0_0,alpha,beta);mars_count_0_1++;if(mars_count_0_1 == 3) mars_count_0_1 = 0;}}}
range : 
((size_t )(((long )4) *(((long )i) * 1100L))) / 16L..18446744073709551615UL +(4415UL +((size_t )(((long )4) *(((long )i) * 1100L)))) / 16L inexact

WARNING: [PROCS-201] Finding a possible out-of-bound access: 
  range=[0..43999] task=kernel_gemm argument=C



WARNING: [PROCS-201] Finding a possible out-of-bound access: 
  range=[0..43999] task=kernel_gemm argument=C



 ************* 
Data Parser Output (Kernels):
--kernel (kernel_gemm): device=fpga return_type=void 

 ************* 
Data Parser Output (Ports):
--kernel (kernel_gemm): 
  port (A): VARIABLE=A actual_name=A bank=nullptr bitwidth=512 data_size_in_byte=4*200*240 data_type=struct merlin_uint_512 depth=200,240 formal_name=A io=RW max_depth=200,240 org_bitwidth=32 org_name=A orig_data_type=float port_idx=3 port_type=array read_length=3000 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (B): VARIABLE=B actual_name=B bank=nullptr bitwidth=128 data_size_in_byte=4*240*220 data_type=struct merlin_uint_128 depth=240,220 formal_name=B io=RW max_depth=240,220 org_bitwidth=32 org_name=B orig_data_type=float port_idx=4 port_type=array read_length=13200 read_offset=0 read_valid=1 volatile=no write_valid=0 
  port (C): VARIABLE=C actual_name=C bank=nullptr bitwidth=128 data_size_in_byte=4*200*220 data_type=struct merlin_uint_128 depth=200,220 formal_name=C io=RW max_depth=200,220 org_bitwidth=32 org_name=C orig_data_type=float port_idx=2 port_type=array read_length=44000 read_offset=0 read_valid=1 volatile=no write_length=44000 write_offset=0 write_valid=1 
  port (alpha): actual_name=alpha data_type=float formal_name=alpha org_name=alpha orig_data_type=float port_idx=0 port_type=scalar volatile=no 
  port (beta): actual_name=beta data_type=float formal_name=beta org_name=beta orig_data_type=float port_idx=1 port_type=scalar volatile=no 

    Enter post process...
[MARS-PARALLEL-MSG] Enable xilinx flow mode.
    Enter set_unique_function_name_top...
    Legalizing_kernel_name from : kernel_gemm to kernel_gemm
checking func_name: kernel_gemm
checking func_name: memcpy_wide_bus_read_float_3d_5_240_512
checking func_name: merlin_get_range_512
checking func_name: memcpy_wide_bus_read_float_2d_220_128
checking func_name: merlin_get_range_128
checking func_name: mars_kernel_0_1
checking func_name: mars_kernel_0_1_bus
checking func_name: mars_kernel_0_1_node_0_stage_0
checking func_name: mars_kernel_0_1_node_1_stage_1
checking func_name: mars_kernel_0_1_node_2_stage_2
checking func_name: memcpy_wide_bus_write_float_2d_220_128
checking func_name: merlin_set_range_128
checking func_name: mars_kernel_0_1_comp
Enter replace memcpy with for loop in function
    Enter shorten_function_name_top...
		Enter check_and_short_function_name
Enter adding loop label
Data transfer generation for OpenCL
    Enter opencl code generation...
    Enter merlin parameter head generation...
    Enter merlin kernel buffer head generation...
one kernel = void kernel_gemm(float alpha,float beta,merlin_uint_128 [110... C,merlin_uint_512 [300... A,merlin_uint_128 [132... B) {...}
    Enter merlin kernel buffer file generation...
    Legalizing_kernel_name from : kernel_gemm to kernel_gemm
    Enter merlin wrapper generation...
    Enter merlin task generation...
    Enter insert hls interface pragma...
rw = 0, bitwidth = 512, name = merlin_gmem_kernel_gemm_512_0
bundle for A is merlin_gmem_kernel_gemm_512_0
rw = 0, bitwidth = 128, name = merlin_gmem_kernel_gemm_128_0
bundle for B is merlin_gmem_kernel_gemm_128_0
bundle for C is merlin_gmem_kernel_gemm_128_C
Enter generate_kernel_file_list.
    Legalizing_kernel_name from : kernel_gemm to kernel_gemm
    Legalizing_kernel_name from : kernel_gemm to kernel_gemm
    legalizing kernel...
    Legalizing_kernel_name from : kernel_gemm to kernel_gemm
mars_opt __dummy__.c __merlinwrapper_kernel_gemm.c __merlinkernel_kernel_gemm.c  -e c -p final_code_gen -a cstd=c99 -a cxxstd=c++11 -a impl_tool=sdaccel -a mode=opencl -a naive= -a effort=standard -a volatile_flag= -a tool_version=vitis -a explicit_bundle= -a extern_c= -a pcie_transfer_opt= -a pure_kernel=off -a debug_mode=debug   -I /opt/merlin/sources/merlin-compiler/trunk/source-opt/include/apint_include -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemm_MEDIUM/_done/work_dir/output/fast/0 -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemm_MEDIUM/_done/work_dir/output/fast/0/gemm_MEDIUM/ -I/opt/merlin/sources/merlin-compiler/trunk//mars-gen/lib/merlin -I /opt/merlin/sources/merlin-compiler/trunk/mars-gen/lib/merlin -a cflags=" -D__SYNTHESIS__  -D_MARS_COMPILER_FLOW_ "
