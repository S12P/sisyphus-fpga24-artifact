debug mode
Warning: this is an empty file (no tokens found): not even a CR present! (but not an error using the token stream unparsing) 
[MARS-PARALLEL-MSG] Xilinx flow mode.
==============================================
-----=# Fine-grained Parallel Optimization Start#=----
==============================================
==============================================
-----=# Loop Parallel Xilinx Optimization Start#=----
==============================================
Merlin Pass [Dependency Resolve: Multiply Assign Reduce] started ... 
[DER ALGO][getPipelinedLoops]find a pipelined loop: SgForStatement:for(j = 0;j < 55;j++) {...}
[DER ALGO][getPipelinedLoops]find a pipelined loop: SgForStatement:for(k = 0;k < 240;k++) {...}
[MARS-PARALLEL-MSG] Xilinx flow mode.
===============================================
=========>  Memory Partition Optimization Start
Check existing HLS partition pragma...
variable: A_7_0_buf
found arr: A_7_0_buf
   Add HLS array partition pragma: HLS array_partition variable=A_7_0_buf cyclic factor = 16 dim=3
variable: B_7_0_buf
found arr: B_7_0_buf
   Add HLS array partition pragma: HLS array_partition variable=B_7_0_buf cyclic factor = 4 dim=2
variable: mars_kernel_0_1_C_buf_0_0
found arr: mars_kernel_0_1_C_buf_0_0
   Add HLS array partition pragma: HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 cyclic factor=4 dim=2
variable: mars_kernel_0_1_C_buf_0_0
found arr: mars_kernel_0_1_C_buf_0_0
   Add HLS array partition pragma: HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 cyclic factor=4 dim=2
variable: mars_kernel_0_1_C_buf_0_1
found arr: mars_kernel_0_1_C_buf_0_1
   Add HLS array partition pragma: HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 cyclic factor=4 dim=2
variable: mars_kernel_0_1_C_buf_0_1
found arr: mars_kernel_0_1_C_buf_0_1
   Add HLS array partition pragma: HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 cyclic factor=4 dim=2
variable: mars_kernel_0_1_C_buf_0_2
found arr: mars_kernel_0_1_C_buf_0_2
   Add HLS array partition pragma: HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 cyclic factor=4 dim=2
variable: mars_kernel_0_1_C_buf_0_2
found arr: mars_kernel_0_1_C_buf_0_2
   Add HLS array partition pragma: HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 cyclic factor=4 dim=2
CHECK HLS resource pragma
[print] Existing partition pragmas:
arr: B_7_0_buf
1
#pragma HLS array_partition variable=B_7_0_buf cyclic factor = 4 dim=2
arr: A_7_0_buf
1
#pragma HLS array_partition variable=A_7_0_buf cyclic factor = 16 dim=3
arr: mars_kernel_0_1_C_buf_0_0
2
#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 cyclic factor=4 dim=2
#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 cyclic factor=4 dim=2
arr: mars_kernel_0_1_C_buf_0_1
2
#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 cyclic factor=4 dim=2
#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 cyclic factor=4 dim=2
arr: mars_kernel_0_1_C_buf_0_2
2
#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 cyclic factor=4 dim=2
#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 cyclic factor=4 dim=2


 ###### Partition analysis...


Partition analysis node...
Partition opt is: -2

==>Array: B_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:B_7_0_buf

==>Array: A_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:A_7_0_buf

==>Array: mars_kernel_0_1_C_buf_0_0

 ==> choose dimension priority for variable: SgInitializedName:mars_kernel_0_1_C_buf_0_0

==>Array: mars_kernel_0_1_C_buf_0_1

 ==> choose dimension priority for variable: SgInitializedName:mars_kernel_0_1_C_buf_0_1

==>Array: mars_kernel_0_1_C_buf_0_2

 ==> choose dimension priority for variable: SgInitializedName:mars_kernel_0_1_C_buf_0_2


Partition analysis node...
Partition opt is: -2

==>Array: B_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:B_7_0_buf

==>Array: A_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:A_7_0_buf

==>Array: mars_kernel_0_1_C_buf_0_0

 ==> choose dimension priority for variable: SgInitializedName:mars_kernel_0_1_C_buf_0_0

==>Array: mars_kernel_0_1_C_buf_0_1

 ==> choose dimension priority for variable: SgInitializedName:mars_kernel_0_1_C_buf_0_1

==>Array: mars_kernel_0_1_C_buf_0_2

 ==> choose dimension priority for variable: SgInitializedName:mars_kernel_0_1_C_buf_0_2


Partition analysis node...
Partition opt is: -2

==>Array: mars_A_7_0_buf_1

 ==> choose dimension priority for variable: SgInitializedName:mars_A_7_0_buf_1

==>Array: mars_B_7_0_buf_1

 ==> choose dimension priority for variable: SgInitializedName:mars_B_7_0_buf_1

==>Array: mars_C_buf_0_0

 ==> choose dimension priority for variable: SgInitializedName:mars_C_buf_0_0

==>Array: mars_C_buf_0_1

 ==> choose dimension priority for variable: SgInitializedName:mars_C_buf_0_1

==>Array: mars_C_buf_0_2

 ==> choose dimension priority for variable: SgInitializedName:mars_C_buf_0_2


Partition analysis node...
Partition opt is: -2

==>Array: mars_A_7_0_buf_1

 ==> choose dimension priority for variable: SgInitializedName:mars_A_7_0_buf_1

==>Array: mars_B_7_0_buf_1

 ==> choose dimension priority for variable: SgInitializedName:mars_B_7_0_buf_1

==>Array: mars_C_buf_0_0

 ==> choose dimension priority for variable: SgInitializedName:mars_C_buf_0_0

==>Array: mars_C_buf_0_1

 ==> choose dimension priority for variable: SgInitializedName:mars_C_buf_0_1

==>Array: mars_C_buf_0_2

 ==> choose dimension priority for variable: SgInitializedName:mars_C_buf_0_2


Partition analysis node...
Partition opt is: -2


Partition analysis node...
Partition opt is: -2

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0


Partition analysis node...
Partition opt is: -2

==>Array: A_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:A_7_0_buf

==>Array: B_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:B_7_0_buf

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0


Partition analysis node...
Partition opt is: -2

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0


Partition analysis node...
Partition opt is: -2

==>Array: A_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:A_7_0_buf

==>Array: B_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:B_7_0_buf

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0


Partition analysis node...
Partition opt is: -1

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
bank : 4 for dimension size 220
[PARTITION-ANALYSIS] Bank = 4 success for non-conflict partitioning
         ==> dimension 2==> partition factor: 4
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
Hooray! Indices are different!! 
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: -1

==>Array: A_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:A_7_0_buf

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 101

 ==> parse access in dimension 2
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 3==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2==> factor partition factor: 1

==>Array: B_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:B_7_0_buf

 ==> parse access in dimension 0
priority: 102

 ==> parse access in dimension 1
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2 ==> complete partition 

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 102
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2 ==> complete partition 
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
Hooray! Indices are different!! 
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: 0

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
bank : 4 for dimension size 220
[PARTITION-ANALYSIS] Bank = 4 success for non-conflict partitioning
         ==> dimension 2==> partition factor: 4
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
Hooray! Indices are different!! 
         ==> dimension 1==> factor partition factor: 1


Partition analysis node...
Partition opt is: 0

==>Array: A_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:A_7_0_buf

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 101

 ==> parse access in dimension 2
priority: 101
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 1==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2==> factor partition factor: 1
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 3==> factor partition factor: 1

==>Array: B_7_0_buf

 ==> choose dimension priority for variable: SgInitializedName:B_7_0_buf

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2 ==> complete partition 
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
Hooray! Indices are different!! 
         ==> dimension 1==> factor partition factor: 1

==>Array: C_buf_0

 ==> choose dimension priority for variable: SgInitializedName:C_buf_0

 ==> parse access in dimension 0
priority: 101

 ==> parse access in dimension 1
priority: 103
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
         ==> dimension 2 ==> complete partition 
[print ==>] Unroll the references:
 original refs: 1
[print ==>] Unroll the references, repeated refs: 0
Hooray! Indices are different!! 
         ==> dimension 1==> factor partition factor: 1


 ######Partition merge...
Get partition table for B_7_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=B_7_0_buf cyclic factor = 4 dim=2
[INFO] dim-1, factor-4
Get partition table for A_7_0_buf
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=A_7_0_buf cyclic factor = 16 dim=3
[INFO] dim-2, factor-16
Get partition table for mars_kernel_0_1_C_buf_0_0
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 cyclic factor=4 dim=2
[INFO] dim-1, factor-4
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 cyclic factor=4 dim=2
[INFO] dim-1, factor-4
Get partition table for mars_kernel_0_1_C_buf_0_1
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 cyclic factor=4 dim=2
[INFO] dim-1, factor-4
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 cyclic factor=4 dim=2
[INFO] dim-1, factor-4
Get partition table for mars_kernel_0_1_C_buf_0_2
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 cyclic factor=4 dim=2
[INFO] dim-1, factor-4
Pragma extract: SgPragmaDeclaration:#pragma HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 cyclic factor=4 dim=2
[INFO] dim-1, factor-4
Pass factors from B_7_0_buf to B_7_0_buf
Pass factors from C_buf_0 to mars_kernel_0_1_C_buf_0_0
Pass factors from C_buf_0 to mars_kernel_0_1_C_buf_0_1
Pass factors from C_buf_0 to mars_kernel_0_1_C_buf_0_2
Erase: B_7_0_buf
Erase: C_buf_0
==> Array merge: SgInitializedName:B_7_0_buf
Choose factors
dim-1, factor-4
dim-1, factor-0
dim-1, factor-0
dim-1, size-220, choose-0
==> Array merge: SgInitializedName:A_7_0_buf
==> Array merge: SgInitializedName:mars_kernel_0_1_C_buf_0_0
Choose factors
dim-1, factor-4
dim-1, factor-4
dim-1, factor-4
dim-1, factor-4
dim-1, factor-0
dim-1, factor-0
dim-1, size-220, choose-0
==> Array merge: SgInitializedName:mars_kernel_0_1_C_buf_0_1
Choose factors
dim-1, factor-4
dim-1, factor-4
dim-1, factor-4
dim-1, factor-4
dim-1, factor-0
dim-1, factor-0
dim-1, size-220, choose-0
==> Array merge: SgInitializedName:mars_kernel_0_1_C_buf_0_2
Choose factors
dim-1, factor-4
dim-1, factor-4
dim-1, factor-4
dim-1, factor-4
dim-1, factor-0
dim-1, factor-0
dim-1, size-220, choose-0


 ######Partition transform...
[pragma gen] HLS array_partition variable=B_7_0_buf complete dim=2
[pragma gen] HLS array_partition variable=A_7_0_buf cyclic factor=16 dim=3
[pragma gen] HLS array_partition variable=mars_kernel_0_1_C_buf_0_0 complete dim=2
[pragma gen] HLS array_partition variable=mars_kernel_0_1_C_buf_0_1 complete dim=2
[pragma gen] HLS array_partition variable=mars_kernel_0_1_C_buf_0_2 complete dim=2
INFO: [FGPIP-101] Partitioning array 'B_7_0_buf' on dimension 2 completely


INFO: [FGPIP-101] Partitioning array 'A_7_0_buf' on dimension 3 with factor 16


INFO: [FGPIP-101] Partitioning array 'mars_kernel_0_1_C_buf_0_0' on dimension 2 completely


INFO: [FGPIP-101] Partitioning array 'mars_kernel_0_1_C_buf_0_1' on dimension 2 completely


INFO: [FGPIP-101] Partitioning array 'mars_kernel_0_1_C_buf_0_2' on dimension 2 completely


==============================================
============================================
============================================
============================================
============================================

==> INSERT PIPELINE ANALYSIS
Check: SgInitializedName:C_buf_0
outside can be flatten
[MARS-PARALLEL-CODEGEN] no loop-carried dependency on Array 'C_buf_0'

==> INSERT PARALLEL ANALYSIS

==> INSERT PIPELINE ANALYSIS
Check: SgInitializedName:A_7_0_buf
outside can be flatten
Check: SgInitializedName:B_7_0_buf
outside can be flatten
Check: SgInitializedName:C_buf_0
dep on loop SgForStatement:for(k = 0;k < 240;k++) {...}

==> INSERT PARALLEL ANALYSIS
============================================
============================================
============================================
============================================
============================================
============================================
============================================

-----=# Loop Parallel Optimization End#=----
============================================

Check false dependency pragma for Xilinx flow
====>  index transform: 
SgForStatement:for(j = 0;j < 55;j++) {...}
====>  index transform: 
SgForStatement:for(int j_sub = 0;j_sub < 4;++j_sub) {...}
====>  index transform: 
SgForStatement:for(k = 0;k < 240;k++) {...}
====>  index transform: 
SgForStatement:for(j = 0;j < 220;j++) {...}
mars_opt __dummy__.c __merlinwrapper_kernel_gemm.c __merlinkernel_kernel_gemm.c  -e c -p loop_parallel -a cstd=c99 -a cxxstd=c++11   -a impl_tool=sdaccel -a tool_version=vitis -a effort=standard -a generate_l2_api=on -a debug_mode=debug   -I /opt/merlin/sources/merlin-compiler/trunk/source-opt/include/apint_include -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemm_MEDIUM/_done/work_dir/output/fast/0 -I/home/spouget/iccad_24/autodse_without_tree_reduction/gemm_MEDIUM/_done/work_dir/output/fast/0/gemm_MEDIUM/ -I/opt/merlin/sources/merlin-compiler/trunk//mars-gen/lib/merlin -I /opt/merlin/sources/merlin-compiler/trunk/mars-gen/lib/merlin -a cflags=" -D__SYNTHESIS__  -D_MARS_COMPILER_FLOW_ "
